{"ast":null,"code":"var _jsxFileName = \"/data/test/saitaClientGit/src/pages/Trade/TokenBalance.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { LS_KEYS } from \"../../constant\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TokenBalance = _ref => {\n  _s();\n\n  let {\n    address\n  } = _ref;\n  const [balance, setBalance] = useState(\"\");\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const [isWalletSelected, setIsWalletSelected] = useState(!1);\n  useEffect(_ => {\n    // onload check if wallet is selected\n    const selWalletType = localStorage.getItem(LS_KEYS.WALLET_TYPE);\n\n    if (!selWalletType) {\n      setIsWalletSelected(!1);\n    } else {\n      setIsWalletSelected(!0);\n    }\n  }, []);\n  useEffect(() => {\n    isWalletSelected && init();\n  }, [isUserConnected, address]);\n\n  const init = async () => {\n    try {\n      let res = 0;\n\n      if (address === \"BNB\") {\n        res = await ContractServices.getBNBBalance(isUserConnected);\n        setBalance(res);\n      } else {\n        res = await ContractServices.getTokenBalance(address, isUserConnected);\n        setBalance(res);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"tokenName_textStyle\",\n    children: balance\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TokenBalance, \"98O/uAKFwC0mMvExHX6vKpavqpw=\", false, function () {\n  return [useSelector];\n});\n\n_c = TokenBalance;\nexport default TokenBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenBalance\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","LS_KEYS","ContractServices","TokenBalance","address","balance","setBalance","isUserConnected","state","persist","isWalletSelected","setIsWalletSelected","_","selWalletType","localStorage","getItem","WALLET_TYPE","init","res","getBNBBalance","getTokenBalance","error","console","log"],"sources":["/data/test/saitaClientGit/src/pages/Trade/TokenBalance.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { LS_KEYS } from \"../../constant\";\nimport { ContractServices } from \"../../services/ContractServices\";\n\nconst TokenBalance = ({ address }) => {\n  const [balance, setBalance] = useState(\"\");\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n\n  const [isWalletSelected, setIsWalletSelected] = useState(!1);\n\n  useEffect((_) => {\n    // onload check if wallet is selected\n    const selWalletType = localStorage.getItem(LS_KEYS.WALLET_TYPE);\n    if (!selWalletType) {\n      setIsWalletSelected(!1);\n    } else {\n      setIsWalletSelected(!0);\n    }\n  }, []);\n\n  useEffect(() => {\n    isWalletSelected && init();\n  }, [isUserConnected, address]);\n\n  const init = async () => {\n    try {\n      let res = 0;\n      if (address === \"BNB\") {\n        res = await ContractServices.getBNBBalance(isUserConnected);\n        setBalance(res);\n      } else {\n        res = await ContractServices.getTokenBalance(address, isUserConnected);\n        setBalance(res);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return <span className=\"tokenName_textStyle\">{balance}</span>;\n};\n\nexport default TokenBalance;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;;;AAEA,MAAMC,YAAY,GAAG,QAAiB;EAAA;;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EACpC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAMQ,eAAe,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,eAA1B,CAAnC;EAEA,MAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,CAAC,CAAF,CAAxD;EAEAD,SAAS,CAAEc,CAAD,IAAO;IACf;IACA,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqBd,OAAO,CAACe,WAA7B,CAAtB;;IACA,IAAI,CAACH,aAAL,EAAoB;MAClBF,mBAAmB,CAAC,CAAC,CAAF,CAAnB;IACD,CAFD,MAEO;MACLA,mBAAmB,CAAC,CAAC,CAAF,CAAnB;IACD;EACF,CARQ,EAQN,EARM,CAAT;EAUAb,SAAS,CAAC,MAAM;IACdY,gBAAgB,IAAIO,IAAI,EAAxB;EACD,CAFQ,EAEN,CAACV,eAAD,EAAkBH,OAAlB,CAFM,CAAT;;EAIA,MAAMa,IAAI,GAAG,YAAY;IACvB,IAAI;MACF,IAAIC,GAAG,GAAG,CAAV;;MACA,IAAId,OAAO,KAAK,KAAhB,EAAuB;QACrBc,GAAG,GAAG,MAAMhB,gBAAgB,CAACiB,aAAjB,CAA+BZ,eAA/B,CAAZ;QACAD,UAAU,CAACY,GAAD,CAAV;MACD,CAHD,MAGO;QACLA,GAAG,GAAG,MAAMhB,gBAAgB,CAACkB,eAAjB,CAAiChB,OAAjC,EAA0CG,eAA1C,CAAZ;QACAD,UAAU,CAACY,GAAD,CAAV;MACD;IACF,CATD,CASE,OAAOG,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACD;EACF,CAbD;;EAeA,oBAAO;IAAM,SAAS,EAAC,qBAAhB;IAAA,UAAuChB;EAAvC;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CApCD;;GAAMF,Y;UAEoBH,W;;;KAFpBG,Y;AAsCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}