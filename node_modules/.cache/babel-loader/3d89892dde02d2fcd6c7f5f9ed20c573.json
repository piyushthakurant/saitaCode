{"ast":null,"code":"import { actionTypes } from \"../actions/LoadingActions\";\nconst initialState = {\n  loading: false\n};\n\nconst loading = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.START_LOADING:\n      return {\n        loading: true\n      };\n\n    case actionTypes.STOP_LOADING:\n      return {\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loading;","map":{"version":3,"names":["actionTypes","initialState","loading","state","action","type","START_LOADING","STOP_LOADING"],"sources":["/data/test/saitaClientGit/src/redux/reducers/loading.js"],"sourcesContent":["import { actionTypes } from \"../actions/LoadingActions\";\n\nconst initialState = {\n  loading: false \n};\n\nconst loading = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.START_LOADING:\n      return {loading: true};\n    case actionTypes.STOP_LOADING:\n      return {loading: false};\n    default:\n      return state;\n  }\n};\n\nexport default loading;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,2BAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMA,OAAO,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBF,YAAyB;EAAA,IAAXG,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKL,WAAW,CAACM,aAAjB;MACE,OAAO;QAACJ,OAAO,EAAE;MAAV,CAAP;;IACF,KAAKF,WAAW,CAACO,YAAjB;MACE,OAAO;QAACL,OAAO,EAAE;MAAV,CAAP;;IACF;MACE,OAAOC,KAAP;EANJ;AAQD,CATD;;AAWA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}