{"ast":null,"code":"import { UserService } from \"../../services/UserService\";\nimport { startLoading, stopLoading } from \"./LoadingActions\";\nimport { PersistActions } from \"../actions\";\nimport { ContractServices } from \"../../services/ContractServices\";\nexport function getTokenBalance() {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    ContractServices.tokenBalance().then(res => {\n      resolve(res);\n    }).catch(ex => {\n      reject(ex);\n    });\n  });\n}","map":{"version":3,"names":["UserService","startLoading","stopLoading","PersistActions","ContractServices","getTokenBalance","dispatch","getState","Promise","resolve","reject","tokenBalance","then","res","catch","ex"],"sources":["/data/test/saitaClientGit/src/redux/actions/tokenActions.js"],"sourcesContent":["import { UserService } from \"../../services/UserService\";\nimport { startLoading, stopLoading } from \"./LoadingActions\";\nimport { PersistActions } from \"../actions\"\nimport { ContractServices } from \"../../services/ContractServices\";\n\n\n\nexport function getTokenBalance() {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    ContractServices.tokenBalance()\n      .then((res) => {\n        resolve(res);\n      })\n      .catch((ex) => {\n        reject(ex);\n      });\n\n  });\n}\n\n\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,4BAA5B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,kBAA1C;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAIA,OAAO,SAASC,eAAT,GAA2B;EAChC,OAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC9DN,gBAAgB,CAACO,YAAjB,GACGC,IADH,CACSC,GAAD,IAAS;MACbJ,OAAO,CAACI,GAAD,CAAP;IACD,CAHH,EAIGC,KAJH,CAIUC,EAAD,IAAQ;MACbL,MAAM,CAACK,EAAD,CAAN;IACD,CANH;EAQD,CAT8B,CAA/B;AAUD"},"metadata":{},"sourceType":"module"}