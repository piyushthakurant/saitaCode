{"ast":null,"code":"var _jsxFileName = \"/data/test/saitaClientGit/src/components/Modal/RemoveLiquidity/RemoveLiquidity.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Row, Modal } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DownArrow from \"../../../assets/images/down-arrow.png\";\nimport SaitaIcon from \"../../../assets/images/saitaswap.png\";\nimport BnbIcon from \"../../../assets/images/WBNB-Token-Icon.svg\";\nimport { MAIN_CONTRACT_LIST, TOKEN_LIST, WETH } from \"../../../assets/tokens\";\nimport { addTransaction, searchTokenByNameOrAddress, startLoading, stopLoading, saveUserLpTokens, updateLpToken } from \"../../../redux/actions\";\nimport { ContractServices } from \"../../../services/ContractServices\";\nimport { ExchangeService } from \"../../../services/ExchangeService\";\nimport Button from \"../../Button/Button\";\nimport { toast } from \"../../Toast/Toast\";\nimport \"./RemoveLiquidity.scss\";\nimport { BigNumber } from \"bignumber.js\";\nimport RangeSlider from \"../../../pages/Trade/RangeSlider\";\nimport ModalCurrency from \"../ModalCurrency/ModalCurrency\";\nimport TransactionalModal from \"../../TransactionalModal/TransactionalModal\";\nimport Plusicon from \"../../../assets/images/plus_ico.png\";\nimport iconDropDown from \"../../../assets/images/down-arrow.png\";\nimport SelectCoin from \"../../selectCoin/SelectCoin\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RemoveLiquidity = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const tokenList = useSelector(state => state.persist.tokenList);\n  const deadline = useSelector(state => state.persist.deadline);\n  const slippagePercentage = useSelector(state => state.persist.slippagePercentage);\n  const userLpTokens = useSelector(state => state.persist.userLpTokens);\n  const [modalCurrency, setModalCurrency] = useState(false);\n  const [tokenOne, setTokenOne] = useState(TOKEN_LIST[0]);\n  const [tokenTwo, setTokenTwo] = useState({});\n  const [tokenOneValue, setTokenOneValue] = useState(0);\n  const [tokenTwoValue, setTokenTwoValue] = useState(0);\n  const [sharePoolValue, setSharePoolValue] = useState(100);\n  const [tokenOneCurrency, setCurrencyNameForTokenOne] = useState(TOKEN_LIST[0].symbol);\n  const [tokenTwoCurrency, setCurrencyNameForTokenTwo] = useState(\"Select a currency\");\n  const [tokenOneBalance, setTokenOneBalance] = useState(0);\n  const [tokenTwoBalance, setTokenTwoBalance] = useState(0);\n  const [tokenOneDeposit, setTokenOneDeposit] = useState(0);\n  const [tokenTwoDeposit, setTokenTwoDeposit] = useState(0);\n  const [liquidity, setLiquidity] = useState(0);\n  const [liquidityTemp, setLiquidityTemp] = useState(0);\n  const [tokenType, setTokenType] = useState(\"TK1\");\n  const [showSupplyModal, setShowSupplyModal] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [filteredTokenList, setFilteredTokenList] = useState([]);\n  const [liquidityConfirmation, setLiquidityConfirmation] = useState(false);\n  const [selectedCurrency, setSelectedCurrency] = useState(\"\");\n  const [currentPairAddress, setCurrentPairAddress] = useState(\"\");\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const [screenType, setScreenType] = useState(true); //detailed/simple\n\n  const [rangeValue, setRangeValue] = useState(0);\n  const [approve, setApprove] = useState(false);\n  const [error, setError] = useState(\"Enter an amount\");\n  const [signedData, setSignedData] = useState(null);\n  const [dl, setDl] = useState(0);\n  const [receiveBNB, setReceiveBNB] = useState(true);\n  const [checkBNB, setCheckBNB] = useState(false);\n  const [checkSignature, setCheckSignature] = useState(true);\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n  const [symbolsArr] = useState([\"e\", \"E\", \"+\", \"-\"]);\n  useEffect(() => {\n    setFilteredTokenList(tokenList === null || tokenList === void 0 ? void 0 : tokenList.filter(token => token === null || token === void 0 ? void 0 : token.name.toLowerCase().includes(search.toLowerCase())));\n    init();\n  }, [search, tokenList, props.show]);\n\n  const init = async () => {\n    if (isUserConnected) {\n      const oneBalance = await ContractServices.getBNBBalance(isUserConnected);\n      setTokenOneBalance(oneBalance);\n      const {\n        lptoken\n      } = props;\n\n      if (lptoken) {\n        setCurrentPairAddress(lptoken.pair);\n        setLiquidity(lptoken.balance);\n        setSharePoolValue(lptoken.poolShare);\n\n        if (lptoken.token0Obj) {\n          setTokenOne(lptoken.token0Obj);\n          setCurrencyNameForTokenOne(lptoken.token0Obj.symbol);\n          setTokenOneDeposit(lptoken.token0Deposit);\n          let tokenBal = 0;\n\n          if (lptoken.token0Obj.address === \"BNB\") {\n            tokenBal = oneBalance;\n            setCheckBNB(true);\n          } else {\n            tokenBal = await ContractServices.getTokenBalance(lptoken.token0Obj.address, isUserConnected);\n          }\n\n          setTokenOneBalance(tokenBal);\n        }\n\n        if (lptoken.token1Obj) {\n          setTokenTwo(lptoken.token1Obj);\n          setCurrencyNameForTokenTwo(lptoken.token1Obj.symbol);\n          setTokenTwoDeposit(lptoken.token1Deposit);\n          let tokenBal = 0;\n\n          if (lptoken.token1Obj.address === \"BNB\") {\n            tokenBal = oneBalance;\n            setCheckBNB(true);\n          } else {\n            tokenBal = await ContractServices.getTokenBalance(lptoken.token1Obj.address, isUserConnected);\n          }\n\n          setTokenTwoBalance(tokenBal);\n        }\n      }\n    }\n  };\n\n  const closeTransactionModal = () => {\n    setShowTransactionModal(false);\n    props.backBtn();\n    window.location.reload();\n  };\n\n  const onHandleOpenModal = tokenType => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n\n    setSelectedCurrency(tokenType === \"TK1\" ? tokenTwoCurrency : tokenOneCurrency);\n    setModalCurrency({\n      modalCurrency: true\n    });\n    setTokenType(tokenType);\n  };\n\n  const onHandleSelectCurrency = async (token, selecting) => {\n    const {\n      address,\n      symbol\n    } = token;\n\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n\n    let a1,\n        a2,\n        oneBalance = 0,\n        twoBalance = 0;\n\n    if (selecting === \"TK1\") {\n      a1 = address;\n\n      if (address === \"BNB\") {\n        oneBalance = await ContractServices.getBNBBalance(isUserConnected);\n      } else {\n        oneBalance = await ContractServices.getTokenBalance(address, isUserConnected);\n      }\n\n      setTokenOne(token);\n      setCurrencyNameForTokenOne(symbol);\n      setTokenOneBalance(oneBalance);\n\n      if (tokenTwo.address) {\n        a2 = tokenTwo.address;\n      }\n    }\n\n    if (selecting === \"TK2\") {\n      a2 = address;\n\n      if (address === \"BNB\") {\n        twoBalance = await ContractServices.getBNBBalance(isUserConnected);\n      } else {\n        twoBalance = await ContractServices.getTokenBalance(address, isUserConnected);\n      }\n\n      setTokenTwo(token);\n      setCurrencyNameForTokenTwo(symbol);\n      setTokenTwoBalance(twoBalance);\n\n      if (tokenOne.address) {\n        a1 = tokenOne.address;\n      }\n    }\n\n    setModalCurrency(!modalCurrency);\n    setSearch(\"\");\n    setFilteredTokenList(tokenList);\n\n    if (a1 && a2) {\n      let currentPairAddress;\n\n      if (a1 === \"BNB\") {\n        a1 = WETH; //WETH\n\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      } else if (a2 === \"BNB\") {\n        a2 = WETH; //WETH\n\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      } else {\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      }\n\n      if (currentPairAddress !== \"0x0000000000000000000000000000000000000000\") {\n        setCurrentPairAddress(currentPairAddress);\n        const lpTokenBalance = await ContractServices.getTokenBalance(currentPairAddress, isUserConnected);\n        setLiquidity(lpTokenBalance);\n        setLiquidityTemp(0);\n        const totalSupply = await ContractServices.getTotalSupply(currentPairAddress);\n        const ratio = lpTokenBalance / totalSupply;\n        const reserves = await ExchangeService.getReserves(currentPairAddress); //lp deposit\n\n        let token0Deposit = ratio * (reserves[\"_reserve0\"] / 10 ** tokenOne.decimals);\n        let token1Deposit = ratio * (reserves[\"_reserve1\"] / 10 ** tokenTwo.decimals);\n        setTokenOneDeposit(token0Deposit);\n        setTokenTwoDeposit(token1Deposit);\n      } else {\n        setCurrentPairAddress(\"\");\n        setLiquidity(0);\n        setLiquidityTemp(0);\n        setTokenOneValue(0);\n        setTokenTwoValue(0);\n      }\n    }\n  };\n\n  const handleSearchToken = async data => {\n    try {\n      const res = await dispatch(searchTokenByNameOrAddress(data));\n      setFilteredTokenList(res);\n    } catch (error) {\n      toast.error(\"Something went wrong!\");\n    }\n  };\n\n  const handleLiquidityChange = (value, totalValue, type) => {\n    if (value > 0) {\n      if (value >= totalValue) {\n        value = totalValue;\n      }\n\n      const percentage = Number((value / totalValue * 100).toFixed(2));\n      handleChange(percentage, type, value);\n    }\n  };\n\n  const handleChange2 = value => {\n    if (value > 0) {\n      setRangeValue(value); // console.log('value, tokenOneDeposit, tokenTwoDeposit', value, tokenOneDeposit, tokenTwoDeposit);\n\n      const liquidityTemp = value / 100 * liquidity;\n      setLiquidityTemp(liquidityTemp);\n      const tokenOneValue = value / 100 * tokenOneDeposit;\n      setTokenOneValue(tokenOneValue);\n      const tokenTwoValue = value / 100 * tokenTwoDeposit;\n      setTokenTwoValue(tokenTwoValue); //enable approve button\n\n      setApprove(true);\n      setError(\"Remove\");\n    } else {\n      setApprove(false);\n    }\n  };\n\n  const handleChange = (value, type, oldValue) => {\n    if (value > 0) {\n      setRangeValue(value);\n\n      if (type === \"pair\") {\n        setLiquidityTemp(oldValue);\n        const tokenTwoValue = value / 100 * tokenTwoDeposit;\n        setTokenTwoValue(tokenTwoValue);\n        const tokenOneValue = value / 100 * tokenOneDeposit;\n        setTokenOneValue(tokenOneValue);\n      }\n\n      if (type === \"TK1\") {\n        const liquidityTemp = value / 100 * liquidity;\n        setLiquidityTemp(liquidityTemp);\n        const tokenTwoValue = value / 100 * tokenTwoDeposit;\n        setTokenTwoValue(tokenTwoValue);\n        setTokenOneValue(oldValue);\n      }\n\n      if (type === \"TK2\") {\n        const liquidityTemp = value / 100 * liquidity;\n        setLiquidityTemp(liquidityTemp);\n        const tokenOneValue = value / 100 * tokenOneDeposit;\n        setTokenOneValue(tokenOneValue);\n        setTokenTwoValue(oldValue);\n      } //enable approve button\n\n\n      setApprove(true);\n      setError(\"Remove\");\n    } else {\n      setApprove(false);\n    }\n  }; //sign signature\n\n\n  const approveTransaction = async () => {\n    setApprove(false);\n    let value = Math.floor(liquidityTemp * 10 ** 18);\n    value = BigNumber(value).toFixed();\n\n    if (rangeValue === 100) {\n      //fixing for 100%\n      value = await ContractServices.getLiquidity100Value(currentPairAddress, isUserConnected);\n    }\n\n    let dl = Math.floor(new Date().getTime() / 1000);\n    dl = dl + deadline * 60;\n    setDl(dl);\n    const data = {\n      owner: isUserConnected,\n      spender: MAIN_CONTRACT_LIST.router.address,\n      value,\n      deadline: dl\n    };\n    console.log(\"[tur461] data to be signed:\", { ...data,\n      currentPairAddress\n    });\n\n    try {\n      const res = await ExchangeService.signRemoveTransaction(data, currentPairAddress);\n\n      if (res.message) {\n        if (res.message.indexOf(\"eth_signTypedData_v4\") > -1) {\n          setCheckSignature(false);\n          setError(\"Remove\");\n          await handleTokenApproval();\n          return;\n        }\n\n        if (res.message.indexOf(\"User denied\") > -1) {\n          setApprove(false);\n          return toast.error(\"User denied for approval.\");\n        }\n\n        return toast.error(res.message);\n      }\n\n      setSignedData(res);\n      setError(null);\n    } catch (err) {\n      setApprove(true);\n      setError(err.message);\n    }\n  };\n\n  const confirmRemoveLiquidity = () => {\n    if (!error) {\n      setShowSupplyModal(true);\n    }\n  }; //for non signature remove liquidity\n\n\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n\n    if (approvalConfirmation) {\n      return toast.info(\"Token approval is processing\");\n    } // const value = (2*256 - 1).toString();\n\n\n    const value = \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n    const {\n      lptoken\n    } = props;\n\n    if (lptoken) {\n      try {\n        dispatch(startLoading());\n        let allowance = await ContractServices.allowanceToken(lptoken.pair, MAIN_CONTRACT_LIST.router.address, isUserConnected);\n        allowance = Number(allowance);\n\n        if (!(allowance > 0)) {\n          const r = await ContractServices.approveToken(isUserConnected, value, MAIN_CONTRACT_LIST.router.address, lptoken.pair);\n\n          if (r.message.indexOf(\"Rejected\") > -1) {\n            toast.error(\"User denied transaction signature.\");\n            setError(\"Remove\");\n            setApprove(true);\n          } else if (r.code == 4001) {\n            toast.error(\"User denied transaction signature.\");\n            setError(\"Remove\");\n          } else {\n            setApprovalConfirmation(true);\n            let data = {\n              message: `Approve ${lptoken.symbol}`,\n              tx: r.transactionHash\n            };\n            dispatch(addTransaction(data));\n            setApprovalConfirmation(false);\n            setError(null);\n          }\n        } else {\n          setApprove(false);\n          setError(null);\n        }\n\n        dispatch(stopLoading());\n      } catch (err) {\n        setApprovalConfirmation(false);\n        dispatch(stopLoading());\n        toast.error(\"Transaction Reverted!\");\n        setError(\"Error\");\n        setApprove(true);\n      }\n    }\n  };\n\n  const handleLpTokens = async () => {\n    const result = userLpTokens.filter(lpToken => lpToken.pair !== props.lptoken.pair);\n    dispatch(saveUserLpTokens(result));\n  };\n\n  const updateLpTokens = async () => {\n    const {\n      lptoken\n    } = props;\n    const lpdata = {\n      pair: lptoken.pair,\n      decimals: lptoken.decimals,\n      name: \"Import LPs\",\n      pairName: lptoken.pairName,\n      symbol: lptoken.symbol,\n      token0: lptoken.token0,\n      token1: lptoken.token1\n    };\n    dispatch(updateLpToken(lpdata));\n  };\n\n  const removeLiquidity = async () => {\n    // console.log(\"hi\");\n    const acc = isUserConnected;\n\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n\n    if (liquidityConfirmation) {\n      return toast.info(\"Transaction is processing!\");\n    }\n\n    setLiquidityConfirmation(true);\n    dispatch(startLoading());\n    let value = 0,\n        checkBNB = false,\n        token;\n\n    if (tokenOne.address === \"BNB\") {\n      checkBNB = true;\n      value = tokenOneValue;\n      token = tokenTwo.address;\n    }\n\n    if (tokenTwo.address === \"BNB\") {\n      checkBNB = true;\n      value = tokenTwoValue;\n      token = tokenOne.address;\n    }\n\n    if (value > 0) {\n      value = Math.floor(value * 10 ** 18);\n      value = BigNumber(value).toFixed();\n    }\n\n    if (checkBNB) {\n      let amountETHMin = BigNumber(Math.floor(Number(value) - Number(value) * slippagePercentage / 100)).toFixed();\n      let amountTokenMin = \"\";\n\n      if (tokenOne.address === \"BNB\") {\n        let a = tokenTwoValue - tokenTwoValue * slippagePercentage / 100;\n        a = a * 10 ** tokenTwo.decimals;\n        amountTokenMin = BigNumber(Math.floor(a)).toFixed();\n      }\n\n      if (tokenTwo.address === \"BNB\") {\n        let a = tokenOneValue - tokenOneValue * slippagePercentage / 100;\n        a = a * 10 ** tokenOne.decimals;\n        amountTokenMin = BigNumber(Math.floor(a)).toFixed();\n      }\n\n      let liquidity = Math.floor(liquidityTemp * 10 ** 18);\n      liquidity = BigNumber(liquidity).toFixed();\n\n      if (rangeValue === 100) {\n        //fixing for 100%\n        liquidity = await ContractServices.getLiquidity100Value(currentPairAddress, isUserConnected);\n      }\n\n      let r, s, v;\n\n      if (signedData) {\n        console.log(signedData, \"signedData\");\n        r = signedData.r;\n        s = signedData.s;\n        v = signedData.v;\n      }\n\n      console.log(\"before data\");\n      const data = {\n        token,\n        liquidity,\n        amountTokenMin,\n        amountETHMin,\n        to: isUserConnected,\n        deadline: dl,\n        value,\n        approveMax: false,\n        r,\n        s,\n        v,\n        checkSignature\n      };\n      console.log(\"[tur461] signed data:\", { ...data,\n        currentPairAddress\n      });\n\n      try {\n        const result = await ExchangeService.removeLiquidityETHWithPermit(data, updateLpTokens); // console.log(result, 'remove liquidity transaction');\n\n        dispatch(stopLoading());\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n          setShowSupplyModal(false);\n          if (rangeValue === 100) handleLpTokens();\n          const data = {\n            message: `Remove ${tokenOne.symbol} and ${tokenTwo.symbol}`,\n            tx: result\n          };\n          dispatch(addTransaction(data));\n        }\n\n        setLiquidityConfirmation(false);\n      } catch (err) {\n        console.log(err);\n        dispatch(stopLoading());\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n        setLiquidityConfirmation(false);\n      }\n    } else {\n      let amountADesired = tokenOneValue;\n      let amountBDesired = tokenTwoValue;\n      let amountAMin = amountADesired - amountADesired * slippagePercentage / 100;\n      let amountBMin = amountBDesired - amountBDesired * slippagePercentage / 100;\n      amountADesired = BigNumber(Math.floor(amountADesired * 10 ** tokenOne.decimals)).toFixed();\n      amountBDesired = BigNumber(Math.floor(amountBDesired * 10 ** tokenTwo.decimals)).toFixed();\n      amountAMin = BigNumber(Math.floor(amountAMin * 10 ** tokenOne.decimals)).toFixed();\n      amountBMin = BigNumber(Math.floor(amountBMin * 10 ** tokenTwo.decimals)).toFixed();\n      let liquidity = Math.floor(liquidityTemp * 10 ** 18);\n      liquidity = BigNumber(liquidity).toFixed();\n\n      if (rangeValue === 100) {\n        //fixing for 100%\n        liquidity = await ContractServices.getLiquidity100Value(currentPairAddress, isUserConnected);\n      }\n\n      let r, s, v;\n\n      if (signedData) {\n        r = signedData.r;\n        s = signedData.s;\n        v = signedData.v;\n      }\n\n      const data = {\n        tokenA: tokenOne.address,\n        tokenB: tokenTwo.address,\n        liquidity,\n        amountAMin,\n        amountBMin,\n        to: isUserConnected,\n        deadline: dl,\n        value,\n        approveMax: false,\n        r,\n        s,\n        v,\n        checkSignature\n      };\n\n      try {\n        const result = await ExchangeService.removeLiquidityWithPermit(data); // console.log(result, 'remove liquidity transaction');\n\n        dispatch(stopLoading());\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n          setShowSupplyModal(false);\n          if (rangeValue === 100) handleLpTokens();\n          const data = {\n            message: `Remove ${tokenOne.symbol} and ${tokenTwo.symbol}`,\n            tx: result\n          };\n          dispatch(addTransaction(data));\n        }\n\n        setLiquidityConfirmation(false);\n      } catch (err) {\n        console.log(err);\n        dispatch(stopLoading());\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n        setLiquidityConfirmation(false);\n      }\n    }\n  };\n\n  const calculateFractionRow = tokenType => {\n    let r = 0;\n    let symbol1 = tokenOne.symbol,\n        symbol2 = tokenTwo.symbol;\n\n    if (symbol1 === \"BNB\") {\n      if (receiveBNB) {\n        symbol1 = \"BNB\";\n      } else {\n        symbol1 = \"WBNB\";\n      }\n    }\n\n    if (symbol2 === \"BNB\") {\n      if (receiveBNB) {\n        symbol2 = \"BNB\";\n      } else {\n        symbol2 = \"WBNB\";\n      }\n    }\n\n    if (tokenType === \"TK1\") {\n      if (tokenOneDeposit === 0) return 0;\n      r = tokenTwoDeposit / tokenOneDeposit;\n      r = Number(r.toFixed(5));\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"1 \", symbol1, \" = \", r, \" \", symbol2]\n      }, void 0, true);\n    }\n\n    if (tokenType === \"TK2\") {\n      if (tokenTwoDeposit === 0) return 0;\n      r = tokenOneDeposit / tokenTwoDeposit;\n      r = Number(r.toFixed(5));\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"1 \", symbol2, \" = \", r, \" \", symbol1]\n      }, void 0, true);\n    }\n  };\n\n  useEffect(() => {}, [tokenTwoValue]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    scrollable: true,\n    className: \"selectCurrency_modal removeLiq_Modal\",\n    show: props.show,\n    onHide: props.handleClose,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Remove Liquidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tokenName\",\n      children: /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"removeAmnt comnBrdr\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"d-flex\",\n          children: [\"Amount\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ms-auto\",\n            onClick: () => setScreenType(!screenType),\n            children: screenType ? \"Detailed\" : \"Simple\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this), screenType ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"slidecontainer\",\n            children: /*#__PURE__*/_jsxDEV(RangeSlider, {\n              rangeValue: rangeValue,\n              handleChange: handleChange2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"amountSelect\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleChange2(25),\n              children: \"25%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"mx-1\",\n              onClick: () => handleChange2(50),\n              children: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"me-1\",\n              onClick: () => handleChange2(75),\n              children: \"75%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleChange2(100),\n              children: \"Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [rangeValue, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this), screenType ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center downArrow\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: DownArrow,\n            alt: \"down_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"receiveAmnt comnBrdr\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: tokenOneValue.toFixed(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 768,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: tokenTwoValue.toFixed(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-end leftSide\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: tokenOne.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: tokenTwo.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 17\n            }, this), checkBNB && /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"text-end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [currentPairAddress && /*#__PURE__*/_jsxDEV(Col, {\n          className: `selectCoin_style ${props.className}`,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mx-0\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              className: \"selectCoin_left_style\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 796,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                onKeyDown: evt => {\n                  symbolsArr.includes(evt.key) && evt.preventDefault();\n                },\n                onChange: e => handleLiquidityChange(Number(e.target.value), liquidity, \"pair\"),\n                min: 0,\n                placeholder: \"0.0\",\n                value: liquidityTemp // min={0}\n                ,\n                minLength: 1,\n                maxLength: 79,\n                autoCorrect: \"off\",\n                autoComplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 795,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              className: \"selectCoin_right_style\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Balance: \", liquidity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 820,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                className: \"select_buttonStyle\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: props.onClick,\n                  children: [props.max && /*#__PURE__*/_jsxDEV(\"strong\", {\n                    onClick: props.onMax,\n                    children: \"MAX\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 824,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\" \", props.coinImage && /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: props.coinImage,\n                      className: \"coin_Img\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 830,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      style: {\n                        fontSize: props.selectTokenText ? \"\" : \"\"\n                      },\n                      children: props.value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 832,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 827,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"selectDropDownStyle\",\n                    src: tokenOne.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 840,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"selectDropDownStyle\",\n                    src: tokenTwo.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 844,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"currencyName_textStyle\",\n                    children: [tokenOne.symbol, \":\", tokenTwo.symbol]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 848,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center downArrow\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: DownArrow,\n            alt: \"down_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 859,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectCoin, {\n          label: `Balance: ${tokenOneBalance}`,\n          coinImage: tokenOne === null || tokenOne === void 0 ? void 0 : tokenOne.icon,\n          value: tokenOneCurrency,\n          onClick: () => onHandleOpenModal(\"TK1\"),\n          inputLabel: \"Output\",\n          className: \"mb-0\",\n          placeholder: \"0.0\",\n          onChange: e => handleLiquidityChange(Number(e.target.value), tokenOneDeposit, \"TK1\"),\n          max: false,\n          defaultValue: tokenOneValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"text-center downArrow\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Plusicon,\n            alt: \"down_icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectCoin, {\n          label: `Balance: ${tokenTwoBalance}`,\n          coinImage: tokenTwo === null || tokenTwo === void 0 ? void 0 : tokenTwo.icon,\n          value: tokenTwoCurrency,\n          onClick: () => onHandleOpenModal(\"TK2\"),\n          inputLabel: \"Output\",\n          className: \"mb-0\",\n          placeholder: \"0.0\",\n          onChange: e => handleLiquidityChange(Number(e.target.value), tokenTwoDeposit, \"TK2\"),\n          max: false,\n          defaultValue: tokenTwoValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"btnCol\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"approveBtn\",\n          title: \"Approve\",\n          onClick: () => approveTransaction(),\n          disabled: !approve\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"approveBtn\",\n          title: error ? error : \"Remove\",\n          onClick: () => confirmRemoveLiquidity(),\n          disabled: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCurrency, {\n        show: modalCurrency,\n        tokenList: filteredTokenList,\n        handleClose: () => setModalCurrency(!modalCurrency),\n        selectCurrency: onHandleSelectCurrency,\n        searchToken: handleSearchToken,\n        searchByName: setSearch,\n        tokenType: tokenType,\n        currencyName: selectedCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCurrency, {\n        show: modalCurrency,\n        tokenList: filteredTokenList,\n        handleClose: () => setModalCurrency(!modalCurrency),\n        selectCurrency: onHandleSelectCurrency,\n        searchToken: handleSearchToken,\n        searchByName: setSearch,\n        tokenType: tokenType,\n        currencyName: selectedCurrency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        centered: true,\n        scrollable: true,\n        className: \"connect_wallet\",\n        show: showSupplyModal,\n        onHide: () => setShowSupplyModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"You will receive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 965,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              className: \"baseToken_style\",\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: tokenOneValue.toFixed(5)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 973,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: tokenOne.icon,\n                        alt: \"icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 975,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                        children: tokenOne.symbol\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 976,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 974,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 972,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      className: \"plus\",\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 980,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 979,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                      children: tokenTwoValue.toFixed(5)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 983,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        src: tokenTwo.icon,\n                        alt: \"icon\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 985,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                        children: tokenTwo.symbol\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 986,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 984,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 982,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Output is estimated. If the price changes by more than\", \" \", slippagePercentage, \"% your transaction will revert.\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 989,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 971,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [tokenOneCurrency, \" Deposit: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\" \", tokenOneValue]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 996,\n                      columnNumber: 51\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 995,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [tokenTwoCurrency, \" Deposit:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: tokenTwoValue\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 999,\n                      columnNumber: 50\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 998,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [\"Price\", /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [1, \"\\xA0\", tokenOneCurrency, \" =\", \" \", calculateFractionRow(\"TK1\"), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1005,\n                        columnNumber: 55\n                      }, this), 1, \"\\xA0\", tokenTwoCurrency, \" =\", \" \", calculateFractionRow(\"TK2\")]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1003,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1001,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 994,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  title: isUserConnected ? \"Confirm\" : \"Unlock Wallet\",\n                  className: \"remove_liq_btn\",\n                  disabled: liquidityConfirmation,\n                  onClick: () => removeLiquidity()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 970,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 957,\n        columnNumber: 9\n      }, this), showTransactionModal && /*#__PURE__*/_jsxDEV(TransactionalModal, {\n        closeTransactionModal: closeTransactionModal,\n        txHash: txHash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 11\n      }, this), currentPairAddress && /*#__PURE__*/_jsxDEV(Col, {\n        className: \"totalPrice\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-start\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"LP TOKENS IN YOUR WALLET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: tokenOne.icon,\n                alt: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tokenTwo.icon,\n                alt: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 19\n              }, this), \" \", tokenOne.symbol, \"/\", tokenTwo === null || tokenTwo === void 0 ? void 0 : tokenTwo.symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: liquidity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1047,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [tokenOne.symbol, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [tokenOneDeposit.toFixed(5), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [tokenTwo === null || tokenTwo === void 0 ? void 0 : tokenTwo.symbol, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: tokenTwoDeposit.toFixed(5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1055,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 697,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RemoveLiquidity, \"7OoCMWwltByiLvOFCW6v95yBVMY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RemoveLiquidity;\nexport default RemoveLiquidity;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoveLiquidity\");","map":{"version":3,"names":["React","useEffect","useState","Col","Row","Modal","useDispatch","useSelector","DownArrow","SaitaIcon","MAIN_CONTRACT_LIST","TOKEN_LIST","WETH","addTransaction","searchTokenByNameOrAddress","startLoading","stopLoading","saveUserLpTokens","updateLpToken","ContractServices","ExchangeService","Button","toast","BigNumber","RangeSlider","ModalCurrency","TransactionalModal","Plusicon","iconDropDown","SelectCoin","RemoveLiquidity","props","dispatch","isUserConnected","state","persist","tokenList","deadline","slippagePercentage","userLpTokens","modalCurrency","setModalCurrency","tokenOne","setTokenOne","tokenTwo","setTokenTwo","tokenOneValue","setTokenOneValue","tokenTwoValue","setTokenTwoValue","sharePoolValue","setSharePoolValue","tokenOneCurrency","setCurrencyNameForTokenOne","symbol","tokenTwoCurrency","setCurrencyNameForTokenTwo","tokenOneBalance","setTokenOneBalance","tokenTwoBalance","setTokenTwoBalance","tokenOneDeposit","setTokenOneDeposit","tokenTwoDeposit","setTokenTwoDeposit","liquidity","setLiquidity","liquidityTemp","setLiquidityTemp","tokenType","setTokenType","showSupplyModal","setShowSupplyModal","search","setSearch","filteredTokenList","setFilteredTokenList","liquidityConfirmation","setLiquidityConfirmation","selectedCurrency","setSelectedCurrency","currentPairAddress","setCurrentPairAddress","showTransactionModal","setShowTransactionModal","txHash","setTxHash","screenType","setScreenType","rangeValue","setRangeValue","approve","setApprove","error","setError","signedData","setSignedData","dl","setDl","receiveBNB","setReceiveBNB","checkBNB","setCheckBNB","checkSignature","setCheckSignature","approvalConfirmation","setApprovalConfirmation","symbolsArr","filter","token","name","toLowerCase","includes","init","show","oneBalance","getBNBBalance","lptoken","pair","balance","poolShare","token0Obj","token0Deposit","tokenBal","address","getTokenBalance","token1Obj","token1Deposit","closeTransactionModal","backBtn","window","location","reload","onHandleOpenModal","onHandleSelectCurrency","selecting","a1","a2","twoBalance","getPair","lpTokenBalance","totalSupply","getTotalSupply","ratio","reserves","getReserves","decimals","handleSearchToken","data","res","handleLiquidityChange","value","totalValue","type","percentage","Number","toFixed","handleChange","handleChange2","oldValue","approveTransaction","Math","floor","getLiquidity100Value","Date","getTime","owner","spender","router","console","log","signRemoveTransaction","message","indexOf","handleTokenApproval","err","confirmRemoveLiquidity","acc","getDefaultAccount","info","allowance","allowanceToken","r","approveToken","code","tx","transactionHash","handleLpTokens","result","lpToken","updateLpTokens","lpdata","pairName","token0","token1","removeLiquidity","amountETHMin","amountTokenMin","a","s","v","to","approveMax","removeLiquidityETHWithPermit","web3ErrorHandle","amountADesired","amountBDesired","amountAMin","amountBMin","tokenA","tokenB","removeLiquidityWithPermit","calculateFractionRow","symbol1","symbol2","handleClose","className","evt","key","preventDefault","e","target","onClick","max","onMax","coinImage","fontSize","selectTokenText","icon"],"sources":["/data/test/saitaClientGit/src/components/Modal/RemoveLiquidity/RemoveLiquidity.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Col, Row, Modal } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DownArrow from \"../../../assets/images/down-arrow.png\";\nimport SaitaIcon from \"../../../assets/images/saitaswap.png\";\nimport BnbIcon from \"../../../assets/images/WBNB-Token-Icon.svg\";\nimport { MAIN_CONTRACT_LIST, TOKEN_LIST, WETH } from \"../../../assets/tokens\";\nimport {\n  addTransaction,\n  searchTokenByNameOrAddress,\n  startLoading,\n  stopLoading,\n  saveUserLpTokens,\n  updateLpToken,\n} from \"../../../redux/actions\";\nimport { ContractServices } from \"../../../services/ContractServices\";\nimport { ExchangeService } from \"../../../services/ExchangeService\";\nimport Button from \"../../Button/Button\";\nimport { toast } from \"../../Toast/Toast\";\nimport \"./RemoveLiquidity.scss\";\nimport { BigNumber } from \"bignumber.js\";\nimport RangeSlider from \"../../../pages/Trade/RangeSlider\";\nimport ModalCurrency from \"../ModalCurrency/ModalCurrency\";\nimport TransactionalModal from \"../../TransactionalModal/TransactionalModal\";\nimport Plusicon from \"../../../assets/images/plus_ico.png\";\nimport iconDropDown from \"../../../assets/images/down-arrow.png\";\nimport SelectCoin from \"../../selectCoin/SelectCoin\";\n\nconst RemoveLiquidity = (props) => {\n  const dispatch = useDispatch();\n\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n  const tokenList = useSelector((state) => state.persist.tokenList);\n  const deadline = useSelector((state) => state.persist.deadline);\n  const slippagePercentage = useSelector(\n    (state) => state.persist.slippagePercentage\n  );\n  const userLpTokens = useSelector((state) => state.persist.userLpTokens);\n\n  const [modalCurrency, setModalCurrency] = useState(false);\n  const [tokenOne, setTokenOne] = useState(TOKEN_LIST[0]);\n  const [tokenTwo, setTokenTwo] = useState({});\n  const [tokenOneValue, setTokenOneValue] = useState(0);\n  const [tokenTwoValue, setTokenTwoValue] = useState(0);\n  const [sharePoolValue, setSharePoolValue] = useState(100);\n  const [tokenOneCurrency, setCurrencyNameForTokenOne] = useState(\n    TOKEN_LIST[0].symbol\n  );\n  const [tokenTwoCurrency, setCurrencyNameForTokenTwo] =\n    useState(\"Select a currency\");\n  const [tokenOneBalance, setTokenOneBalance] = useState(0);\n  const [tokenTwoBalance, setTokenTwoBalance] = useState(0);\n  const [tokenOneDeposit, setTokenOneDeposit] = useState(0);\n  const [tokenTwoDeposit, setTokenTwoDeposit] = useState(0);\n\n  const [liquidity, setLiquidity] = useState(0);\n  const [liquidityTemp, setLiquidityTemp] = useState(0);\n  const [tokenType, setTokenType] = useState(\"TK1\");\n  const [showSupplyModal, setShowSupplyModal] = useState(false);\n\n  const [search, setSearch] = useState(\"\");\n  const [filteredTokenList, setFilteredTokenList] = useState([]);\n  const [liquidityConfirmation, setLiquidityConfirmation] = useState(false);\n\n  const [selectedCurrency, setSelectedCurrency] = useState(\"\");\n\n  const [currentPairAddress, setCurrentPairAddress] = useState(\"\");\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n\n  const [screenType, setScreenType] = useState(true); //detailed/simple\n  const [rangeValue, setRangeValue] = useState(0);\n  const [approve, setApprove] = useState(false);\n  const [error, setError] = useState(\"Enter an amount\");\n  const [signedData, setSignedData] = useState(null);\n  const [dl, setDl] = useState(0);\n  const [receiveBNB, setReceiveBNB] = useState(true);\n  const [checkBNB, setCheckBNB] = useState(false);\n  const [checkSignature, setCheckSignature] = useState(true);\n\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n\n  const [symbolsArr] = useState([\"e\", \"E\", \"+\", \"-\"]);\n\n  useEffect(() => {\n    setFilteredTokenList(\n      tokenList?.filter((token) =>\n        token?.name.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n    init();\n  }, [search, tokenList, props.show]);\n\n  const init = async () => {\n    if (isUserConnected) {\n      const oneBalance = await ContractServices.getBNBBalance(isUserConnected);\n      setTokenOneBalance(oneBalance);\n\n      const { lptoken } = props;\n      if (lptoken) {\n        setCurrentPairAddress(lptoken.pair);\n        setLiquidity(lptoken.balance);\n        setSharePoolValue(lptoken.poolShare);\n        if (lptoken.token0Obj) {\n          setTokenOne(lptoken.token0Obj);\n          setCurrencyNameForTokenOne(lptoken.token0Obj.symbol);\n          setTokenOneDeposit(lptoken.token0Deposit);\n          let tokenBal = 0;\n          if (lptoken.token0Obj.address === \"BNB\") {\n            tokenBal = oneBalance;\n            setCheckBNB(true);\n          } else {\n            tokenBal = await ContractServices.getTokenBalance(\n              lptoken.token0Obj.address,\n              isUserConnected\n            );\n          }\n          setTokenOneBalance(tokenBal);\n        }\n        if (lptoken.token1Obj) {\n          setTokenTwo(lptoken.token1Obj);\n          setCurrencyNameForTokenTwo(lptoken.token1Obj.symbol);\n          setTokenTwoDeposit(lptoken.token1Deposit);\n          let tokenBal = 0;\n          if (lptoken.token1Obj.address === \"BNB\") {\n            tokenBal = oneBalance;\n            setCheckBNB(true);\n          } else {\n            tokenBal = await ContractServices.getTokenBalance(\n              lptoken.token1Obj.address,\n              isUserConnected\n            );\n          }\n          setTokenTwoBalance(tokenBal);\n        }\n      }\n    }\n  };\n\n  const closeTransactionModal = () => {\n    setShowTransactionModal(false);\n    props.backBtn();\n    window.location.reload();\n  };\n\n  const onHandleOpenModal = (tokenType) => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n    setSelectedCurrency(\n      tokenType === \"TK1\" ? tokenTwoCurrency : tokenOneCurrency\n    );\n    setModalCurrency({\n      modalCurrency: true,\n    });\n    setTokenType(tokenType);\n  };\n  const onHandleSelectCurrency = async (token, selecting) => {\n    const { address, symbol } = token;\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n    let a1,\n      a2,\n      oneBalance = 0,\n      twoBalance = 0;\n    if (selecting === \"TK1\") {\n      a1 = address;\n      if (address === \"BNB\") {\n        oneBalance = await ContractServices.getBNBBalance(isUserConnected);\n      } else {\n        oneBalance = await ContractServices.getTokenBalance(\n          address,\n          isUserConnected\n        );\n      }\n      setTokenOne(token);\n      setCurrencyNameForTokenOne(symbol);\n      setTokenOneBalance(oneBalance);\n      if (tokenTwo.address) {\n        a2 = tokenTwo.address;\n      }\n    }\n    if (selecting === \"TK2\") {\n      a2 = address;\n      if (address === \"BNB\") {\n        twoBalance = await ContractServices.getBNBBalance(isUserConnected);\n      } else {\n        twoBalance = await ContractServices.getTokenBalance(\n          address,\n          isUserConnected\n        );\n      }\n      setTokenTwo(token);\n      setCurrencyNameForTokenTwo(symbol);\n      setTokenTwoBalance(twoBalance);\n      if (tokenOne.address) {\n        a1 = tokenOne.address;\n      }\n    }\n    setModalCurrency(!modalCurrency);\n    setSearch(\"\");\n    setFilteredTokenList(tokenList);\n\n    if (a1 && a2) {\n      let currentPairAddress;\n      if (a1 === \"BNB\") {\n        a1 = WETH; //WETH\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      } else if (a2 === \"BNB\") {\n        a2 = WETH; //WETH\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      } else {\n        currentPairAddress = await ExchangeService.getPair(a1, a2);\n      }\n      if (currentPairAddress !== \"0x0000000000000000000000000000000000000000\") {\n        setCurrentPairAddress(currentPairAddress);\n        const lpTokenBalance = await ContractServices.getTokenBalance(\n          currentPairAddress,\n          isUserConnected\n        );\n        setLiquidity(lpTokenBalance);\n        setLiquidityTemp(0);\n\n        const totalSupply = await ContractServices.getTotalSupply(\n          currentPairAddress\n        );\n        const ratio = lpTokenBalance / totalSupply;\n\n        const reserves = await ExchangeService.getReserves(currentPairAddress);\n\n        //lp deposit\n        let token0Deposit =\n          ratio * (reserves[\"_reserve0\"] / 10 ** tokenOne.decimals);\n        let token1Deposit =\n          ratio * (reserves[\"_reserve1\"] / 10 ** tokenTwo.decimals);\n\n        setTokenOneDeposit(token0Deposit);\n        setTokenTwoDeposit(token1Deposit);\n      } else {\n        setCurrentPairAddress(\"\");\n        setLiquidity(0);\n        setLiquidityTemp(0);\n        setTokenOneValue(0);\n        setTokenTwoValue(0);\n      }\n    }\n  };\n\n  const handleSearchToken = async (data) => {\n    try {\n      const res = await dispatch(searchTokenByNameOrAddress(data));\n      setFilteredTokenList(res);\n    } catch (error) {\n      toast.error(\"Something went wrong!\");\n    }\n  };\n  const handleLiquidityChange = (value, totalValue, type) => {\n    if (value > 0) {\n      if (value >= totalValue) {\n        value = totalValue;\n      }\n      const percentage = Number(((value / totalValue) * 100).toFixed(2));\n      handleChange(percentage, type, value);\n    }\n  };\n\n  const handleChange2 = (value) => {\n    if (value > 0) {\n      setRangeValue(value);\n\n      // console.log('value, tokenOneDeposit, tokenTwoDeposit', value, tokenOneDeposit, tokenTwoDeposit);\n\n      const liquidityTemp = (value / 100) * liquidity;\n      setLiquidityTemp(liquidityTemp);\n\n      const tokenOneValue = (value / 100) * tokenOneDeposit;\n      setTokenOneValue(tokenOneValue);\n\n      const tokenTwoValue = (value / 100) * tokenTwoDeposit;\n      setTokenTwoValue(tokenTwoValue);\n\n      //enable approve button\n      setApprove(true);\n      setError(\"Remove\");\n    } else {\n      setApprove(false);\n    }\n  };\n\n  const handleChange = (value, type, oldValue) => {\n    if (value > 0) {\n      setRangeValue(value);\n      if (type === \"pair\") {\n        setLiquidityTemp(oldValue);\n        const tokenTwoValue = (value / 100) * tokenTwoDeposit;\n        setTokenTwoValue(tokenTwoValue);\n        const tokenOneValue = (value / 100) * tokenOneDeposit;\n        setTokenOneValue(tokenOneValue);\n      }\n      if (type === \"TK1\") {\n        const liquidityTemp = (value / 100) * liquidity;\n        setLiquidityTemp(liquidityTemp);\n        const tokenTwoValue = (value / 100) * tokenTwoDeposit;\n        setTokenTwoValue(tokenTwoValue);\n        setTokenOneValue(oldValue);\n      }\n      if (type === \"TK2\") {\n        const liquidityTemp = (value / 100) * liquidity;\n        setLiquidityTemp(liquidityTemp);\n        const tokenOneValue = (value / 100) * tokenOneDeposit;\n        setTokenOneValue(tokenOneValue);\n        setTokenTwoValue(oldValue);\n      }\n\n      //enable approve button\n      setApprove(true);\n      setError(\"Remove\");\n    } else {\n      setApprove(false);\n    }\n  };\n  //sign signature\n  const approveTransaction = async () => {\n    setApprove(false);\n    let value = Math.floor(liquidityTemp * 10 ** 18);\n    value = BigNumber(value).toFixed();\n\n    if (rangeValue === 100) {\n      //fixing for 100%\n      value = await ContractServices.getLiquidity100Value(\n        currentPairAddress,\n        isUserConnected\n      );\n    }\n\n    let dl = Math.floor(new Date().getTime() / 1000);\n    dl = dl + deadline * 60;\n    setDl(dl);\n\n    const data = {\n      owner: isUserConnected,\n      spender: MAIN_CONTRACT_LIST.router.address,\n      value,\n      deadline: dl,\n    };\n    console.log(\"[tur461] data to be signed:\", { ...data, currentPairAddress });\n    try {\n      const res = await ExchangeService.signRemoveTransaction(\n        data,\n        currentPairAddress\n      );\n      if (res.message) {\n        if (res.message.indexOf(\"eth_signTypedData_v4\") > -1) {\n          setCheckSignature(false);\n          setError(\"Remove\");\n          await handleTokenApproval();\n          return;\n        }\n        if (res.message.indexOf(\"User denied\") > -1) {\n          setApprove(false);\n          return toast.error(\"User denied for approval.\");\n        }\n        return toast.error(res.message);\n      }\n      setSignedData(res);\n      setError(null);\n    } catch (err) {\n      setApprove(true);\n      setError(err.message);\n    }\n  };\n  const confirmRemoveLiquidity = () => {\n    if (!error) {\n      setShowSupplyModal(true);\n    }\n  };\n  //for non signature remove liquidity\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n    if (approvalConfirmation) {\n      return toast.info(\"Token approval is processing\");\n    }\n    // const value = (2*256 - 1).toString();\n    const value =\n      \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n    const { lptoken } = props;\n    if (lptoken) {\n      try {\n        dispatch(startLoading());\n        let allowance = await ContractServices.allowanceToken(\n          lptoken.pair,\n          MAIN_CONTRACT_LIST.router.address,\n          isUserConnected\n        );\n        allowance = Number(allowance);\n        if (!(allowance > 0)) {\n          const r = await ContractServices.approveToken(\n            isUserConnected,\n            value,\n            MAIN_CONTRACT_LIST.router.address,\n            lptoken.pair\n          );\n          if (r.message.indexOf(\"Rejected\") > -1) {\n            toast.error(\"User denied transaction signature.\");\n            setError(\"Remove\");\n            setApprove(true);\n          } else if (r.code == 4001) {\n            toast.error(\"User denied transaction signature.\");\n            setError(\"Remove\");\n          } else {\n            setApprovalConfirmation(true);\n            let data = {\n              message: `Approve ${lptoken.symbol}`,\n              tx: r.transactionHash,\n            };\n            dispatch(addTransaction(data));\n            setApprovalConfirmation(false);\n            setError(null);\n          }\n        } else {\n          setApprove(false);\n          setError(null);\n        }\n        dispatch(stopLoading());\n      } catch (err) {\n        setApprovalConfirmation(false);\n        dispatch(stopLoading());\n        toast.error(\"Transaction Reverted!\");\n        setError(\"Error\");\n        setApprove(true);\n      }\n    }\n  };\n  const handleLpTokens = async () => {\n    const result = userLpTokens.filter(\n      (lpToken) => lpToken.pair !== props.lptoken.pair\n    );\n    dispatch(saveUserLpTokens(result));\n  };\n\n  const updateLpTokens = async () => {\n    const { lptoken } = props;\n    const lpdata = {\n      pair: lptoken.pair,\n      decimals: lptoken.decimals,\n      name: \"Import LPs\",\n      pairName: lptoken.pairName,\n      symbol: lptoken.symbol,\n      token0: lptoken.token0,\n      token1: lptoken.token1,\n    };\n    dispatch(updateLpToken(lpdata));\n  };\n  const removeLiquidity = async () => {\n    // console.log(\"hi\");\n    const acc = isUserConnected;\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n    if (liquidityConfirmation) {\n      return toast.info(\"Transaction is processing!\");\n    }\n    setLiquidityConfirmation(true);\n    dispatch(startLoading());\n\n    let value = 0,\n      checkBNB = false,\n      token;\n\n    if (tokenOne.address === \"BNB\") {\n      checkBNB = true;\n      value = tokenOneValue;\n      token = tokenTwo.address;\n    }\n    if (tokenTwo.address === \"BNB\") {\n      checkBNB = true;\n      value = tokenTwoValue;\n      token = tokenOne.address;\n    }\n    if (value > 0) {\n      value = Math.floor(value * 10 ** 18);\n      value = BigNumber(value).toFixed();\n    }\n    if (checkBNB) {\n      let amountETHMin = BigNumber(\n        Math.floor(Number(value) - (Number(value) * slippagePercentage) / 100)\n      ).toFixed();\n\n      let amountTokenMin = \"\";\n      if (tokenOne.address === \"BNB\") {\n        let a = tokenTwoValue - (tokenTwoValue * slippagePercentage) / 100;\n        a = a * 10 ** tokenTwo.decimals;\n        amountTokenMin = BigNumber(Math.floor(a)).toFixed();\n      }\n      if (tokenTwo.address === \"BNB\") {\n        let a = tokenOneValue - (tokenOneValue * slippagePercentage) / 100;\n        a = a * 10 ** tokenOne.decimals;\n        amountTokenMin = BigNumber(Math.floor(a)).toFixed();\n      }\n\n      let liquidity = Math.floor(liquidityTemp * 10 ** 18);\n      liquidity = BigNumber(liquidity).toFixed();\n\n      if (rangeValue === 100) {\n        //fixing for 100%\n        liquidity = await ContractServices.getLiquidity100Value(\n          currentPairAddress,\n          isUserConnected\n        );\n      }\n\n      let r, s, v;\n      if (signedData) {\n        console.log(signedData, \"signedData\");\n        r = signedData.r;\n        s = signedData.s;\n        v = signedData.v;\n      }\n\n      console.log(\"before data\");\n      const data = {\n        token,\n        liquidity,\n        amountTokenMin,\n        amountETHMin,\n        to: isUserConnected,\n        deadline: dl,\n        value,\n        approveMax: false,\n        r,\n        s,\n        v,\n        checkSignature,\n      };\n\n      console.log(\"[tur461] signed data:\", { ...data, currentPairAddress });\n\n      try {\n        const result = await ExchangeService.removeLiquidityETHWithPermit(\n          data,\n          updateLpTokens\n        );\n\n        // console.log(result, 'remove liquidity transaction');\n        dispatch(stopLoading());\n\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n          setShowSupplyModal(false);\n          if (rangeValue === 100) handleLpTokens();\n          const data = {\n            message: `Remove ${tokenOne.symbol} and ${tokenTwo.symbol}`,\n            tx: result,\n          };\n          dispatch(addTransaction(data));\n        }\n        setLiquidityConfirmation(false);\n      } catch (err) {\n        console.log(err);\n        dispatch(stopLoading());\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n        setLiquidityConfirmation(false);\n      }\n    } else {\n      let amountADesired = tokenOneValue;\n      let amountBDesired = tokenTwoValue;\n\n      let amountAMin =\n        amountADesired - (amountADesired * slippagePercentage) / 100;\n      let amountBMin =\n        amountBDesired - (amountBDesired * slippagePercentage) / 100;\n\n      amountADesired = BigNumber(\n        Math.floor(amountADesired * 10 ** tokenOne.decimals)\n      ).toFixed();\n      amountBDesired = BigNumber(\n        Math.floor(amountBDesired * 10 ** tokenTwo.decimals)\n      ).toFixed();\n      amountAMin = BigNumber(\n        Math.floor(amountAMin * 10 ** tokenOne.decimals)\n      ).toFixed();\n      amountBMin = BigNumber(\n        Math.floor(amountBMin * 10 ** tokenTwo.decimals)\n      ).toFixed();\n\n      let liquidity = Math.floor(liquidityTemp * 10 ** 18);\n      liquidity = BigNumber(liquidity).toFixed();\n\n      if (rangeValue === 100) {\n        //fixing for 100%\n        liquidity = await ContractServices.getLiquidity100Value(\n          currentPairAddress,\n          isUserConnected\n        );\n      }\n\n      let r, s, v;\n      if (signedData) {\n        r = signedData.r;\n        s = signedData.s;\n        v = signedData.v;\n      }\n\n      const data = {\n        tokenA: tokenOne.address,\n        tokenB: tokenTwo.address,\n        liquidity,\n        amountAMin,\n        amountBMin,\n        to: isUserConnected,\n        deadline: dl,\n        value,\n        approveMax: false,\n        r,\n        s,\n        v,\n        checkSignature,\n      };\n\n      try {\n        const result = await ExchangeService.removeLiquidityWithPermit(data);\n        // console.log(result, 'remove liquidity transaction');\n\n        dispatch(stopLoading());\n        if (result) {\n          setTxHash(result);\n          setShowTransactionModal(true);\n          setShowSupplyModal(false);\n          if (rangeValue === 100) handleLpTokens();\n          const data = {\n            message: `Remove ${tokenOne.symbol} and ${tokenTwo.symbol}`,\n            tx: result,\n          };\n          dispatch(addTransaction(data));\n        }\n        setLiquidityConfirmation(false);\n      } catch (err) {\n        console.log(err);\n        dispatch(stopLoading());\n        const message = await ContractServices.web3ErrorHandle(err);\n        toast.error(message);\n        setLiquidityConfirmation(false);\n      }\n    }\n  };\n\n  const calculateFractionRow = (tokenType) => {\n    let r = 0;\n    let symbol1 = tokenOne.symbol,\n      symbol2 = tokenTwo.symbol;\n    if (symbol1 === \"BNB\") {\n      if (receiveBNB) {\n        symbol1 = \"BNB\";\n      } else {\n        symbol1 = \"WBNB\";\n      }\n    }\n    if (symbol2 === \"BNB\") {\n      if (receiveBNB) {\n        symbol2 = \"BNB\";\n      } else {\n        symbol2 = \"WBNB\";\n      }\n    }\n    if (tokenType === \"TK1\") {\n      if (tokenOneDeposit === 0) return 0;\n      r = tokenTwoDeposit / tokenOneDeposit;\n      r = Number(r.toFixed(5));\n\n      return (\n        <>\n          1 {symbol1} = {r} {symbol2}\n        </>\n      );\n    }\n    if (tokenType === \"TK2\") {\n      if (tokenTwoDeposit === 0) return 0;\n      r = tokenOneDeposit / tokenTwoDeposit;\n      r = Number(r.toFixed(5));\n      return (\n        <>\n          1 {symbol2} = {r} {symbol1}\n        </>\n      );\n    }\n  };\n\n  useEffect(() => {}, [tokenTwoValue]);\n\n  return (\n    <Modal\n      scrollable={true}\n      className=\"selectCurrency_modal removeLiq_Modal\"\n      show={props.show}\n      onHide={props.handleClose}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Remove Liquidity</Modal.Title>\n      </Modal.Header>\n      <div className=\"tokenName\">\n        <hr />\n      </div>\n      <Modal.Body>\n        <Col className=\"removeAmnt comnBrdr\">\n          <h6 className=\"d-flex\">\n            Amount{\" \"}\n            <span\n              className=\"ms-auto\"\n              onClick={() => setScreenType(!screenType)}\n            >\n              {screenType ? \"Detailed\" : \"Simple\"}\n            </span>\n          </h6>\n\n          {screenType ? (\n            <>\n              <div class=\"slidecontainer\">\n                {/* <input type=\"range\" className=\"slider\" /> */}\n                <RangeSlider\n                  rangeValue={rangeValue}\n                  handleChange={handleChange2}\n                />\n              </div>\n\n              <div className=\"amountSelect\">\n                <button type=\"button\" onClick={() => handleChange2(25)}>\n                  25%\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"mx-1\"\n                  onClick={() => handleChange2(50)}\n                >\n                  50%\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"me-1\"\n                  onClick={() => handleChange2(75)}\n                >\n                  75%\n                </button>\n                <button type=\"button\" onClick={() => handleChange2(100)}>\n                  Max\n                </button>\n              </div>\n            </>\n          ) : (\n            <h2>{rangeValue} %</h2>\n          )}\n        </Col>\n\n        {screenType ? (\n          <>\n            <Col className=\"text-center downArrow\">\n              <img src={DownArrow} alt=\"down_icon\" />\n            </Col>\n\n            <Col className=\"receiveAmnt comnBrdr\">\n              <ul className=\"text-start\">\n                <li>{tokenOneValue.toFixed(5)}</li>\n                <li>{tokenTwoValue.toFixed(5)}</li>\n              </ul>\n              <ul className=\"text-end leftSide\">\n                <li>\n                  {/* <img src={SaitaIcon} alt=\"coin_icon\" /> */}\n                  {tokenOne.symbol}\n                </li>\n                <li>\n                  {/* <img src={BnbIcon} alt=\"coin_icon\" /> */}\n                  {tokenTwo.symbol}\n                </li>\n                {checkBNB && (\n                  <h6 className=\"text-end\">\n                    {/* <span onClick={() => setReceiveBNB(!receiveBNB)}>\n                      {receiveBNB ? \"Receive WBNB\" : \"Receive BNB\"}\n                    </span> */}\n                  </h6>\n                )}\n              </ul>\n            </Col>\n          </>\n        ) : (\n          <>\n            {currentPairAddress && (\n              <Col className={`selectCoin_style ${props.className}`}>\n                <Row className=\"mx-0\">\n                  <Col className=\"selectCoin_left_style\">\n                    <label>Input</label>\n                    <input\n                      type=\"number\"\n                      onKeyDown={(evt) => {\n                        symbolsArr.includes(evt.key) && evt.preventDefault();\n                      }}\n                      onChange={(e) =>\n                        handleLiquidityChange(\n                          Number(e.target.value),\n                          liquidity,\n                          \"pair\"\n                        )\n                      }\n                      min={0}\n                      placeholder=\"0.0\"\n                      value={liquidityTemp}\n                      // min={0}\n                      minLength={1}\n                      maxLength={79}\n                      autoCorrect=\"off\"\n                      autoComplete=\"off\"\n                    />\n                  </Col>\n                  <Col className=\"selectCoin_right_style\">\n                    <label>Balance: {liquidity}</label>\n                    <Col className=\"select_buttonStyle\">\n                      <button onClick={props.onClick}>\n                        {props.max && (\n                          <strong onClick={props.onMax}>MAX</strong>\n                        )}\n\n                        <div>\n                          {\" \"}\n                          {props.coinImage && (\n                            <img src={props.coinImage} className=\"coin_Img\" />\n                          )}\n                          <strong\n                            style={{\n                              fontSize: props.selectTokenText ? \"\" : \"\",\n                            }}\n                          >\n                            {props.value}\n                          </strong>\n                        </div>\n                        <img\n                          className=\"selectDropDownStyle\"\n                          src={tokenOne.icon}\n                        />\n                        <img\n                          className=\"selectDropDownStyle\"\n                          src={tokenTwo.icon}\n                        />\n                        <span className=\"currencyName_textStyle\">\n                          {tokenOne.symbol}:{tokenTwo.symbol}\n                        </span>\n                      </button>\n                    </Col>\n                  </Col>\n                </Row>\n              </Col>\n            )}\n\n            <Col className=\"text-center downArrow\">\n              <img src={DownArrow} alt=\"down_icon\" />\n            </Col>\n\n            {\n              <SelectCoin\n                label={`Balance: ${tokenOneBalance}`}\n                coinImage={tokenOne?.icon}\n                value={tokenOneCurrency}\n                onClick={() => onHandleOpenModal(\"TK1\")}\n                inputLabel=\"Output\"\n                className=\"mb-0\"\n                placeholder=\"0.0\"\n                onChange={(e) =>\n                  handleLiquidityChange(\n                    Number(e.target.value),\n                    tokenOneDeposit,\n                    \"TK1\"\n                  )\n                }\n                max={false}\n                defaultValue={tokenOneValue}\n              />\n            }\n\n            <Col className=\"text-center downArrow\">\n              <img src={Plusicon} alt=\"down_icon\" />\n            </Col>\n\n            {\n              <SelectCoin\n                label={`Balance: ${tokenTwoBalance}`}\n                coinImage={tokenTwo?.icon}\n                value={tokenTwoCurrency}\n                onClick={() => onHandleOpenModal(\"TK2\")}\n                inputLabel=\"Output\"\n                className=\"mb-0\"\n                placeholder=\"0.0\"\n                onChange={(e) =>\n                  handleLiquidityChange(\n                    Number(e.target.value),\n                    tokenTwoDeposit,\n                    \"TK2\"\n                  )\n                }\n                max={false}\n                defaultValue={tokenTwoValue}\n              />\n            }\n          </>\n        )}\n\n        {/* <Col className=\"totalPrice\">\n          <ul className=\"text-start\">\n            <li>Price:</li>\n          </ul>\n          <ul className=\"text-end\">\n            <li>1 SAITA = 0.00035815 BNB</li>\n            <li>1 BNB = 3870.84 SAITA</li>\n          </ul>\n        </Col> */}\n        <br></br>\n        <Col className=\"btnCol\">\n          <Button\n            className=\"approveBtn\"\n            title=\"Approve\"\n            onClick={() => approveTransaction()}\n            disabled={!approve}\n          />\n          <Button\n            className=\"approveBtn\"\n            title={error ? error : \"Remove\"}\n            onClick={() => confirmRemoveLiquidity()}\n            disabled={error}\n          />\n        </Col>\n\n        <ModalCurrency\n          show={modalCurrency}\n          tokenList={filteredTokenList}\n          handleClose={() => setModalCurrency(!modalCurrency)}\n          selectCurrency={onHandleSelectCurrency}\n          searchToken={handleSearchToken}\n          searchByName={setSearch}\n          tokenType={tokenType}\n          currencyName={selectedCurrency}\n        />\n        <ModalCurrency\n          show={modalCurrency}\n          tokenList={filteredTokenList}\n          handleClose={() => setModalCurrency(!modalCurrency)}\n          selectCurrency={onHandleSelectCurrency}\n          searchToken={handleSearchToken}\n          searchByName={setSearch}\n          tokenType={tokenType}\n          currencyName={selectedCurrency}\n        />\n\n        {/* Approve confirm Modal Start */}\n        <Modal\n          centered\n          scrollable={true}\n          className=\"connect_wallet\"\n          show={showSupplyModal}\n          onHide={() => setShowSupplyModal(false)}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>You will receive</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Row>\n              <Col className=\"baseToken_style\">\n                <ul>\n                  <li>\n                    <div className=\"row\">\n                      <h2>{tokenOneValue.toFixed(5)}</h2>\n                      <span>\n                        <img src={tokenOne.icon} alt=\"icon\" />\n                        <h2>{tokenOne.symbol}</h2>\n                      </span>\n                    </div>\n                    <div className=\"row\">\n                      <h2 className=\"plus\">+</h2>\n                    </div>\n                    <div className=\"row\">\n                      <h2>{tokenTwoValue.toFixed(5)}</h2>\n                      <span>\n                        <img src={tokenTwo.icon} alt=\"icon\" />\n                        <h2>{tokenTwo.symbol}</h2>\n                      </span>\n                    </div>\n                    <p>\n                      Output is estimated. If the price changes by more than{\" \"}\n                      {slippagePercentage}% your transaction will revert.\n                    </p>\n                  </li>\n                  <li>\n                    <li>\n                      {tokenOneCurrency} Deposit: <span> {tokenOneValue}</span>\n                    </li>\n                    <li>\n                      {tokenTwoCurrency} Deposit:<span>{tokenTwoValue}</span>{\" \"}\n                    </li>\n                    <li>\n                      Price\n                      <p>\n                        {1}&nbsp;{tokenOneCurrency} ={\" \"}\n                        {calculateFractionRow(\"TK1\")} <br />\n                        {1}&nbsp;{tokenTwoCurrency} ={\" \"}\n                        {calculateFractionRow(\"TK2\")}\n                      </p>\n                    </li>\n                  </li>\n\n                  <Button\n                    title={isUserConnected ? \"Confirm\" : \"Unlock Wallet\"}\n                    className=\"remove_liq_btn\"\n                    disabled={liquidityConfirmation}\n                    onClick={() => removeLiquidity()}\n                  />\n                </ul>\n              </Col>\n            </Row>\n          </Modal.Body>\n        </Modal>\n        {/* Approve confirm Modal End */}\n\n        {showTransactionModal && (\n          <TransactionalModal\n            closeTransactionModal={closeTransactionModal}\n            txHash={txHash}\n          />\n        )}\n\n        {currentPairAddress && (\n          <Col className=\"totalPrice\">\n            <ul className=\"text-start\">\n              <li>\n                {\" \"}\n                <h5>LP TOKENS IN YOUR WALLET</h5>{\" \"}\n              </li>\n            </ul>\n            <ul className=\"text-end\">\n              <li>\n                <p>\n                  <img src={tokenOne.icon} alt=\"icon\" />{\" \"}\n                  <img src={tokenTwo.icon} alt=\"icon\" /> {tokenOne.symbol}/\n                  {tokenTwo?.symbol}\n                </p>{\" \"}\n                <span>{liquidity}</span>\n              </li>\n              <li>\n                <p>{tokenOne.symbol}: </p>\n                <span>{tokenOneDeposit.toFixed(5)} </span>\n              </li>\n              <li>\n                <p>{tokenTwo?.symbol}:</p>{\" \"}\n                <span>{tokenTwoDeposit.toFixed(5)}</span>\n              </li>\n            </ul>\n          </Col>\n        )}\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default RemoveLiquidity;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}