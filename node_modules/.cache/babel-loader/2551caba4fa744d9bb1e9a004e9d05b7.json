{"ast":null,"code":"var _jsxFileName = \"/data/test/saitaClientGit/src/pages/Trade/Trade.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Tab, Tabs, Col, Row } from \"react-bootstrap\";\nimport Exchange from \"./Exchange\";\nimport Liquidity from \"././Liquidity\";\nimport { rootName } from \"../../constant\";\nimport \"./Trade.scss\";\nimport AddLiquidity from \"./AddLiquidity\";\nimport ImportPool from \"./ImportPool\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Trade = props => {\n  _s();\n\n  const {\n    match: {\n      params\n    },\n    history\n  } = props;\n  const {\n    tab,\n    fillter\n  } = params;\n  const [colLiquidity, setColLiquidity] = useState(1);\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const [lptoken, setLptoken] = useState(null);\n\n  const handleTab = data => {\n    if (data === \"Bridge\") {\n      const tab = window.open(\"https://www.binance.org/en/bridge?utm_source=Saita\", \"_blank\");\n      tab.focus();\n    } else history.push(`${rootName}/trade/${data}`);\n  };\n\n  const handleComponent = value => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n\n    setColLiquidity(value);\n  };\n\n  const handleAddLiquidity = lp => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n\n    setLptoken(lp);\n    history.push(`${rootName}/trade/liquidity/addLiquidity`);\n  };\n\n  const handleRemove = lp => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n\n    setLptoken(lp);\n  };\n\n  const [key, setKey] = useState(\"deutsch\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_wrap trade\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"swapScreen comnSection\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"smallContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center swap_title\",\n          children: \"Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comnBlk\",\n              children: /*#__PURE__*/_jsxDEV(Tabs, {\n                activeKey: tab,\n                defaultActiveKey: \"exchange\",\n                id: \"uncontrolled-tab-example\",\n                className: \"mb-3\",\n                onSelect: handleTab,\n                children: [/*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"exchange\",\n                  title: \"Swap\",\n                  children: /*#__PURE__*/_jsxDEV(Exchange, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                  eventKey: \"liquidity\",\n                  title: \"Liquidity\",\n                  children: fillter === \"addLiquidity\" ? /*#__PURE__*/_jsxDEV(AddLiquidity, {\n                    lptoken: lptoken\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 23\n                  }, this) : fillter === \"importPool\" ? /*#__PURE__*/_jsxDEV(ImportPool, {\n                    lptoken: lptoken\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(Liquidity, {\n                    handleAddLiquidity: handleAddLiquidity,\n                    handleRemove: handleRemove,\n                    lptoken: lptoken\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Trade, \"HXFx7iVIe4ImsbHCW22rZ3ZWwe0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Trade;\nexport default Trade;\n\nvar _c;\n\n$RefreshReg$(_c, \"Trade\");","map":{"version":3,"names":["React","useState","Container","Tab","Tabs","Col","Row","Exchange","Liquidity","rootName","AddLiquidity","ImportPool","useSelector","toast","Trade","props","match","params","history","tab","fillter","colLiquidity","setColLiquidity","isUserConnected","state","persist","lptoken","setLptoken","handleTab","data","window","open","focus","push","handleComponent","value","error","handleAddLiquidity","lp","handleRemove","key","setKey"],"sources":["/data/test/saitaClientGit/src/pages/Trade/Trade.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Container, Tab, Tabs, Col, Row } from \"react-bootstrap\";\n\nimport Exchange from \"./Exchange\";\nimport Liquidity from \"././Liquidity\";\nimport { rootName } from \"../../constant\";\nimport \"./Trade.scss\";\nimport AddLiquidity from \"./AddLiquidity\";\nimport ImportPool from \"./ImportPool\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"../../components/Toast/Toast\";\n\nconst Trade = (props) => {\n  const {\n    match: { params },\n    history,\n  } = props;\n  const { tab, fillter } = params;\n  const [colLiquidity, setColLiquidity] = useState(1);\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n  const [lptoken, setLptoken] = useState(null);\n\n  const handleTab = (data) => {\n    if (data === \"Bridge\") {\n      const tab = window.open(\n        \"https://www.binance.org/en/bridge?utm_source=Saita\",\n        \"_blank\"\n      );\n      tab.focus();\n    } else history.push(`${rootName}/trade/${data}`);\n  };\n\n  const handleComponent = (value) => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n    setColLiquidity(value);\n  };\n  const handleAddLiquidity = (lp) => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n    setLptoken(lp);\n    history.push(`${rootName}/trade/liquidity/addLiquidity`);\n  };\n  const handleRemove = (lp) => {\n    if (!isUserConnected) {\n      return toast.error(\"Connect wallet first!\");\n    }\n    setLptoken(lp);\n  };\n  const [key, setKey] = useState(\"deutsch\");\n  return (\n    <div className=\"container_wrap trade\">\n      <Container fluid className=\"swapScreen comnSection\">\n        <Container className=\"smallContainer\">\n          <h2 className=\"text-center swap_title\">Trade</h2>\n          <Row>\n            {/* <Col md={6} lg={4}>\n              <div className=\"comnBlk lang-blk\">\n                <Tabs\n                  activeKey={key}\n                  defaultActiveKey=\"english\"\n                  id=\"tab-example\"\n                  className=\"  lang-tab\"\n                  onSelect={(k) => setKey(k)}\n                >\n                  <Tab\n                    eventKey=\"english\"\n                    title=\"English\"\n                    className=\"lang-content\"\n                  >\n                    <h2>Important Information</h2>\n                    <p>\n                      Never execute a swap if the offered value for the target\n                      currency does not correspond to the market price! If there\n                      is not enough liquidity available on SAITA Swap for the\n                      desired pair (for example BNB to DOT), the price cannot be\n                      met.\n                      <br />\n                      <br />{\" \"}\n                      <strong>\n                        {\" \"}\n                        After entering both tokens you will see the summary of\n                        the exchange in the swap window.\n                      </strong>\n                      <br />\n                      <br /> If the exchange gets still confirmed, the lost\n                      amount cannot be refunded! <br />\n                      <br />\n                      <strong>\n                        {\" \"}\n                        USER IS SOLELY RESPONSIBLE FOR ANY LOSSES CAUSED BY LOW\n                        LIQUIDITY!\n                      </strong>\n                    </p>\n                  </Tab>\n                  <Tab\n                    eventKey=\"deutsch\"\n                    title=\"Deutsch\"\n                    className=\"lang-content\"\n                  >\n                    <h2>Wichtige Information</h2>\n                    <p>\n                      Niemals einen Swap durchführen wenn der angebotene Wert\n                      für die Zielwährung nicht dem Marktpreis entspricht!\n                      Sollte für das gewünschte Paar (zum Beispiel BNB zu DOT)\n                      nicht genügend Liquidität auf der Exchange zur Verfügung\n                      stehen, kann der Preis nicht eingehalten werden.\n                      <br />\n                      <br />{\" \"}\n                      <strong>\n                        {\" \"}\n                        Nach der Eingabe beider Token seht ihr die\n                        Zusammenfassung des Exchange im Swap Fenster.\n                      </strong>\n                      <br />\n                      <br />{\" \"}\n                      <strong>\n                        {\" \"}\n                        Der Nutzer ist allein verantwortlich für Verluste, die\n                        durch geringe Liquidität entstehen!{\" \"}\n                      </strong>{\" \"}\n                      <br />\n                      <br />\n                    </p>\n                  </Tab>\n                </Tabs>\n              </div>\n            </Col> */}\n            <Col md={6}>\n              <div className=\"comnBlk\">\n                <Tabs\n                  activeKey={tab}\n                  defaultActiveKey=\"exchange\"\n                  id=\"uncontrolled-tab-example\"\n                  className=\"mb-3\"\n                  onSelect={handleTab}\n                >\n                  <Tab eventKey=\"exchange\" title=\"Swap\">\n                    <Exchange />\n                  </Tab>\n                  <Tab eventKey=\"liquidity\" title=\"Liquidity\">\n                    {fillter === \"addLiquidity\" ? (\n                      <AddLiquidity lptoken={lptoken} />\n                    ) : fillter === \"importPool\" ? (\n                      <ImportPool lptoken={lptoken} />\n                    ) : (\n                      <Liquidity\n                        handleAddLiquidity={handleAddLiquidity}\n                        handleRemove={handleRemove}\n                        lptoken={lptoken}\n                      />\n                    )}\n                  </Tab>\n                  {/* <Tab eventKey=\"Bridge\" title=\"Bridge\">Bridge</Tab> */}\n                </Tabs>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </Container>\n    </div>\n  );\n};\n\nexport default Trade;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}