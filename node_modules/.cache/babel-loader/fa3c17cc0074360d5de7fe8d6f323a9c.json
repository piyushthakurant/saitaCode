{"ast":null,"code":"var _jsxFileName = \"/data/test/saitaClientGit/src/components/Footer/Footer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Footer.scss\";\nimport { Link } from \"react-router-dom\";\nimport SAITA from \"../../assets/images/saitaswap.png\";\nimport MetaMask from \"../../assets/images/MetaMask-Icon.svg\";\nimport ScrollTop from \"../ScrollTop/ScrollTop\";\nimport { Button } from \"react-bootstrap\";\nimport { addCommas } from \"../../constant\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Footer = props => {\n  _s();\n\n  const footerValues = useSelector(state => state.persist.footerValues);\n  useEffect(() => {}, []);\n\n  const handelToken = async () => {\n    const {\n      ethereum\n    } = window;\n    const tokenAddress = \"0x0eD81CAe766d5B1a4B3ed4DFbED036be13c6C09C\";\n    const tokenSymbol = \"SAITAMA\";\n    const tokenDecimals = 18; //const tokenImage = 'http://placekitten.com/200/300';\n\n    try {\n      // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n      const wasAdded = await ethereum.request({\n        method: \"wallet_watchAsset\",\n        params: {\n          type: \"ERC20\",\n          // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress,\n            // The address that the token is at.\n            symbol: tokenSymbol,\n            // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals // The number of decimals in the token\n            //image: tokenImage, // A string url of the token logo\n\n          }\n        }\n      });\n\n      if (wasAdded) {\n        console.log(\"Thanks for your interest!\");\n      } else {\n        console.log(\"Your loss!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `footer_style ${props.className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer_align\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saita_price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollUp\",\n        children: /*#__PURE__*/_jsxDEV(ScrollTop, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Footer, \"mpELtRoGlnNU/WUDhSdvciE7R+E=\", false, function () {\n  return [useSelector];\n});\n\n_c = Footer;\nexport default Footer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Footer\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","Link","SAITA","ScrollTop","Button","addCommas","Footer","props","footerValues","state","persist","handelToken","ethereum","window","tokenAddress","tokenSymbol","tokenDecimals","wasAdded","request","method","params","type","options","address","symbol","decimals","console","log","error","className"],"sources":["/data/test/saitaClientGit/src/components/Footer/Footer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Footer.scss\";\nimport { Link } from \"react-router-dom\";\nimport SAITA from \"../../assets/images/saitaswap.png\";\nimport MetaMask from \"../../assets/images/MetaMask-Icon.svg\";\nimport ScrollTop from \"../ScrollTop/ScrollTop\";\nimport { Button } from \"react-bootstrap\";\nimport { addCommas } from \"../../constant\";\n\nconst Footer = (props) => {\n  const footerValues = useSelector((state) => state.persist.footerValues);\n  useEffect(() => {}, []);\n  const handelToken = async () => {\n    const { ethereum } = window;\n    const tokenAddress = \"0x0eD81CAe766d5B1a4B3ed4DFbED036be13c6C09C\";\n    const tokenSymbol = \"SAITAMA\";\n    const tokenDecimals = 18;\n    //const tokenImage = 'http://placekitten.com/200/300';\n    try {\n      // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n      const wasAdded = await ethereum.request({\n        method: \"wallet_watchAsset\",\n        params: {\n          type: \"ERC20\", // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            //image: tokenImage, // A string url of the token logo\n          },\n        },\n      });\n\n      if (wasAdded) {\n        console.log(\"Thanks for your interest!\");\n      } else {\n        console.log(\"Your loss!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className={`footer_style ${props.className}`}>\n      <div className=\"footer_align\">\n        <div className=\"saita_price\">\n          {/* <img src={SAITA} alt={\"img\"} /> */}\n          {/* <div className=\"flex\"> */}\n          {/* <span>SAITAMA</span> */}\n          {/* <span className=\"vlue\">${footerValues?.saitaValue?.toFixed(2)}</span> */}\n          {/* </div> */}\n        </div>\n        {/* <div className=\"buy_saita\">\n          <img src={SAITA} alt={\"icon\"} onClick={() => handelToken()} />\n          <Link to=\"/trade/exchange\">\n            <Button className=\"cm_btn\" onClick={() => handelToken()}>\n              Buy SAITAMA\n            </Button>\n          </Link>\n        </div> */}\n\n        <div className=\"scrollUp\">\n          <ScrollTop />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,eAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,SAAT,QAA0B,gBAA1B;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EACxB,MAAMC,YAAY,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,YAA1B,CAAhC;EACAV,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;;EACA,MAAMa,WAAW,GAAG,YAAY;IAC9B,MAAM;MAAEC;IAAF,IAAeC,MAArB;IACA,MAAMC,YAAY,GAAG,4CAArB;IACA,MAAMC,WAAW,GAAG,SAApB;IACA,MAAMC,aAAa,GAAG,EAAtB,CAJ8B,CAK9B;;IACA,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,OAAT,CAAiB;QACtCC,MAAM,EAAE,mBAD8B;QAEtCC,MAAM,EAAE;UACNC,IAAI,EAAE,OADA;UACS;UACfC,OAAO,EAAE;YACPC,OAAO,EAAET,YADF;YACgB;YACvBU,MAAM,EAAET,WAFD;YAEc;YACrBU,QAAQ,EAAET,aAHH,CAGkB;YACzB;;UAJO;QAFH;MAF8B,CAAjB,CAAvB;;MAaA,IAAIC,QAAJ,EAAc;QACZS,OAAO,CAACC,GAAR,CAAY,2BAAZ;MACD,CAFD,MAEO;QACLD,OAAO,CAACC,GAAR,CAAY,YAAZ;MACD;IACF,CApBD,CAoBE,OAAOC,KAAP,EAAc;MACdF,OAAO,CAACC,GAAR,CAAYC,KAAZ;IACD;EACF,CA7BD;;EA8BA,oBACE;IAAK,SAAS,EAAG,gBAAerB,KAAK,CAACsB,SAAU,EAAhD;IAAA,uBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QADF,eAiBE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,SAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD,CA1DD;;GAAMvB,M;UACiBN,W;;;KADjBM,M;AA4DN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}