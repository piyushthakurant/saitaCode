{"ast":null,"code":"var _jsxFileName = \"/data/test/saitaClientGit/src/pages/Trade/Staking.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BigNumber } from \"bignumber.js\";\nimport { Container, Col, Row, Button, Form, FormControl, Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Reflink from \"../../assets/images/reflink-icon.svg\";\nimport Twitter from \"../../assets/images/twitter-icon.svg\";\nimport Telegram from \"../../assets/images/telegram-icon.svg\";\nimport \"./Staking.scss\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport ABISTAKING from \"../../assets/ABI/SaitaABI.json\";\nimport TOKENABI from \"../../assets/ABI/abi.saitama.json\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport Loader from \"react-loader-spinner\";\nimport TransactionalModal from \"../../components/TransactionalModal/TransactionalModal\";\nimport Timer from \"../../components/Timer/Timer\";\nimport { startLoading, stopLoading } from \"../../redux/actions\";\nimport { ERRORS, EVENTS, LS_KEYS } from \"../../constant\";\nimport SwapModal from \"../../components/SwapModal/SwapModal\";\nimport StakeModal from \"../../components/StakeModal/StakeModal\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Staking = () => {\n  _s();\n\n  let trigger = false;\n  const stakingProxy = \"0x409353a02Ba3CCf60F3c503A6fd842a7A9C20782\"; // const stakingContract = \"0xE6A55671c1b863b73cCd8ECAcf4fa8Db3D6FF1b7\";\n\n  const tokenAddress = \"0xce3f08e664693ca792cace4af1364d5e220827b2\"; //saitaToken\n\n  const MAX_AMT = \"0xffffffffffffffffffffffffffffffffffffffff\";\n  const [inputAmount, setInputAmount] = useState(0);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const [days, setDays] = useState(0);\n  const [reward, setReward] = useState(0);\n  const [tokenBalance, setTokenBalance] = useState(0);\n  const [smaBal, setSmaBal] = useState(0.0); // const [finaldays, setfinaldays] = useState();\n\n  const [transactionNo, setTransNo] = useState({});\n  const [dataArray, setDataArray] = useState([]);\n  const [contract, setContract] = useState();\n  const [userAddress, setUserAddress] = useState(\"\");\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [timerDays, setTimerDays] = useState();\n  const [timerHours, setTimerHours] = useState();\n  const [timerMinutes, setTimerMinutes] = useState();\n  const [showStakeModal, setShowStakeModal] = useState(!1); // const [, setDaysLeft] = useState(true);\n\n  let daysLeft = true;\n  let daataarray = [];\n  const dispatch = useDispatch(); // const [dataObj, setDataObj] = useState({\n  //   amount: \"\",\n  //   lockInUntil: \"\",\n  //   isUnstaked: \"\",\n  //   stakeInTime: \"\",\n  // })\n\n  let totalSeconds = 86400;\n  let finalRewards = inputAmount && reward ? inputAmount * (reward * days / 365) / 100 : 0;\n  const isTheUserConnected = useSelector(state => state.persist.isUserConnected);\n\n  const getContract = _ => {\n    return ContractServices.callContract(stakingProxy, ABISTAKING);\n  };\n\n  const closeTransactionModal = () => {\n    setShowTransactionModal(false); //props.backBtn();\n    //window.location.reload();\n  };\n\n  const getSetAPY = async d => {\n    const c = await getContract(); // if (!c) return toast.error(\"ERRORS.SEL_WALLET\");\n\n    if (c) {\n      let rewardPercent = await c.methods.rewardPercent((d ? d : days) * totalSeconds).call();\n      console.log(\"## getting apy:\", rewardPercent);\n      setReward(rewardPercent / 100);\n    }\n  };\n\n  const someF = async () => {\n    let _contract = await getContract();\n\n    setContract(_contract);\n    setUserAddress(isTheUserConnected);\n    const userAddress = isTheUserConnected;\n    const TokenBalance = await ContractServices.getTokenBalance(tokenAddress, userAddress);\n    console.log(\"TokenBalance\", TokenBalance);\n    setTokenBalance(TokenBalance);\n    getTheStake(isTheUserConnected);\n    await getSetAPY();\n    if (days === 0) setDisableStakeBtn(!0);\n\n    try {\n      const x = parseFloat(TokenBalance);\n\n      if (x !== NaN) {\n        setSmaBal(x);\n        if (parseFloat(inputAmount) < x) setDisableStakeBtn(!0);\n      }\n    } catch (e) {}\n  };\n\n  document.addEventListener(EVENTS.LOGIN_SUCCESS, async e => {\n    e.preventDefault();\n    await someF();\n  });\n  const [isWalletSelected, setIsWalletSelected] = useState(!1);\n  useEffect(_ => {\n    // onload check if wallet is selected\n    const selWalletType = localStorage.getItem(LS_KEYS.WALLET_TYPE);\n\n    if (!selWalletType) {\n      setIsWalletSelected(!1);\n    } else {\n      setIsWalletSelected(!0);\n    }\n  }, []);\n  useEffect(_ => {\n    (async _ => {\n      await someF(); // ContractServices.callWeb3ForWalletConnect();\n    })();\n  }, [trigger]);\n  const [disabledStakeBtn, setDisableStakeBtn] = useState(!0);\n\n  const handleChange = e => {\n    let ip = parseFloat(e.target.value);\n    setInputAmount(e.target.value);\n    console.log(\"smabal:\", smaBal, \"ip\", ip);\n    if (`${ip}` == \"NaN\") return setDisableStakeBtn(!0);\n    if (ip <= 0) return setDisableStakeBtn(!0);\n    if (ip > smaBal) return setDisableStakeBtn(!0);\n    console.log(\"initial days:\", days);\n    if (days == 0) return setDisableStakeBtn(!0);\n    setDisableStakeBtn(!1);\n\n    if (inputAmount) {\n      setIsDisabled(false);\n    }\n  };\n\n  const startTimer = timer => {\n    const countDownDate = new Date(timer * 1000);\n    const now = new Date().getTime();\n    const difference = countDownDate - now;\n    const days = Math.floor(difference / (24 * 60 * 60 * 1000));\n    const hours = Math.floor(difference % (24 * 60 * 60 * 1000) / (1000 * 60 * 60));\n    const minutes = Math.floor(difference % (60 * 60 * 1000) / (1000 * 60));\n    const seconds = Math.floor(difference % (60 * 1000) / 1000); // console.log(\"the difference\", difference);\n\n    if (difference <= 0) {\n      daysLeft = false;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"Lockin period is over\"\n      }, void 0, false);\n    } else {\n      daysLeft = true;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: days + \":\" + hours + \":\" + minutes\n      }, void 0, false);\n    }\n  };\n\n  const destructure = async (array, i, stakingRewards) => {\n    console.log(\"stakingRewards\", stakingRewards);\n    daataarray.push({\n      amount: array[0],\n      lockInPeriod: array[1],\n      lockInUntil: array[3],\n      isClaimed: array[4],\n      transactionNo: i,\n      stakingRewards: stakingRewards\n    });\n  };\n\n  const tryStake = async () => {\n    setShowStakeModal(false);\n\n    if (isTheUserConnected) {\n      if (inputAmount) {\n        debugger;\n\n        try {\n          dispatch(startLoading()); // let userAddress = await ContractServices.isMetamaskInstalled();\n          // let gasPrice = await Contractservices.calculateGasPrice();\n\n          let tokenInstance = await ContractServices.callContract(tokenAddress, TOKENABI);\n          let estimateGas = await tokenInstance.methods.approve(stakingProxy, MAX_AMT).estimateGas({\n            from: userAddress\n          });\n          setIsDisabled(true);\n          let approveToken = await tokenInstance.methods.allowance(userAddress, stakingProxy).call();\n\n          if (approveToken == 0) {\n            toast.info(\"Kindly confirm saitama token approval.\");\n            const tx = await tokenInstance.methods.approve(stakingProxy, MAX_AMT).send({\n              from: userAddress,\n              gas: estimateGas\n            });\n            toast.success(\"Approval success\");\n          }\n\n          let contract = await ContractServices.callContract(stakingProxy, ABISTAKING);\n          let gas = await contract.methods.stake(days * totalSeconds, BigNumber(inputAmount) * 10 ** 9).estimateGas({\n            from: userAddress\n          });\n          toast.info(\"Kindly confirm staking transaction.\");\n          let result = await contract.methods.stake(days * totalSeconds, BigNumber(inputAmount) * 10 ** 9).send({\n            from: userAddress,\n            gas: gas\n          }).on(\"transactionHash\", hash => {\n            setTxHash(hash);\n            setShowTransactionModal(true);\n            dispatch(stopLoading());\n          });\n          console.log(\"uuuu result\", result);\n          toast.success(\"Staking success\"); // let data = await contract.methods.stakingTx(userAddress);\n          // setfinaldays(days * totalSeconds);\n\n          const transactionNo = await contract.methods.stakingTx(userAddress).call();\n          dispatch(startLoading); // setTransNo(transactionNo);\n\n          let totalTransactions = transactionNo.txNo;\n          let transactionDetails;\n          let stakingRewards;\n\n          for (let i = 1; i <= totalTransactions; i++) {\n            transactionDetails = await contract.methods.userTransactions(userAddress, i).call();\n            stakingRewards = await contract.methods.rewards(userAddress, i).call();\n            console.log(\"transactionDetails\", transactionDetails);\n            await destructure(transactionDetails, i, stakingRewards);\n          }\n\n          setDataArray(daataarray.reverse());\n          dispatch(stopLoading);\n          setIsDisabled(false);\n        } catch (error) {\n          console.log(error);\n          const message = await ContractServices.web3ErrorHandle(error);\n          toast.error(message);\n          dispatch(stopLoading);\n        }\n      } else {\n        toast.error(\"Please enter the staking amount\");\n      }\n    } else {\n      toast.error(\"Please Connect your wallet first\");\n    }\n  };\n\n  console.log(\"99999\", contract === null || contract === void 0 ? void 0 : contract.methods);\n  console.log(\"thidijojoijoijj\", tokenBalance);\n\n  const letsUnstake = async trans => {\n    // debugger;\n    setShowStakeModal(false);\n    console.log(\"0000\", trans);\n\n    if (isTheUserConnected) {\n      // debugger;\n      try {\n        let contract = await ContractServices.callContract(stakingProxy, ABISTAKING);\n        setUserAddress(isTheUserConnected);\n        let gas = await contract.methods.claim(trans).estimateGas({\n          from: userAddress\n        });\n        dispatch(startLoading());\n        let result = contract.methods.claim(trans).send({\n          from: userAddress,\n          gas: gas\n        }).on(\"transactionHash\", hash => {\n          setTxHash(hash);\n          setShowTransactionModal(true);\n          dispatch(stopLoading());\n\n          try {\n            toast.success(\"Transaction Submitted\");\n          } catch (err) {\n            toast.error(err);\n          }\n        }).catch(err => {\n          toast.error(\"Transaction declined\");\n          dispatch(stopLoading());\n        }); // console.log(\"mmmmmmmmmmmmmmm\", result);\n        // if (txHash) {\n        //   toast.success(\"Claimed\");\n        // }\n\n        const transactionNo = await contract.methods.stakingTx(userAddress).call();\n        setTransNo(transactionNo);\n        let totalTransactions = transactionNo.txNo;\n        let transactionDetails;\n\n        for (let i = 1; i <= totalTransactions; i++) {\n          transactionDetails = await contract.methods.userTransactions(userAddress, i).call(); // console.log(\"transactionDetails\", transactionDetails);\n\n          await destructure(transactionDetails, i);\n        }\n      } catch (error) {\n        console.log(\"55555555555555\", error);\n        const message = await ContractServices.web3ErrorHandle(error);\n        toast.error(message);\n      }\n    }\n\n    if (!isTheUserConnected) {\n      toast.error(\"Please Connect your wallet first\");\n    }\n  };\n\n  console.log(\"the days left\", daysLeft);\n\n  const getTheStake = async uAddr => {\n    trigger = true;\n    let contract = await ContractServices.callContract(stakingProxy, ABISTAKING); // alert(\"in gettheStake\");\n\n    if (isTheUserConnected) {\n      try {\n        setIsDisabled(true);\n        dispatch(startLoading());\n        const transactionNo = await contract.methods.stakingTx(uAddr).call(); // console.log(\"transactionNo\", transactionNo);\n\n        setTransNo(transactionNo);\n        let totalTransactions = transactionNo.txNo; // console.log(\"totalTransactions\", totalTransactions);\n\n        let transactionDetails;\n        let stakingRewards;\n\n        for (let i = 1; i <= totalTransactions; i++) {\n          transactionDetails = await contract.methods.userTransactions(uAddr, i).call();\n          stakingRewards = await contract.methods.rewards(uAddr, i).call(); // console.log(\"transactionDetails\", transactionDetails);\n\n          await destructure(transactionDetails, i, stakingRewards);\n        }\n\n        setDataArray(daataarray.reverse());\n        setIsDisabled(false);\n        dispatch(stopLoading());\n      } catch (error) {\n        alert(error);\n      }\n    }\n  };\n\n  const _setDays = async (e, d) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (inputAmount > 0) {\n      setDays(d);\n      await getSetAPY(d);\n      setDisableStakeBtn(!1);\n    } else toast.info(\"Please enter staking amount.\");\n  }; // console.log(\"daysLeft\", daysLeft);\n\n\n  return (\n    /*#__PURE__*/\n    // referral_page\n    _jsxDEV(\"div\", {\n      className: \"container_wrap stakePage py-40\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeto_connect\",\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          className: \"custom_container\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"staking_block\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"staking_head\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Stake\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"para\",\n                  children: [\"Saitama Balance:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ms-2\",\n                    children: tokenBalance === null || tokenBalance === void 0 ? void 0 : tokenBalance.toFixed(4)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 409,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"staking_content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"form\", {\n                    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                      type: \"number\",\n                      placeholder: \"Input\",\n                      value: inputAmount,\n                      onChange: e => handleChange(e),\n                      required: true,\n                      onScroll: _ => {\n                        console.log(\"scrolling\");\n\n                        _.preventDefault();\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 413,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"duration_sec\",\n                      children: [/*#__PURE__*/_jsxDEV(Button, {\n                        className: \"time_duration\",\n                        onClick: e => _setDays(e, 30),\n                        children: \"30 days\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 425,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        className: \"time_duration\",\n                        onClick: e => _setDays(e, 60),\n                        children: \"60 days\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 431,\n                        columnNumber: 23\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        className: \"time_duration\",\n                        onClick: e => _setDays(e, 90),\n                        children: \"90 days\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 437,\n                        columnNumber: 23\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text_area text-white\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"d-flex flex-column\",\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"d-flex\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"APY:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 447,\n                            columnNumber: 27\n                          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"ms-2\",\n                            children: [reward, \"%\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 448,\n                            columnNumber: 27\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 446,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"d-flex\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"Lock-In Period:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 451,\n                            columnNumber: 27\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"ms-2\",\n                            children: [days, \" Days\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 452,\n                            columnNumber: 27\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 450,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          className: \"d-flex\",\n                          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"Final Rewards:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 455,\n                            columnNumber: 27\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: \"ms-2\",\n                            children: [finalRewards, \" Saitama\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 456,\n                            columnNumber: 27\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 454,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"stake_btn\",\n                      id: \"myBtn\",\n                      disabled: disabledStakeBtn,\n                      onClick: _ => setShowStakeModal(!0),\n                      children: \"Stake\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"stake_btn\",\n                    onClick: () => getTheStake(isTheUserConnected),\n                    children: \"Get your stakings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"stakeAmountbox\",\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    responsive: true,\n                    className: \"duration_bits\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Stake Amount\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 482,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Rewards\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 484,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: [\"Locked in Until\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 486,\n                            columnNumber: 42\n                          }, this), \" (DD:HH:MM)\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 485,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Lock In Period\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 488,\n                          columnNumber: 25\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Action\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 489,\n                          columnNumber: 25\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 481,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 21\n                    }, this), dataArray.length > 0 ? dataArray === null || dataArray === void 0 ? void 0 : dataArray.map(item => /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [item.amount / 10 ** 9, \" Saitama\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 496,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [item.stakingRewards / 10 ** 9, \" Saitama\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 497,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: [startTimer(item.lockInUntil), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"timerBox\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 502,\n                            columnNumber: 33\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 499,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.lockInPeriod / totalSeconds + \" Days\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 504,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: item.isClaimed === true ? /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"unstake_btn\",\n                            disabled: true,\n                            children: \"Claimed\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 509,\n                            columnNumber: 35\n                          }, this) : daysLeft === false ? /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"unstake_btn\",\n                            onClick: () => {\n                              try {\n                                letsUnstake(item.transactionNo);\n                              } catch (err) {\n                                console.log(err);\n                              }\n                            },\n                            children: \"Unstake\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 513,\n                            columnNumber: 35\n                          }, this) : daysLeft === true ? /*#__PURE__*/_jsxDEV(Button, {\n                            className: \"unstake_btn\",\n                            disabled: true,\n                            children: \"Unstake\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 526,\n                            columnNumber: 35\n                          }, this) : null\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 507,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 495,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 494,\n                      columnNumber: 27\n                    }, this) // <div className=\"duration_bits value_sec\">\n                    //   <h3>{item.time}</h3>\n                    //   <div className=\"value_sec px-3\">\n                    //     <div className=\"value_amount_sec d-block\">\n                    //       <div className=\"value_amount d-flex\">\n                    //         <p></p>\n                    //         <p></p>\n                    //       </div>\n                    //       <div className=\"value_amount d-flex\">\n                    //         <p></p>\n                    //         <p></p>\n                    //       </div>\n                    //       <div className=\"value_amount d-flex\">\n                    //         <p>:</p>\n                    //         <p></p>\n                    //       </div>\n                    //     </div>\n                    //   </div>\n                    // </div>\n                    ) : null]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(StakeModal, {\n            handleStake: tryStake,\n            closeModal: () => setShowStakeModal(!showStakeModal),\n            rewards: finalRewards,\n            stakePeriod: days,\n            show: showStakeModal // show={true}\n            ,\n            stakeAmount: inputAmount,\n            tokenBalance: tokenBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TransactionalModal, {\n          show: showTransactionModal,\n          handleClose: closeTransactionModal,\n          txHash: txHash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Staking, \"kMs8qy0F4stymDLBovAJcit8LdE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Staking;\nexport default Staking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staking\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","BigNumber","Container","Col","Row","Button","Form","FormControl","Table","Link","CopyToClipboard","ContractServices","ABISTAKING","TOKENABI","toast","Loader","TransactionalModal","Timer","startLoading","stopLoading","ERRORS","EVENTS","LS_KEYS","SwapModal","StakeModal","Staking","trigger","stakingProxy","tokenAddress","MAX_AMT","inputAmount","setInputAmount","showTransactionModal","setShowTransactionModal","txHash","setTxHash","days","setDays","reward","setReward","tokenBalance","setTokenBalance","smaBal","setSmaBal","transactionNo","setTransNo","dataArray","setDataArray","contract","setContract","userAddress","setUserAddress","isDisabled","setIsDisabled","timerDays","setTimerDays","timerHours","setTimerHours","timerMinutes","setTimerMinutes","showStakeModal","setShowStakeModal","daysLeft","daataarray","dispatch","totalSeconds","finalRewards","isTheUserConnected","state","persist","isUserConnected","getContract","_","callContract","closeTransactionModal","getSetAPY","d","c","rewardPercent","methods","call","console","log","someF","_contract","TokenBalance","getTokenBalance","getTheStake","setDisableStakeBtn","x","parseFloat","NaN","e","document","addEventListener","LOGIN_SUCCESS","preventDefault","isWalletSelected","setIsWalletSelected","selWalletType","localStorage","getItem","WALLET_TYPE","disabledStakeBtn","handleChange","ip","target","value","startTimer","timer","countDownDate","Date","now","getTime","difference","Math","floor","hours","minutes","seconds","destructure","array","i","stakingRewards","push","amount","lockInPeriod","lockInUntil","isClaimed","tryStake","tokenInstance","estimateGas","approve","from","approveToken","allowance","info","tx","send","gas","success","stake","result","on","hash","stakingTx","totalTransactions","txNo","transactionDetails","userTransactions","rewards","reverse","error","message","web3ErrorHandle","letsUnstake","trans","claim","err","catch","uAddr","alert","_setDays","stopPropagation","toFixed","length","map","item"],"sources":["/data/test/saitaClientGit/src/pages/Trade/Staking.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BigNumber } from \"bignumber.js\";\nimport {\n  Container,\n  Col,\n  Row,\n  Button,\n  Form,\n  FormControl,\n  Table,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Reflink from \"../../assets/images/reflink-icon.svg\";\nimport Twitter from \"../../assets/images/twitter-icon.svg\";\nimport Telegram from \"../../assets/images/telegram-icon.svg\";\nimport \"./Staking.scss\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport ABISTAKING from \"../../assets/ABI/SaitaABI.json\";\nimport TOKENABI from \"../../assets/ABI/abi.saitama.json\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport Loader from \"react-loader-spinner\";\nimport TransactionalModal from \"../../components/TransactionalModal/TransactionalModal\";\nimport Timer from \"../../components/Timer/Timer\";\nimport { startLoading, stopLoading } from \"../../redux/actions\";\nimport { ERRORS, EVENTS, LS_KEYS } from \"../../constant\";\nimport SwapModal from \"../../components/SwapModal/SwapModal\";\nimport StakeModal from \"../../components/StakeModal/StakeModal\";\nconst Staking = () => {\n  let trigger = false;\n  const stakingProxy = \"0x409353a02Ba3CCf60F3c503A6fd842a7A9C20782\";\n  // const stakingContract = \"0xE6A55671c1b863b73cCd8ECAcf4fa8Db3D6FF1b7\";\n  const tokenAddress = \"0xce3f08e664693ca792cace4af1364d5e220827b2\"; //saitaToken\n  const MAX_AMT = \"0xffffffffffffffffffffffffffffffffffffffff\";\n  const [inputAmount, setInputAmount] = useState(0);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n\n  const [days, setDays] = useState(0);\n  const [reward, setReward] = useState(0);\n  const [tokenBalance, setTokenBalance] = useState(0);\n  const [smaBal, setSmaBal] = useState(0.0);\n  // const [finaldays, setfinaldays] = useState();\n  const [transactionNo, setTransNo] = useState({});\n  const [dataArray, setDataArray] = useState([]);\n  const [contract, setContract] = useState();\n  const [userAddress, setUserAddress] = useState(\"\");\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [timerDays, setTimerDays] = useState();\n  const [timerHours, setTimerHours] = useState();\n  const [timerMinutes, setTimerMinutes] = useState();\n  const [showStakeModal, setShowStakeModal] = useState(!1);\n  // const [, setDaysLeft] = useState(true);\n  let daysLeft = true;\n  let daataarray = [];\n  const dispatch = useDispatch();\n  // const [dataObj, setDataObj] = useState({\n  //   amount: \"\",\n  //   lockInUntil: \"\",\n  //   isUnstaked: \"\",\n  //   stakeInTime: \"\",\n  // })\n\n  let totalSeconds = 86400;\n  let finalRewards =\n    inputAmount && reward ? (inputAmount * ((reward * days) / 365)) / 100 : 0;\n  const isTheUserConnected = useSelector(\n    (state) => state.persist.isUserConnected\n  );\n\n  const getContract = (_) => {\n    return ContractServices.callContract(stakingProxy, ABISTAKING);\n  };\n  const closeTransactionModal = () => {\n    setShowTransactionModal(false);\n    //props.backBtn();\n    //window.location.reload();\n  };\n  const getSetAPY = async (d) => {\n    const c = await getContract();\n    // if (!c) return toast.error(\"ERRORS.SEL_WALLET\");\n    if (c) {\n      let rewardPercent = await c.methods\n        .rewardPercent((d ? d : days) * totalSeconds)\n        .call();\n      console.log(\"## getting apy:\", rewardPercent);\n      setReward(rewardPercent / 100);\n    }\n  };\n\n  const someF = async () => {\n    let _contract = await getContract();\n    setContract(_contract);\n    setUserAddress(isTheUserConnected);\n    const userAddress = isTheUserConnected;\n\n    const TokenBalance = await ContractServices.getTokenBalance(\n      tokenAddress,\n      userAddress\n    );\n    console.log(\"TokenBalance\", TokenBalance);\n    setTokenBalance(TokenBalance);\n    getTheStake(isTheUserConnected);\n    await getSetAPY();\n\n    if (days === 0) setDisableStakeBtn(!0);\n    try {\n      const x = parseFloat(TokenBalance);\n      if (x !== NaN) {\n        setSmaBal(x);\n        if (parseFloat(inputAmount) < x) setDisableStakeBtn(!0);\n      }\n    } catch (e) {}\n  };\n\n  document.addEventListener(EVENTS.LOGIN_SUCCESS, async (e) => {\n    e.preventDefault();\n    await someF();\n  });\n\n  const [isWalletSelected, setIsWalletSelected] = useState(!1);\n\n  useEffect((_) => {\n    // onload check if wallet is selected\n    const selWalletType = localStorage.getItem(LS_KEYS.WALLET_TYPE);\n    if (!selWalletType) {\n      setIsWalletSelected(!1);\n    } else {\n      setIsWalletSelected(!0);\n    }\n  }, []);\n\n  useEffect(\n    (_) => {\n      (async (_) => {\n        await someF();\n        // ContractServices.callWeb3ForWalletConnect();\n      })();\n    },\n    [trigger]\n  );\n\n  const [disabledStakeBtn, setDisableStakeBtn] = useState(!0);\n\n  const handleChange = (e) => {\n    let ip = parseFloat(e.target.value);\n    setInputAmount(e.target.value);\n    console.log(\"smabal:\", smaBal, \"ip\", ip);\n    if (`${ip}` == \"NaN\") return setDisableStakeBtn(!0);\n    if (ip <= 0) return setDisableStakeBtn(!0);\n\n    if (ip > smaBal) return setDisableStakeBtn(!0);\n    console.log(\"initial days:\", days);\n    if (days == 0) return setDisableStakeBtn(!0);\n    setDisableStakeBtn(!1);\n    if (inputAmount) {\n      setIsDisabled(false);\n    }\n  };\n\n  const startTimer = (timer) => {\n    const countDownDate = new Date(timer * 1000);\n    const now = new Date().getTime();\n    const difference = countDownDate - now;\n    const days = Math.floor(difference / (24 * 60 * 60 * 1000));\n    const hours = Math.floor(\n      (difference % (24 * 60 * 60 * 1000)) / (1000 * 60 * 60)\n    );\n    const minutes = Math.floor((difference % (60 * 60 * 1000)) / (1000 * 60));\n    const seconds = Math.floor((difference % (60 * 1000)) / 1000);\n    // console.log(\"the difference\", difference);\n    if (difference <= 0) {\n      daysLeft = false;\n\n      return <>{\"Lockin period is over\"}</>;\n    } else {\n      daysLeft = true;\n      return <>{days + \":\" + hours + \":\" + minutes}</>;\n    }\n  };\n\n  const destructure = async (array, i, stakingRewards) => {\n    console.log(\"stakingRewards\", stakingRewards);\n    daataarray.push({\n      amount: array[0],\n      lockInPeriod: array[1],\n      lockInUntil: array[3],\n      isClaimed: array[4],\n      transactionNo: i,\n      stakingRewards: stakingRewards,\n    });\n  };\n\n  const tryStake = async () => {\n    setShowStakeModal(false);\n    if (isTheUserConnected) {\n      if (inputAmount) {\n        debugger;\n        try {\n          dispatch(startLoading());\n          // let userAddress = await ContractServices.isMetamaskInstalled();\n          // let gasPrice = await Contractservices.calculateGasPrice();\n          let tokenInstance = await ContractServices.callContract(\n            tokenAddress,\n            TOKENABI\n          );\n\n          let estimateGas = await tokenInstance.methods\n            .approve(stakingProxy, MAX_AMT)\n            .estimateGas({ from: userAddress });\n          setIsDisabled(true);\n          let approveToken = await tokenInstance.methods\n            .allowance(userAddress, stakingProxy)\n            .call();\n          if (approveToken == 0) {\n            toast.info(\"Kindly confirm saitama token approval.\");\n            const tx = await tokenInstance.methods\n              .approve(stakingProxy, MAX_AMT)\n              .send({ from: userAddress, gas: estimateGas });\n            toast.success(\"Approval success\");\n          }\n          let contract = await ContractServices.callContract(\n            stakingProxy,\n            ABISTAKING\n          );\n\n          let gas = await contract.methods\n            .stake(days * totalSeconds, BigNumber(inputAmount) * 10 ** 9)\n            .estimateGas({ from: userAddress });\n          toast.info(\"Kindly confirm staking transaction.\");\n          let result = await contract.methods\n            .stake(days * totalSeconds, BigNumber(inputAmount) * 10 ** 9)\n            .send({ from: userAddress, gas: gas })\n            .on(\"transactionHash\", (hash) => {\n              setTxHash(hash);\n\n              setShowTransactionModal(true);\n              dispatch(stopLoading());\n            });\n\n          console.log(\"uuuu result\", result);\n          toast.success(\"Staking success\");\n          // let data = await contract.methods.stakingTx(userAddress);\n          // setfinaldays(days * totalSeconds);\n          const transactionNo = await contract.methods\n            .stakingTx(userAddress)\n            .call();\n\n          dispatch(startLoading);\n          // setTransNo(transactionNo);\n          let totalTransactions = transactionNo.txNo;\n\n          let transactionDetails;\n          let stakingRewards;\n          for (let i = 1; i <= totalTransactions; i++) {\n            transactionDetails = await contract.methods\n              .userTransactions(userAddress, i)\n              .call();\n            stakingRewards = await contract.methods\n              .rewards(userAddress, i)\n              .call();\n            console.log(\"transactionDetails\", transactionDetails);\n            await destructure(transactionDetails, i, stakingRewards);\n          }\n\n          setDataArray(daataarray.reverse());\n          dispatch(stopLoading);\n          setIsDisabled(false);\n        } catch (error) {\n          console.log(error);\n          const message = await ContractServices.web3ErrorHandle(error);\n          toast.error(message);\n          dispatch(stopLoading);\n        }\n      } else {\n        toast.error(\"Please enter the staking amount\");\n      }\n    } else {\n      toast.error(\"Please Connect your wallet first\");\n    }\n  };\n  console.log(\"99999\", contract?.methods);\n  console.log(\"thidijojoijoijj\", tokenBalance);\n  const letsUnstake = async (trans) => {\n    // debugger;\n    setShowStakeModal(false);\n    console.log(\"0000\", trans);\n    if (isTheUserConnected) {\n      // debugger;\n      try {\n        let contract = await ContractServices.callContract(\n          stakingProxy,\n          ABISTAKING\n        );\n        setUserAddress(isTheUserConnected);\n        let gas = await contract.methods\n          .claim(trans)\n          .estimateGas({ from: userAddress });\n\n        dispatch(startLoading());\n\n        let result = contract.methods\n          .claim(trans)\n          .send({ from: userAddress, gas: gas })\n          .on(\"transactionHash\", (hash) => {\n            setTxHash(hash);\n            setShowTransactionModal(true);\n            dispatch(stopLoading());\n            try {\n              toast.success(\"Transaction Submitted\");\n            } catch (err) {\n              toast.error(err);\n            }\n          })\n          .catch((err) => {\n            toast.error(\"Transaction declined\");\n            dispatch(stopLoading());\n          });\n        // console.log(\"mmmmmmmmmmmmmmm\", result);\n        // if (txHash) {\n        //   toast.success(\"Claimed\");\n        // }\n\n        const transactionNo = await contract.methods\n          .stakingTx(userAddress)\n          .call();\n\n        setTransNo(transactionNo);\n        let totalTransactions = transactionNo.txNo;\n\n        let transactionDetails;\n        for (let i = 1; i <= totalTransactions; i++) {\n          transactionDetails = await contract.methods\n            .userTransactions(userAddress, i)\n            .call();\n          // console.log(\"transactionDetails\", transactionDetails);\n          await destructure(transactionDetails, i);\n        }\n      } catch (error) {\n        console.log(\"55555555555555\", error);\n        const message = await ContractServices.web3ErrorHandle(error);\n        toast.error(message);\n      }\n    }\n    if (!isTheUserConnected) {\n      toast.error(\"Please Connect your wallet first\");\n    }\n  };\n  console.log(\"the days left\", daysLeft);\n  const getTheStake = async (uAddr) => {\n    trigger = true;\n    let contract = await ContractServices.callContract(\n      stakingProxy,\n      ABISTAKING\n    );\n    // alert(\"in gettheStake\");\n    if (isTheUserConnected) {\n      try {\n        setIsDisabled(true);\n        dispatch(startLoading());\n        const transactionNo = await contract.methods.stakingTx(uAddr).call();\n        // console.log(\"transactionNo\", transactionNo);\n        setTransNo(transactionNo);\n        let totalTransactions = transactionNo.txNo;\n        // console.log(\"totalTransactions\", totalTransactions);\n        let transactionDetails;\n        let stakingRewards;\n        for (let i = 1; i <= totalTransactions; i++) {\n          transactionDetails = await contract.methods\n            .userTransactions(uAddr, i)\n            .call();\n          stakingRewards = await contract.methods.rewards(uAddr, i).call();\n          // console.log(\"transactionDetails\", transactionDetails);\n          await destructure(transactionDetails, i, stakingRewards);\n        }\n        setDataArray(daataarray.reverse());\n        setIsDisabled(false);\n        dispatch(stopLoading());\n      } catch (error) {\n        alert(error);\n      }\n    }\n  };\n  const _setDays = async (e, d) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (inputAmount > 0) {\n      setDays(d);\n      await getSetAPY(d);\n      setDisableStakeBtn(!1);\n    } else toast.info(\"Please enter staking amount.\");\n  };\n  // console.log(\"daysLeft\", daysLeft);\n  return (\n    // referral_page\n    <div className=\"container_wrap stakePage py-40\">\n      <div className=\"timeto_connect\">\n        <Container className=\"custom_container\">\n          <Row>\n            <Col>\n              <div className=\"staking_block\">\n                <div className=\"staking_head\">\n                  <p>Stake</p>\n                </div>\n                <p className=\"para\">\n                  Saitama Balance:{\" \"}\n                  <span className=\"ms-2\">{tokenBalance?.toFixed(4)}</span>\n                </p>\n                <div className=\"staking_content\">\n                  <form>\n                    <FormControl\n                      type=\"number\"\n                      placeholder=\"Input\"\n                      value={inputAmount}\n                      onChange={(e) => handleChange(e)}\n                      required\n                      onScroll={(_) => {\n                        console.log(\"scrolling\");\n                        _.preventDefault();\n                      }}\n                    />\n                    <div className=\"duration_sec\">\n                      <Button\n                        className=\"time_duration\"\n                        onClick={(e) => _setDays(e, 30)}\n                      >\n                        30 days\n                      </Button>\n                      <Button\n                        className=\"time_duration\"\n                        onClick={(e) => _setDays(e, 60)}\n                      >\n                        60 days\n                      </Button>\n                      <Button\n                        className=\"time_duration\"\n                        onClick={(e) => _setDays(e, 90)}\n                      >\n                        90 days\n                      </Button>\n                    </div>\n                    <div className=\"text_area text-white\">\n                      <div className=\"d-flex flex-column\">\n                        <p className=\"d-flex\">\n                          <span>APY:</span>\n                          <span className=\"ms-2\">{reward}%</span>\n                        </p>\n                        <p className=\"d-flex\">\n                          <span>Lock-In Period:</span>{\" \"}\n                          <span className=\"ms-2\">{days} Days</span>\n                        </p>\n                        <p className=\"d-flex\">\n                          <span>Final Rewards:</span>{\" \"}\n                          <span className=\"ms-2\">{finalRewards} Saitama</span>\n                        </p>\n                      </div>\n                    </div>\n                    <Button\n                      className=\"stake_btn\"\n                      id=\"myBtn\"\n                      disabled={disabledStakeBtn}\n                      onClick={(_) => setShowStakeModal(!0)}\n                    >\n                      Stake\n                    </Button>\n                  </form>\n\n                  <Button\n                    className=\"stake_btn\"\n                    onClick={() => getTheStake(isTheUserConnected)}\n                  >\n                    Get your stakings\n                  </Button>\n                </div>\n                {/* {console.log(\"in the jsx\", dataArray)} */}\n                <div className=\"stakeAmountbox\">\n                  <Table responsive className=\"duration_bits\">\n                    <thead>\n                      <tr>\n                        <th>Stake Amount</th>\n                        {/* <th>Rewards</th> */}\n                        <th>Rewards</th>\n                        <th>\n                          Locked in Until<br></br> (DD:HH:MM)\n                        </th>\n                        <th>Lock In Period</th>\n                        <th>Action</th>\n                      </tr>\n                    </thead>\n                    {dataArray.length > 0\n                      ? dataArray?.map((item) => (\n                          <tbody>\n                            <tr>\n                              <td>{item.amount / 10 ** 9} Saitama</td>\n                              <td>{item.stakingRewards / 10 ** 9} Saitama</td>\n                              {/* <td>{finalRewards} Saitama</td> */}\n                              <td>\n                                {/* {item.lockInUntil} */}\n                                {startTimer(item.lockInUntil)}\n                                <div className=\"timerBox\"></div>\n                              </td>\n                              <td>\n                                {item.lockInPeriod / totalSeconds + \" Days\"}\n                              </td>\n                              <td>\n                                {item.isClaimed === true ? (\n                                  <Button className=\"unstake_btn\" disabled>\n                                    Claimed\n                                  </Button>\n                                ) : daysLeft === false ? (\n                                  <Button\n                                    className=\"unstake_btn\"\n                                    onClick={() => {\n                                      try {\n                                        letsUnstake(item.transactionNo);\n                                      } catch (err) {\n                                        console.log(err);\n                                      }\n                                    }}\n                                  >\n                                    Unstake\n                                  </Button>\n                                ) : daysLeft === true ? (\n                                  <Button className=\"unstake_btn\" disabled>\n                                    Unstake\n                                  </Button>\n                                ) : null}\n                              </td>\n                            </tr>\n                          </tbody>\n                          // <div className=\"duration_bits value_sec\">\n                          //   <h3>{item.time}</h3>\n\n                          //   <div className=\"value_sec px-3\">\n                          //     <div className=\"value_amount_sec d-block\">\n                          //       <div className=\"value_amount d-flex\">\n                          //         <p></p>\n                          //         <p></p>\n                          //       </div>\n                          //       <div className=\"value_amount d-flex\">\n                          //         <p></p>\n                          //         <p></p>\n                          //       </div>\n                          //       <div className=\"value_amount d-flex\">\n                          //         <p>:</p>\n                          //         <p></p>\n                          //       </div>\n                          //     </div>\n                          //   </div>\n                          // </div>\n                        ))\n                      : null}\n                  </Table>\n                </div>\n              </div>\n            </Col>\n          </Row>\n          <StakeModal\n            handleStake={tryStake}\n            closeModal={() => setShowStakeModal(!showStakeModal)}\n            rewards={finalRewards}\n            stakePeriod={days}\n            show={showStakeModal}\n            // show={true}\n            stakeAmount={inputAmount}\n            tokenBalance={tokenBalance}\n          />\n        </Container>\n        <TransactionalModal\n          show={showTransactionModal}\n          handleClose={closeTransactionModal}\n          txHash={txHash}\n        />\n      </div>\n      {/* <div className=\"referrl_comm\">\n                <Container className=\"custom_container\">\n                    <Row>\n                       \n                    </Row>\n                </Container>\n            </div> */}\n    </div>\n  );\n};\n\nexport default Staking;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}