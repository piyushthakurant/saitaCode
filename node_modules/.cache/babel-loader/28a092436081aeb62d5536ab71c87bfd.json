{"ast":null,"code":"var _jsxFileName = \"/data/test/saitaClientGit/src/pages/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Carousel, Row, Col, Image } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Web3 from \"web3\";\nimport { Link } from \"react-router-dom\";\nimport { rootName } from \"../../constant\";\nimport Button from \"../../components/Button/Button\";\nimport FarmCard from \"../../components/FarmCard/FarmCard\";\nimport SAITA from \"../../assets/images/saitaswap.png\";\nimport BUSD from \"../../assets/images/token_icons/BUSD-Token.svg\";\nimport ANCHOR from \"../../assets/images/token_icons/ANCHOR-Token.svg\";\nimport BTCB from \"../../assets/images/token_icons/BTCB-Token.svg\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { ReferralsServices } from \"../../services/ReferralsServices\";\nimport Statement from \"../../assets/Pdfs/Statement.pdf\";\nimport { MAIN_CONTRACT_LIST, BURN_ADDRESS, ANCHOR_BUSD_LP, WETH, TOKEN_LIST, BNB_BUSD_LP } from \"../../assets/tokens\";\nimport { addCommas } from \"../../constant\";\nimport { addTransaction, startLoading, stopLoading, saveFotterValues } from \"../../redux/actions\";\nimport { BigNumber } from \"bignumber.js\";\nimport Loader from \"react-loader-spinner\";\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\";\nimport Default from \"../../assets/images/token_icons/default.svg\";\nimport { savereffralAddress } from \"../../redux/actions\";\nimport \"./Home.scss\";\nimport { toast } from \"../../components/Toast/Toast\";\nimport UpdateDsk from \"../../assets/images/PRDT-Trading-Banner.jpg\"; // import UpdateMob from \"../../assets/images/update_Mob.jpg\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const [potDetails, setPotDetails] = useState({\n    prizeArray: [0, 0, 0],\n    miniPrice: 0,\n    pot: 0,\n    decimals: 0\n  });\n  const {\n    ref\n  } = useParams();\n  const referralAddress = useSelector(state => state.persist.referralAddress);\n  const [rewards, seRewards] = useState(0);\n  const [saitaPerBlock, setSaitaPerBlock] = useState(0);\n  const [transferTaxRate, setTransferTaxRate] = useState(0);\n  const [burnedToken, setBurnedToken] = useState(0);\n  const [walletShow, setWalletShow] = useState(false);\n  const [poolLength, setPoolLength] = useState(0);\n  const [farms, setFarms] = useState([]);\n  const [inactiveFarms, setInactiveFarms] = useState([]);\n  const [stakingOnly, setStakingOnly] = useState([]);\n  const [stakeData, setStakeData] = useState(null);\n  const [stakeValue, setStakeValue] = useState(0);\n  const [referrer, setReferrer] = useState(\"0x0000000000000000000000000000000000000000\");\n  const [totalAmount, setAmount] = useState(0);\n  const [totalRewards, setRewards] = useState(0);\n  const [marketCap, setMarketCap] = useState(0.0);\n  const [anchorTotalSupply, setAnchorTotalSupply] = useState(0);\n  const [saitaBusdValue, setSaitaBusdValue] = useState(0);\n  const [totalMinted, setTotalMinted] = useState(0);\n  const [totalLockedRewards, setTotalLockedRewards] = useState(0);\n  const [anchorBnbWorth, setAnchorBnbWorth] = useState(0);\n  const [anchorBusdWorth, setAnchorBusdWorth] = useState(0);\n  const [tokenIds, setTokenIds] = useState();\n  const [allowance, setAllowance] = useState(false);\n  const [disable, setDisabledBUtton] = useState(false);\n  const [IButton, setIButton] = useState(false);\n  const [ticketWindow, openTicketWindow] = useState(false);\n  const [ticketValue, setvalue] = useState(1);\n  const [buyButton, setBuyButton] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [currentTicketsArray, setCurrentArray] = useState([]);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [harvest, setHarvestAll] = useState([]);\n  const [stakeConfirmation, setStakeConfimation] = useState(0);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const [farmAndStakeLoader, setFarmAndStakeLoader] = useState(false);\n  const [liquidity, setLiquidity] = useState(0);\n  const [saitaApr, setSaitaApr] = useState(0);\n  const [topFarms, setTopFarms] = useState([]);\n  const [topFarmApy, setTopFarmApy] = useState(\"\");\n  useEffect(async () => {\n    init();\n\n    if (ref) {\n      const checkAddress = await Web3.utils.isAddress(ref.toLowerCase());\n\n      if (!checkAddress) {\n        toast.error(\"Address does not exist!\");\n        return;\n      }\n\n      if (isUserConnected) {\n        let re = await ReferralsServices.getReferrer(isUserConnected);\n\n        if (re != \"0x0000000000000000000000000000000000000000\") {\n          toast.error(`This user has already referral`);\n          return;\n        }\n\n        dispatch(savereffralAddress(ref.toLowerCase()));\n        return;\n      }\n\n      toast.success(`Please connect with wallet!`);\n    }\n  }, [isUserConnected]);\n\n  const init = async () => {\n    const res = await ContractServices.isMetamaskInstalled();\n\n    if (isUserConnected && res) {\n      getMarketCap();\n      getBurnedToken();\n      getSaitaPerBlock();\n\n      try {\n        dispatch(startLoading());\n        let ref = await ReferralsServices.getReferrer(isUserConnected);\n\n        if (ref === \"0x0000000000000000000000000000000000000000\") {\n          if (referralAddress && referralAddress !== \"0x0000000000000000000000000000000000000000\") {\n            ref = referralAddress;\n          }\n\n          setReferrer(ref);\n        }\n\n        dispatch(stopLoading());\n        const pL = Number(await FarmService.poolLength());\n        setPoolLength(pL); // let farmsTemp = [];\n\n        let totalRewards = 0;\n        let totalLockedRewards = 0;\n        let totalLiquidity = 0;\n        let options = [];\n        const res = await ContractServices.getTokenBalance(TOKEN_LIST[1].address, isUserConnected);\n        setAmount(res); // setFarmAndStakeLoader(true);\n\n        let allAPRs = [];\n\n        for (let i = 0; i < pL; i++) {\n          const res = await FarmService.totalPoolInfo(i);\n          const userInfo = await FarmService.userInfo(i, isUserConnected);\n          const {\n            poolInfo,\n            latest\n          } = res;\n\n          if (poolInfo.lpToken != undefined) {\n            const allowance = await ContractServices.allowanceToken(poolInfo.lpToken, MAIN_CONTRACT_LIST.farm.address, isUserConnected);\n            let check = true;\n\n            if (BigNumber(allowance).isGreaterThanOrEqualTo(BigNumber(2 * 255 - 1))) {\n              // setShowApproveButton(false);\n              check = false;\n            }\n\n            const reserve = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n            const tokenZero = await ExchangeService.getTokenZero(ANCHOR_BUSD_LP);\n            const tokenOne = await ExchangeService.getTokenOne(ANCHOR_BUSD_LP);\n            const anchorPerBlock = Number(await FarmService.pantherPerBlock());\n            const price = await getPriceInUsd(tokenZero, tokenOne, reserve);\n            totalLockedRewards += (latest - poolInfo.lastRewardBlock) * price * (anchorPerBlock / 10 ** 18);\n            setTotalLockedRewards(totalLockedRewards);\n            const farmPoolInfo = await FarmService.farmAndPoolInfo(i);\n            const {\n              farm,\n              pool\n            } = farmPoolInfo;\n\n            if (farm) {\n              let res = await handleTotalLiquidity(farm.lpToken);\n              const lpTokenDetailsTemp = await FarmService.getLpTokenDetails(poolInfo.lpToken);\n              let apr = await calculateAPR(farm.allocPoint, res);\n              setTopFarms(topFarms => [...topFarms, {\n                symbol0: lpTokenDetailsTemp.symbol0,\n                symbol1: lpTokenDetailsTemp.symbol1,\n                newLiquidity: res,\n                newApr: apr\n              }]);\n              allAPRs.push(apr);\n              totalLiquidity += Number(res);\n            }\n\n            if (pool) {\n              const poolInfoForSaita = await FarmService.poolInfo(i, \"2\"); // console.log(\"poolInfoForSaita\", poolInfoForSaita);\n\n              let res = await handleTotalLiquidityForPool(pool.lpToken);\n              const tokenAmount = await ExchangeService.getTokenStaked(pool.lpToken);\n              let price = 0;\n\n              if (pool.lpToken.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n                price = 1;\n              } else {\n                const tokenPairUSDT = await ExchangeService.getPair(pool.lpToken, TOKEN_LIST[2].address);\n                price = await calPrice(tokenPairUSDT);\n              } //const saitaId = await FarmService.saitaId();\n              //console.log('this is apr',poolInfo,  saitaId);\n\n\n              if (poolInfoForSaita.allocPoint === \"30\") {\n                let apr = await calculateAPR(poolInfoForSaita.allocPoint, res);\n                setSaitaApr(apr);\n              }\n\n              const liq = tokenAmount * price;\n              totalLiquidity += Number(liq);\n              setLiquidity(totalLiquidity);\n            }\n\n            if (i === pL - 1) {\n              const totalSupply = await getTotalSupply();\n              const saitaValue = await getSaitaDollarValue();\n              const obj = {\n                tvl: totalLiquidity,\n                totalSupply: totalSupply,\n                saitaValue: saitaValue\n              };\n              dispatch(saveFotterValues(obj));\n            }\n\n            const rewards = Number(Number((await FarmService.pendingPanther(i, isUserConnected)) / 10 ** 18).toFixed(3));\n            totalRewards += rewards;\n            setRewards(totalRewards);\n            const nextHarvestUntil = await FarmService.canHarvest(i, isUserConnected);\n\n            if (!check && rewards > 0 && Number(userInfo.nextHarvestUntil) > 0 && nextHarvestUntil) {\n              setShowHarvest(true);\n              options.push({\n                pid: i,\n                lpToken: poolInfo.lpToken\n              });\n            }\n          } // if (i + 1 == pL) {\n          //     setFarmAndStakeLoader(false);\n          // }\n\n        }\n\n        setTopFarmApy(Math.max.apply(Math, allAPRs));\n        setHarvestAll(options);\n      } catch (err) {\n        console.log(err);\n        setFarmAndStakeLoader(false);\n        dispatch(stopLoading());\n      }\n    }\n  };\n\n  const calculateAPR = async (allocPoint, liquidity) => {\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(await FarmService.totalAllocationPoint());\n    const anchorPerBlock = Number(await FarmService.pantherPerBlock()); //need to calculate usd price.\n    // console.log(\"liquidity: \", liquidity);\n\n    if (liquidity != 0) {\n      const apr = allocPoint / totalAllcationPoint * (anchorPerBlock / 10 ** 18 * 28800 * 365 * 100 * anchorPrice) / liquidity;\n      return apr.toFixed(2);\n    }\n\n    return 0;\n  };\n\n  const getMarketCap = async () => {\n    const dollarValue = await getSaitaDollarValue();\n    const totalSupply = await getTotalSupply();\n    setMarketCap(dollarValue * totalSupply);\n  };\n\n  const getSaitaDollarValue = async () => {\n    const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n    setSaitaBusdValue(reserves[1] / reserves[0]);\n    return reserves[1] / reserves[0];\n  };\n\n  const getTotalSupply = async () => {\n    const res = await ExchangeService.getTotalSupply(MAIN_CONTRACT_LIST.anchorNew.address);\n    const anchorTotalSupply = res;\n    const txAmount = 0.05 * anchorTotalSupply / 100;\n    setTotalMinted(anchorTotalSupply);\n    setAnchorTotalSupply(txAmount);\n    return res;\n  };\n\n  const getBurnedToken = async () => {\n    try {\n      const response = await ExchangeService.getBurnedToken();\n      setBurnedToken(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getSaitaPerBlock = async () => {\n    try {\n      const saitaPerBlock = Number(await FarmService.pantherPerBlock());\n      setSaitaPerBlock(saitaPerBlock / 10 ** 18);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getPriceInUsd = async (tokenZero, tokenOne, reserve) => {\n    let price;\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      price = reserve[0] * decimalOne / (reserve[1] * decimalZero);\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      price = reserve[1] * decimalZero / (reserve[0] * decimalOne);\n    }\n\n    return price;\n  };\n\n  const calPrice = async pairAddress => {\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    } // console.log(\"pairAddresspairAddress\", pairAddress);\n\n\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return price = reserve[0] * 10 ** decimalOne / (reserve[1] * 10 ** decimalZero);\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return price = reserve[1] * 10 ** decimalZero / (reserve[0] * 10 ** decimalOne);\n    }\n\n    let priceBNBToUSD = await calPrice(BNB_BUSD_LP); //replace with BNB-USD pair\n\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price = reserve[0] * 10 ** decimalOne / (reserve[1] * 10 ** decimalZero);\n      return price * priceBNBToUSD;\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price = reserve[1] * 10 ** decimalZero / (reserve[0] * 10 ** decimalOne);\n      return price * priceBNBToUSD;\n    }\n  };\n\n  const getDollarAPR = async address => {\n    try {\n      if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n        const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        let val = reserves[1] / reserves[0];\n        val = val || 0; //setAnchorDollarValue(val.toFixed(3));\n\n        return val.toFixed(3);\n      } else if (address.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n        return 1;\n      } else if (address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n        const pair = await ExchangeService.getPairFromPancakeFactory(address, TOKEN_LIST[2].address);\n        const reserves = await ExchangeService.getReserves(pair);\n        let val = reserves[1] / reserves[0];\n        val = val || 0; // setAnchorDollarValue(val.toFixed(3));\n\n        return val.toFixed(3);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTotalLiquidity = async pairAddress => {\n    if (pairAddress != \"0x0000000000000000000000000000000000000000\") {\n      // console.log(pairAddress);\n      const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n      const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n      const reserve = await ExchangeService.getReserves(pairAddress);\n      const tokenZeroPairUSDT = await ExchangeService.getPair(tokenZero, TOKEN_LIST[2].address);\n      const tokenOnePairUSDT = await ExchangeService.getPair(tokenOne, TOKEN_LIST[2].address);\n      const tokenZeroPairBNB = await ExchangeService.getPair(tokenZero, WETH);\n      const tokenOnePairBNB = await ExchangeService.getPair(tokenOne, WETH);\n      const decimalZero = await ContractServices.getDecimals(tokenZero);\n      const decimalOne = await ContractServices.getDecimals(tokenOne); // const decimalPair = await ContractServices.getDecimals(pairAddress);\n\n      let priceA = await getDollarAPR(tokenZero);\n      let priceB = await getDollarAPR(tokenOne); // let priceA = 0;\n      // let priceB = 0;\n      // if (tokenZero.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceA = 1;\n      // } else if (tokenZero.toLowerCase() == WETH.toLowerCase()) {\n      //   priceA = await calPrice(BNB_BUSD_LP);\n      // }\n      // if (tokenOne.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceB = 1;\n      // } else if (tokenOne.toLowerCase() == WETH.toLowerCase()) {\n      //   priceB = await calPrice(BNB_BUSD_LP);\n      // }\n      // if (priceA == 0) {\n      //   if (tokenZeroPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceA = await calPrice(tokenZeroPairUSDT);\n      //   } else if (\n      //     tokenZeroPairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceA = await calPrice(tokenZeroPairBNB);\n      //   } else {\n      //     priceA = 0;\n      //   }\n      // }\n      // if (priceB == 0) {\n      //   if (tokenOnePairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceB = await calPrice(tokenOnePairUSDT);\n      //   } else if (\n      //     tokenOnePairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceB = await calPrice(tokenOnePairBNB);\n      //   } else {\n      //     priceB = 0;\n      //   }\n      // }\n\n      const totalSupply = await ExchangeService.getTotalSupply(pairAddress);\n      const tokenStaked = await ExchangeService.getTokenStaked(pairAddress);\n      const liquidity = (reserve[0] / 10 ** decimalZero * priceA + reserve[1] / 10 ** decimalOne * priceB) / totalSupply * tokenStaked;\n      return liquidity;\n    }\n\n    return 0;\n  };\n\n  const options = {\n    indicators: false\n  };\n\n  const handleTotalLiquidityForPool = async tokenAddress => {\n    if (tokenAddress != \"0x0000000000000000000000000000000000000000\") {\n      const reserve = await ExchangeService.getTokenStaked(tokenAddress);\n      const tokenPairUSDT = await ExchangeService.getPair(tokenAddress, TOKEN_LIST[2].address);\n      const tokenPairBNB = await ExchangeService.getPair(tokenAddress, WETH);\n      let priceA = 0;\n\n      if (tokenAddress.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n        priceA = 1;\n      } else if (tokenAddress.toLowerCase() == WETH.toLowerCase()) {\n        priceA = await calPrice(BNB_BUSD_LP);\n      }\n\n      if (priceA == 0) {\n        if (tokenPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await calPrice(tokenPairUSDT);\n        } else if (tokenPairBNB != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await calPrice(tokenPairBNB);\n          priceA = 0;\n        }\n      }\n\n      const liquidity = reserve * priceA;\n      return Number(liquidity).toFixed(2);\n    }\n\n    return 0;\n  };\n\n  const handleIcon = symbol => {\n    if (symbol != undefined) {\n      const tokenObj = TOKEN_LIST.find(d => d.symbol.toLowerCase() === symbol.toLowerCase());\n      return tokenObj != undefined ? tokenObj.icon : Default;\n    }\n  };\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container container_inside homePage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"updateSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: UpdateDsk,\n          className: \"forDesktop\",\n          alt: \"banner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          rel: \"stylesheet\",\n          href: \"https://prdt.saita.app\",\n          target: \"_blank\",\n          type: \"button\",\n          className: \"readState_btn\",\n          children: \"Go to Prediction Trading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n        fade: true,\n        ...options,\n        children: [/*#__PURE__*/_jsxDEV(Carousel.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Carousel.Caption, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Welcome to SAITA Swap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Decentralized Exchange and Automatic Liquidity Acquisition Yield Farm running currently on Binance Smart Chain.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"If you are new to SAITA please also visit our Tutorial Section in our official docs. We\\u2019ll teach you step by step you to use SAITA Swap and it\\u2019s assets.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://docs.saita.finance/tutorial\",\n              target: \"_blank\",\n              className: \"captionFooter d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"SAITA Tutorial\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: require(\"../../assets/images/Link-Icon.svg\").default,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 589,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            className: \"bgImage\",\n            alt: \"image\",\n            src: require(\"../../assets/images/dashboard-header-bg.jpg\").default\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n          children: [/*#__PURE__*/_jsxDEV(Carousel.Caption, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"The Docs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"All important and technical information about the project \\\"Saita\\\", tokenomics, project roadmap and term explanations can be found in our docs. If you have any questions, please ask them in the official Saita Telegram Channel.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://docs.saita.finance\",\n              target: \"_blank\",\n              className: \"captionFooter d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"SAITA Docs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: require(\"../../assets/images/Link-Icon.svg\").default,\n                  alt: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Image, {\n            className: \"bgImage\",\n            alt: \"image\",\n            src: require(\"../../assets/images/dashboard-header-bg.jpg\").default\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 628,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"startEngine\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: 4,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              className: \"headerImg\",\n              src: require(\"../../assets/images/swap-icon.svg\").default\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Start your engine \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Start your journey or improve your wallet portfolio:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"SAITA Price: $\", saitaBusdValue.toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/trade/exchange\",\n              className: \"captionFooter d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Buy SAITA Token \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"arrowIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: 4,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              className: \"headerImg\",\n              src: require(\"../../assets/images/farm-icon.svg\").default\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Farm Planets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Stake LP tokens in Farms and earn up to:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [topFarmApy !== \"\" ? topFarmApy : \"loading..\", \" % APR\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"captionFooter d-flex justify-content-between align-items-center\",\n              to: \"farmplanets/active\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Start farming\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"arrowIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: 4,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk\",\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              className: \"headerImg\",\n              src: require(\"../../assets/images/reflink-icon.svg\").default\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Decentralized Ref Link \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enjoy Referral Rewards from:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Farms, Pools Swaps\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"captionFooter d-flex justify-content-between align-items-center\",\n              to: \"/referral\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Start inviting friends\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 17\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"arrowIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 686,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"announcements\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk  carousel_caption_announce\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"fw-strong pb-2\",\n              children: \"Announcements\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n              sourceType: \"profile\",\n              screenName: \"saitafinance\",\n              options: {\n                height: 418\n              },\n              theme: \"dark\",\n              noScrollbar: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xl: 6,\n          lg: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"SAITA Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"pl-0 saitaStats\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Market Cap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"$\", addCommas(marketCap.toFixed(2))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Total Minted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 713,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: addCommas(Number(totalMinted).toFixed(2))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 714,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Total Burned\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: addCommas(burnedToken)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 718,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Total Locked Rewards\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    className: \"value\",\n                    children: farmAndStakeLoader ? /*#__PURE__*/_jsxDEV(Loader, {\n                      type: \"Circles\",\n                      color: \"#FFFFFF\",\n                      height: 15,\n                      width: 15,\n                      visible: true // timeout={5000} //3 secs\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 725,\n                      columnNumber: 25\n                    }, this) : addCommas(totalLockedRewards ? totalLockedRewards.toFixed(2) : 0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 723,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" Circulating Supply \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: addCommas((totalMinted - burnedToken).toFixed(2))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Max Tx Amount \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: addCommas(anchorTotalSupply.toFixed(2))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 747,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"New Saita/Block\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 752,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: saitaPerBlock\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 751,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Transfer Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 757,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"3%\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 756,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comnBlk\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Total Value Locked (TVL)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"totl_value\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\" \", farmAndStakeLoader ? /*#__PURE__*/_jsxDEV(Loader, {\n                  type: \"Circles\",\n                  color: \"#FFFFFF\",\n                  height: 15,\n                  width: 15,\n                  visible: true // timeout={5000} //3 secs\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 768,\n                  columnNumber: 21\n                }, this) : addCommas(liquidity ? liquidity.toFixed(2) : 0)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-0\",\n                children: \"Across all Farms and Pools\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"all_farms\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"farm_title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Top Farm Planets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              title: \"All Farms\",\n              onClick: () => {\n                history.push(`${rootName}/farmplanets/active`);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 11\n        }, this), topFarms.sort(function (a, b) {\n          let keyA = a.newApr,\n              keyB = b.newApr; // Compare the 2 farms\n\n          if (keyA < keyB) return 1;\n          if (keyA > keyB) return -1;\n          return 0;\n        }).filter((farm, index) => index < 3).map((topFarm, index) => /*#__PURE__*/_jsxDEV(Col, {\n          xl: 4,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(FarmCard, {\n            title: topFarm.symbol0,\n            title1: topFarm.symbol1,\n            icon1: handleIcon(topFarm === null || topFarm === void 0 ? void 0 : topFarm.symbol0) ? handleIcon(topFarm === null || topFarm === void 0 ? void 0 : topFarm.symbol0) : \"\",\n            icon2: handleIcon(topFarm === null || topFarm === void 0 ? void 0 : topFarm.symbol1) ? handleIcon(topFarm === null || topFarm === void 0 ? void 0 : topFarm.symbol1) : \"\",\n            liquidity: `$${topFarm.newLiquidity} `,\n            apy: `${topFarm.newApr != \"NaN\" ? topFarm.newApr : \"0\"} %`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 552,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"1Du7fXzXL8b5UnXNtFJxzVPMCAM=\", false, function () {\n  return [useDispatch, useSelector, useParams, useSelector, useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Carousel","Row","Col","Image","useHistory","useParams","useDispatch","useSelector","Web3","Link","rootName","Button","FarmCard","SAITA","ContractServices","ExchangeService","FarmService","ReferralsServices","Statement","MAIN_CONTRACT_LIST","BURN_ADDRESS","ANCHOR_BUSD_LP","WETH","TOKEN_LIST","BNB_BUSD_LP","addCommas","addTransaction","startLoading","stopLoading","saveFotterValues","BigNumber","Loader","TwitterTimelineEmbed","savereffralAddress","toast","UpdateDsk","Home","dispatch","isUserConnected","state","persist","potDetails","setPotDetails","prizeArray","miniPrice","pot","decimals","ref","referralAddress","rewards","seRewards","saitaPerBlock","setSaitaPerBlock","transferTaxRate","setTransferTaxRate","burnedToken","setBurnedToken","walletShow","setWalletShow","poolLength","setPoolLength","farms","setFarms","inactiveFarms","setInactiveFarms","stakingOnly","setStakingOnly","stakeData","setStakeData","stakeValue","setStakeValue","referrer","setReferrer","totalAmount","setAmount","totalRewards","setRewards","marketCap","setMarketCap","anchorTotalSupply","setAnchorTotalSupply","saitaBusdValue","setSaitaBusdValue","totalMinted","setTotalMinted","totalLockedRewards","setTotalLockedRewards","anchorBnbWorth","setAnchorBnbWorth","anchorBusdWorth","setAnchorBusdWorth","tokenIds","setTokenIds","allowance","setAllowance","disable","setDisabledBUtton","IButton","setIButton","ticketWindow","openTicketWindow","ticketValue","setvalue","buyButton","setBuyButton","loader","setLoader","currentTicketsArray","setCurrentArray","showHarvest","setShowHarvest","harvest","setHarvestAll","stakeConfirmation","setStakeConfimation","showTransactionModal","setShowTransactionModal","txHash","setTxHash","farmAndStakeLoader","setFarmAndStakeLoader","liquidity","setLiquidity","saitaApr","setSaitaApr","topFarms","setTopFarms","topFarmApy","setTopFarmApy","init","checkAddress","utils","isAddress","toLowerCase","error","re","getReferrer","success","res","isMetamaskInstalled","getMarketCap","getBurnedToken","getSaitaPerBlock","pL","Number","totalLiquidity","options","getTokenBalance","address","allAPRs","i","totalPoolInfo","userInfo","poolInfo","latest","lpToken","undefined","allowanceToken","farm","check","isGreaterThanOrEqualTo","reserve","getReserves","tokenZero","getTokenZero","tokenOne","getTokenOne","anchorPerBlock","pantherPerBlock","price","getPriceInUsd","lastRewardBlock","farmPoolInfo","farmAndPoolInfo","pool","handleTotalLiquidity","lpTokenDetailsTemp","getLpTokenDetails","apr","calculateAPR","allocPoint","symbol0","symbol1","newLiquidity","newApr","push","poolInfoForSaita","handleTotalLiquidityForPool","tokenAmount","getTokenStaked","tokenPairUSDT","getPair","calPrice","liq","totalSupply","getTotalSupply","saitaValue","getSaitaDollarValue","obj","tvl","pendingPanther","toFixed","nextHarvestUntil","canHarvest","pid","Math","max","apply","err","console","log","anchorPrice","totalAllcationPoint","totalAllocationPoint","dollarValue","reserves","anchorNew","txAmount","response","decimalZero","getDecimals","decimalOne","pairAddress","priceBNBToUSD","getDollarAPR","val","pair","getPairFromPancakeFactory","tokenZeroPairUSDT","tokenOnePairUSDT","tokenZeroPairBNB","tokenOnePairBNB","priceA","priceB","tokenStaked","indicators","tokenAddress","tokenPairBNB","handleIcon","symbol","tokenObj","find","d","icon","Default","history","require","default","height","sort","a","b","keyA","keyB","filter","index","map","topFarm"],"sources":["/data/test/saitaClientGit/src/pages/Home/Home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Carousel, Row, Col, Image } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Web3 from \"web3\";\nimport { Link } from \"react-router-dom\";\nimport { rootName } from \"../../constant\";\nimport Button from \"../../components/Button/Button\";\nimport FarmCard from \"../../components/FarmCard/FarmCard\";\nimport SAITA from \"../../assets/images/saitaswap.png\";\nimport BUSD from \"../../assets/images/token_icons/BUSD-Token.svg\";\nimport ANCHOR from \"../../assets/images/token_icons/ANCHOR-Token.svg\";\nimport BTCB from \"../../assets/images/token_icons/BTCB-Token.svg\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { ReferralsServices } from \"../../services/ReferralsServices\";\nimport Statement from \"../../assets/Pdfs/Statement.pdf\";\nimport {\n  MAIN_CONTRACT_LIST,\n  BURN_ADDRESS,\n  ANCHOR_BUSD_LP,\n  WETH,\n  TOKEN_LIST,\n  BNB_BUSD_LP,\n} from \"../../assets/tokens\";\nimport { addCommas } from \"../../constant\";\nimport {\n  addTransaction,\n  startLoading,\n  stopLoading,\n  saveFotterValues,\n} from \"../../redux/actions\";\nimport { BigNumber } from \"bignumber.js\";\nimport Loader from \"react-loader-spinner\";\nimport { TwitterTimelineEmbed } from \"react-twitter-embed\";\nimport Default from \"../../assets/images/token_icons/default.svg\";\nimport { savereffralAddress } from \"../../redux/actions\";\n\nimport \"./Home.scss\";\nimport { toast } from \"../../components/Toast/Toast\";\n\nimport UpdateDsk from \"../../assets/images/PRDT-Trading-Banner.jpg\";\n// import UpdateMob from \"../../assets/images/update_Mob.jpg\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n  const [potDetails, setPotDetails] = useState({\n    prizeArray: [0, 0, 0],\n    miniPrice: 0,\n    pot: 0,\n    decimals: 0,\n  });\n  const { ref } = useParams();\n  const referralAddress = useSelector((state) => state.persist.referralAddress);\n  const [rewards, seRewards] = useState(0);\n  const [saitaPerBlock, setSaitaPerBlock] = useState(0);\n  const [transferTaxRate, setTransferTaxRate] = useState(0);\n  const [burnedToken, setBurnedToken] = useState(0);\n  const [walletShow, setWalletShow] = useState(false);\n  const [poolLength, setPoolLength] = useState(0);\n  const [farms, setFarms] = useState([]);\n  const [inactiveFarms, setInactiveFarms] = useState([]);\n  const [stakingOnly, setStakingOnly] = useState([]);\n  const [stakeData, setStakeData] = useState(null);\n  const [stakeValue, setStakeValue] = useState(0);\n  const [referrer, setReferrer] = useState(\n    \"0x0000000000000000000000000000000000000000\"\n  );\n  const [totalAmount, setAmount] = useState(0);\n  const [totalRewards, setRewards] = useState(0);\n  const [marketCap, setMarketCap] = useState(0.0);\n  const [anchorTotalSupply, setAnchorTotalSupply] = useState(0);\n  const [saitaBusdValue, setSaitaBusdValue] = useState(0);\n  const [totalMinted, setTotalMinted] = useState(0);\n  const [totalLockedRewards, setTotalLockedRewards] = useState(0);\n  const [anchorBnbWorth, setAnchorBnbWorth] = useState(0);\n  const [anchorBusdWorth, setAnchorBusdWorth] = useState(0);\n  const [tokenIds, setTokenIds] = useState();\n  const [allowance, setAllowance] = useState(false);\n  const [disable, setDisabledBUtton] = useState(false);\n  const [IButton, setIButton] = useState(false);\n  const [ticketWindow, openTicketWindow] = useState(false);\n  const [ticketValue, setvalue] = useState(1);\n  const [buyButton, setBuyButton] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [currentTicketsArray, setCurrentArray] = useState([]);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [harvest, setHarvestAll] = useState([]);\n  const [stakeConfirmation, setStakeConfimation] = useState(0);\n  const [showTransactionModal, setShowTransactionModal] = useState(false);\n  const [txHash, setTxHash] = useState(\"\");\n  const [farmAndStakeLoader, setFarmAndStakeLoader] = useState(false);\n  const [liquidity, setLiquidity] = useState(0);\n  const [saitaApr, setSaitaApr] = useState(0);\n\n  const [topFarms, setTopFarms] = useState([]);\n  const [topFarmApy, setTopFarmApy] = useState(\"\");\n\n  useEffect(async () => {\n    init();\n    if (ref) {\n      const checkAddress = await Web3.utils.isAddress(ref.toLowerCase());\n      if (!checkAddress) {\n        toast.error(\"Address does not exist!\");\n        return;\n      }\n      if (isUserConnected) {\n        let re = await ReferralsServices.getReferrer(isUserConnected);\n        if (re != \"0x0000000000000000000000000000000000000000\") {\n          toast.error(`This user has already referral`);\n          return;\n        }\n        dispatch(savereffralAddress(ref.toLowerCase()));\n        return;\n      }\n      toast.success(`Please connect with wallet!`);\n    }\n  }, [isUserConnected]);\n\n  const init = async () => {\n    const res = await ContractServices.isMetamaskInstalled();\n\n    if (isUserConnected && res) {\n      getMarketCap();\n      getBurnedToken();\n      getSaitaPerBlock();\n      try {\n        dispatch(startLoading());\n        let ref = await ReferralsServices.getReferrer(isUserConnected);\n        if (ref === \"0x0000000000000000000000000000000000000000\") {\n          if (\n            referralAddress &&\n            referralAddress !== \"0x0000000000000000000000000000000000000000\"\n          ) {\n            ref = referralAddress;\n          }\n          setReferrer(ref);\n        }\n        dispatch(stopLoading());\n        const pL = Number(await FarmService.poolLength());\n        setPoolLength(pL);\n        // let farmsTemp = [];\n        let totalRewards = 0;\n        let totalLockedRewards = 0;\n        let totalLiquidity = 0;\n        let options = [];\n        const res = await ContractServices.getTokenBalance(\n          TOKEN_LIST[1].address,\n          isUserConnected\n        );\n        setAmount(res);\n        // setFarmAndStakeLoader(true);\n        let allAPRs = [];\n        for (let i = 0; i < pL; i++) {\n          const res = await FarmService.totalPoolInfo(i);\n          const userInfo = await FarmService.userInfo(i, isUserConnected);\n          const { poolInfo, latest } = res;\n\n          if (poolInfo.lpToken != undefined) {\n            const allowance = await ContractServices.allowanceToken(\n              poolInfo.lpToken,\n              MAIN_CONTRACT_LIST.farm.address,\n              isUserConnected\n            );\n            let check = true;\n            if (\n              BigNumber(allowance).isGreaterThanOrEqualTo(\n                BigNumber(2 * 255 - 1)\n              )\n            ) {\n              // setShowApproveButton(false);\n              check = false;\n            }\n            const reserve = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n            const tokenZero = await ExchangeService.getTokenZero(\n              ANCHOR_BUSD_LP\n            );\n            const tokenOne = await ExchangeService.getTokenOne(ANCHOR_BUSD_LP);\n            const anchorPerBlock = Number(await FarmService.pantherPerBlock());\n            const price = await getPriceInUsd(tokenZero, tokenOne, reserve);\n\n            totalLockedRewards +=\n              (latest - poolInfo.lastRewardBlock) *\n              price *\n              (anchorPerBlock / 10 ** 18);\n            setTotalLockedRewards(totalLockedRewards);\n\n            const farmPoolInfo = await FarmService.farmAndPoolInfo(i);\n            const { farm, pool } = farmPoolInfo;\n            if (farm) {\n              let res = await handleTotalLiquidity(farm.lpToken);\n\n              const lpTokenDetailsTemp = await FarmService.getLpTokenDetails(\n                poolInfo.lpToken\n              );\n              let apr = await calculateAPR(farm.allocPoint, res);\n              setTopFarms((topFarms) => [\n                ...topFarms,\n                {\n                  symbol0: lpTokenDetailsTemp.symbol0,\n                  symbol1: lpTokenDetailsTemp.symbol1,\n                  newLiquidity: res,\n                  newApr: apr,\n                },\n              ]);\n              allAPRs.push(apr);\n              totalLiquidity += Number(res);\n            }\n            if (pool) {\n              const poolInfoForSaita = await FarmService.poolInfo(i, \"2\");\n              // console.log(\"poolInfoForSaita\", poolInfoForSaita);\n              let res = await handleTotalLiquidityForPool(pool.lpToken);\n              const tokenAmount = await ExchangeService.getTokenStaked(\n                pool.lpToken\n              );\n              let price = 0;\n              if (\n                pool.lpToken.toLowerCase() ===\n                TOKEN_LIST[2].address.toLowerCase()\n              ) {\n                price = 1;\n              } else {\n                const tokenPairUSDT = await ExchangeService.getPair(\n                  pool.lpToken,\n                  TOKEN_LIST[2].address\n                );\n                price = await calPrice(tokenPairUSDT);\n              }\n              //const saitaId = await FarmService.saitaId();\n              //console.log('this is apr',poolInfo,  saitaId);\n              if (poolInfoForSaita.allocPoint === \"30\") {\n                let apr = await calculateAPR(poolInfoForSaita.allocPoint, res);\n                setSaitaApr(apr);\n              }\n              const liq = tokenAmount * price;\n              totalLiquidity += Number(liq);\n              setLiquidity(totalLiquidity);\n            }\n\n            if (i === pL - 1) {\n              const totalSupply = await getTotalSupply();\n              const saitaValue = await getSaitaDollarValue();\n              const obj = {\n                tvl: totalLiquidity,\n                totalSupply: totalSupply,\n                saitaValue: saitaValue,\n              };\n              dispatch(saveFotterValues(obj));\n            }\n            const rewards = Number(\n              Number(\n                (await FarmService.pendingPanther(i, isUserConnected)) /\n                  10 ** 18\n              ).toFixed(3)\n            );\n            totalRewards += rewards;\n            setRewards(totalRewards);\n\n            const nextHarvestUntil = await FarmService.canHarvest(\n              i,\n              isUserConnected\n            );\n            if (\n              !check &&\n              rewards > 0 &&\n              Number(userInfo.nextHarvestUntil) > 0 &&\n              nextHarvestUntil\n            ) {\n              setShowHarvest(true);\n              options.push({ pid: i, lpToken: poolInfo.lpToken });\n            }\n          }\n          // if (i + 1 == pL) {\n          //     setFarmAndStakeLoader(false);\n          // }\n        }\n        setTopFarmApy(Math.max.apply(Math, allAPRs));\n        setHarvestAll(options);\n      } catch (err) {\n        console.log(err);\n        setFarmAndStakeLoader(false);\n        dispatch(stopLoading());\n      }\n    }\n  };\n  const calculateAPR = async (allocPoint, liquidity) => {\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(\n      await FarmService.totalAllocationPoint()\n    );\n    const anchorPerBlock = Number(await FarmService.pantherPerBlock());\n    //need to calculate usd price.\n    // console.log(\"liquidity: \", liquidity);\n    if (liquidity != 0) {\n      const apr =\n        ((allocPoint / totalAllcationPoint) *\n          ((anchorPerBlock / 10 ** 18) * 28800 * 365 * 100 * anchorPrice)) /\n        liquidity;\n\n      return apr.toFixed(2);\n    }\n\n    return 0;\n  };\n  const getMarketCap = async () => {\n    const dollarValue = await getSaitaDollarValue();\n    const totalSupply = await getTotalSupply();\n    setMarketCap(dollarValue * totalSupply);\n  };\n  const getSaitaDollarValue = async () => {\n    const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n    setSaitaBusdValue(reserves[1] / reserves[0]);\n    return reserves[1] / reserves[0];\n  };\n  const getTotalSupply = async () => {\n    const res = await ExchangeService.getTotalSupply(\n      MAIN_CONTRACT_LIST.anchorNew.address\n    );\n    const anchorTotalSupply = res;\n    const txAmount = (0.05 * anchorTotalSupply) / 100;\n    setTotalMinted(anchorTotalSupply);\n    setAnchorTotalSupply(txAmount);\n    return res;\n  };\n  const getBurnedToken = async () => {\n    try {\n      const response = await ExchangeService.getBurnedToken();\n      setBurnedToken(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getSaitaPerBlock = async () => {\n    try {\n      const saitaPerBlock = Number(await FarmService.pantherPerBlock());\n      setSaitaPerBlock(saitaPerBlock / 10 ** 18);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getPriceInUsd = async (tokenZero, tokenOne, reserve) => {\n    let price;\n\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      price = (reserve[0] * decimalOne) / (reserve[1] * decimalZero);\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      price = (reserve[1] * decimalZero) / (reserve[0] * decimalOne);\n    }\n\n    return price;\n  };\n  const calPrice = async (pairAddress) => {\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    }\n\n    // console.log(\"pairAddresspairAddress\", pairAddress);\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return (price =\n        (reserve[0] * 10 ** decimalOne) / (reserve[1] * 10 ** decimalZero));\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return (price =\n        (reserve[1] * 10 ** decimalZero) / (reserve[0] * 10 ** decimalOne));\n    }\n\n    let priceBNBToUSD = await calPrice(BNB_BUSD_LP); //replace with BNB-USD pair\n\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price =\n        (reserve[0] * 10 ** decimalOne) / (reserve[1] * 10 ** decimalZero);\n      return price * priceBNBToUSD;\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price =\n        (reserve[1] * 10 ** decimalZero) / (reserve[0] * 10 ** decimalOne);\n      return price * priceBNBToUSD;\n    }\n  };\n\n  const getDollarAPR = async (address) => {\n    try {\n      if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n        const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        let val = reserves[1] / reserves[0];\n        val = val || 0;\n        //setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      } else if (\n        address.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()\n      ) {\n        return 1;\n      } else if (address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n        const pair = await ExchangeService.getPairFromPancakeFactory(\n          address,\n          TOKEN_LIST[2].address\n        );\n        const reserves = await ExchangeService.getReserves(pair);\n        let val = reserves[1] / reserves[0];\n        val = val || 0;\n        // setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleTotalLiquidity = async (pairAddress) => {\n    if (pairAddress != \"0x0000000000000000000000000000000000000000\") {\n      // console.log(pairAddress);\n      const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n      const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n      const reserve = await ExchangeService.getReserves(pairAddress);\n      const tokenZeroPairUSDT = await ExchangeService.getPair(\n        tokenZero,\n        TOKEN_LIST[2].address\n      );\n      const tokenOnePairUSDT = await ExchangeService.getPair(\n        tokenOne,\n        TOKEN_LIST[2].address\n      );\n\n      const tokenZeroPairBNB = await ExchangeService.getPair(tokenZero, WETH);\n      const tokenOnePairBNB = await ExchangeService.getPair(tokenOne, WETH);\n\n      const decimalZero = await ContractServices.getDecimals(tokenZero);\n      const decimalOne = await ContractServices.getDecimals(tokenOne);\n      // const decimalPair = await ContractServices.getDecimals(pairAddress);\n\n      let priceA = await getDollarAPR(tokenZero);\n      let priceB = await getDollarAPR(tokenOne);\n\n      // let priceA = 0;\n      // let priceB = 0;\n\n      // if (tokenZero.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceA = 1;\n      // } else if (tokenZero.toLowerCase() == WETH.toLowerCase()) {\n      //   priceA = await calPrice(BNB_BUSD_LP);\n      // }\n\n      // if (tokenOne.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceB = 1;\n      // } else if (tokenOne.toLowerCase() == WETH.toLowerCase()) {\n      //   priceB = await calPrice(BNB_BUSD_LP);\n      // }\n\n      // if (priceA == 0) {\n      //   if (tokenZeroPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceA = await calPrice(tokenZeroPairUSDT);\n      //   } else if (\n      //     tokenZeroPairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceA = await calPrice(tokenZeroPairBNB);\n      //   } else {\n      //     priceA = 0;\n      //   }\n      // }\n\n      // if (priceB == 0) {\n      //   if (tokenOnePairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceB = await calPrice(tokenOnePairUSDT);\n      //   } else if (\n      //     tokenOnePairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceB = await calPrice(tokenOnePairBNB);\n      //   } else {\n      //     priceB = 0;\n      //   }\n      // }\n\n      const totalSupply = await ExchangeService.getTotalSupply(pairAddress);\n      const tokenStaked = await ExchangeService.getTokenStaked(pairAddress);\n\n      const liquidity =\n        (((reserve[0] / 10 ** decimalZero) * priceA +\n          (reserve[1] / 10 ** decimalOne) * priceB) /\n          totalSupply) *\n        tokenStaked;\n\n      return liquidity;\n    }\n    return 0;\n  };\n  const options = {\n    indicators: false,\n  };\n  const handleTotalLiquidityForPool = async (tokenAddress) => {\n    if (tokenAddress != \"0x0000000000000000000000000000000000000000\") {\n      const reserve = await ExchangeService.getTokenStaked(tokenAddress);\n      const tokenPairUSDT = await ExchangeService.getPair(\n        tokenAddress,\n        TOKEN_LIST[2].address\n      );\n      const tokenPairBNB = await ExchangeService.getPair(tokenAddress, WETH);\n\n      let priceA = 0;\n\n      if (tokenAddress.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n        priceA = 1;\n      } else if (tokenAddress.toLowerCase() == WETH.toLowerCase()) {\n        priceA = await calPrice(BNB_BUSD_LP);\n      }\n\n      if (priceA == 0) {\n        if (tokenPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await calPrice(tokenPairUSDT);\n        } else if (\n          tokenPairBNB != \"0x0000000000000000000000000000000000000000\"\n        ) {\n          priceA = await calPrice(tokenPairBNB);\n          priceA = 0;\n        }\n      }\n\n      const liquidity = reserve * priceA;\n\n      return Number(liquidity).toFixed(2);\n    }\n    return 0;\n  };\n  const handleIcon = (symbol) => {\n    if (symbol != undefined) {\n      const tokenObj = TOKEN_LIST.find(\n        (d) => d.symbol.toLowerCase() === symbol.toLowerCase()\n      );\n      return tokenObj != undefined ? tokenObj.icon : Default;\n    }\n  };\n\n  const history = useHistory();\n  return (\n    <div className=\"container_wrap\">\n      <div className=\"container container_inside homePage\">\n        <div className=\"updateSection\">\n          <img src={UpdateDsk} className=\"forDesktop\" alt=\"banner\" />\n          {/* <img src={UpdateMob} className=\"forMob\" alt=\"banner\" /> */}\n          {/* <Button  title=\"Read Statement of the team\" className=\"readState_btn\" /> */}\n          <a\n            rel=\"stylesheet\"\n            href={\"https://prdt.saita.app\"}\n            target=\"_blank\"\n            type=\"button\"\n            className=\"readState_btn\"\n          >\n            Go to Prediction Trading\n          </a>\n          {/* <a rel=\"stylesheet\" href={Statement} target=\"_blank\" type=\"button\" className=\"readState_btn\" >Read Statement of the team</a> */}\n        </div>\n\n        <Carousel fade {...options}>\n          <Carousel.Item>\n            <Carousel.Caption>\n              <h3>Welcome to SAITA Swap</h3>\n              <p>\n                Decentralized Exchange and Automatic Liquidity Acquisition Yield\n                Farm running currently on Binance Smart Chain.\n              </p>\n              <p>\n                If you are new to SAITA please also visit our Tutorial Section\n                in our official docs. We’ll teach you step by step you to use\n                SAITA Swap and it’s assets.\n              </p>\n              <a\n                href=\"https://docs.saita.finance/tutorial\"\n                target={\"_blank\"}\n                className=\"captionFooter d-flex justify-content-between align-items-center\"\n              >\n                <span>SAITA Tutorial</span>\n                <span>\n                  <Image\n                    src={require(\"../../assets/images/Link-Icon.svg\").default}\n                    alt=\"icon\"\n                  />\n                </span>\n              </a>\n            </Carousel.Caption>\n            <Image\n              className=\"bgImage\"\n              alt=\"image\"\n              src={\n                require(\"../../assets/images/dashboard-header-bg.jpg\").default\n              }\n            />\n          </Carousel.Item>\n          <Carousel.Item>\n            <Carousel.Caption>\n              <h3>The Docs</h3>\n              <p>\n                All important and technical information about the project\n                \"Saita\", tokenomics, project roadmap and term explanations can\n                be found in our docs. If you have any questions, please ask them\n                in the official Saita Telegram Channel.\n              </p>\n              <a\n                href=\"https://docs.saita.finance\"\n                target={\"_blank\"}\n                className=\"captionFooter d-flex justify-content-between align-items-center\"\n              >\n                <span>SAITA Docs</span>{\" \"}\n                <span>\n                  <Image\n                    src={require(\"../../assets/images/Link-Icon.svg\").default}\n                    alt=\"icon\"\n                  />\n                </span>\n              </a>\n            </Carousel.Caption>\n            <Image\n              className=\"bgImage\"\n              alt=\"image\"\n              src={\n                require(\"../../assets/images/dashboard-header-bg.jpg\").default\n              }\n            />\n          </Carousel.Item>\n        </Carousel>\n        <Row className=\"startEngine\">\n          <Col xl={4} lg={12}>\n            <div className=\"comnBlk\">\n              <Image\n                className=\"headerImg\"\n                src={require(\"../../assets/images/swap-icon.svg\").default}\n              />\n              <h3>Start your engine </h3>\n              <p>Start your journey or improve your wallet portfolio:</p>\n              <h3>SAITA Price: ${saitaBusdValue.toFixed(4)}</h3>\n              <Link\n                to={\"/trade/exchange\"}\n                className=\"captionFooter d-flex justify-content-between align-items-center\"\n              >\n                <span>Buy SAITA Token </span> <span className=\"arrowIcon\" />\n              </Link>\n            </div>\n          </Col>\n          <Col xl={4} lg={12}>\n            <div className=\"comnBlk\">\n              <Image\n                className=\"headerImg\"\n                src={require(\"../../assets/images/farm-icon.svg\").default}\n              />\n              <h3>Farm Planets</h3>\n              <p>Stake LP tokens in Farms and earn up to:</p>\n              <h3>{topFarmApy !== \"\" ? topFarmApy : \"loading..\"} % APR</h3>\n              <Link\n                className=\"captionFooter d-flex justify-content-between align-items-center\"\n                to=\"farmplanets/active\"\n              >\n                <span>Start farming</span> <span className=\"arrowIcon\" />\n              </Link>\n            </div>\n          </Col>\n          <Col xl={4} lg={12}>\n            <div className=\"comnBlk\">\n              <Image\n                className=\"headerImg\"\n                src={require(\"../../assets/images/reflink-icon.svg\").default}\n              />\n              <h3>Decentralized Ref Link </h3>\n              <p>Enjoy Referral Rewards from:</p>\n              <h3>Farms, Pools Swaps</h3>\n              <Link\n                className=\"captionFooter d-flex justify-content-between align-items-center\"\n                to=\"/referral\"\n              >\n                <span>Start inviting friends</span>{\" \"}\n                <span className=\"arrowIcon\" />\n              </Link>\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"announcements\">\n          <Col xl={6} lg={12}>\n            <div className=\"comnBlk  carousel_caption_announce\">\n              <h3 className=\"fw-strong pb-2\">Announcements</h3>\n              <TwitterTimelineEmbed\n                sourceType=\"profile\"\n                screenName=\"saitafinance\"\n                options={{ height: 418 }}\n                theme=\"dark\"\n                noScrollbar={true}\n              />\n            </div>\n          </Col>\n          <Col xl={6} lg={12}>\n            <div className=\"comnBlk mb-4\">\n              <h3>SAITA Stats</h3>\n              <ul className=\"pl-0 saitaStats\">\n                <li>\n                  <label>Market Cap</label>\n                  <span>${addCommas(marketCap.toFixed(2))}</span>\n                </li>\n                <li>\n                  <label>Total Minted</label>\n                  <span>{addCommas(Number(totalMinted).toFixed(2))}</span>\n                </li>\n                <li>\n                  <label>Total Burned</label>\n                  <span>{addCommas(burnedToken)}</span>\n                </li>\n                <li>\n                  <label>Total Locked Rewards</label>\n                  <span>\n                    <strong className=\"value\">\n                      {farmAndStakeLoader ? (\n                        <Loader\n                          type=\"Circles\"\n                          color=\"#FFFFFF\"\n                          height={15}\n                          width={15}\n                          visible={true}\n                          // timeout={5000} //3 secs\n                        />\n                      ) : (\n                        addCommas(\n                          totalLockedRewards ? totalLockedRewards.toFixed(2) : 0\n                        )\n                      )}\n                    </strong>\n                  </span>\n                </li>\n                <li>\n                  <label> Circulating Supply </label>\n                  <span>\n                    {addCommas((totalMinted - burnedToken).toFixed(2))}\n                  </span>\n                </li>\n                <li>\n                  <label>Max Tx Amount </label>\n                  <span>{addCommas(anchorTotalSupply.toFixed(2))}</span>\n                </li>\n                <li>\n                  <label>New Saita/Block</label>\n                  <span>{saitaPerBlock}</span>\n                  {/* <span>{addCommas(anchorPerBlock)}</span> */}\n                </li>\n                <li>\n                  <label>Transfer Tax</label>\n                  <span>{\"3%\"}</span>\n                </li>\n              </ul>\n            </div>\n            <div className=\"comnBlk\">\n              <h3>Total Value Locked (TVL)</h3>\n              <div className=\"totl_value\">\n                <h3>\n                  {\" \"}\n                  {farmAndStakeLoader ? (\n                    <Loader\n                      type=\"Circles\"\n                      color=\"#FFFFFF\"\n                      height={15}\n                      width={15}\n                      visible={true}\n                      // timeout={5000} //3 secs\n                    />\n                  ) : (\n                    addCommas(liquidity ? liquidity.toFixed(2) : 0)\n                  )}\n                </h3>\n                <p className=\"mb-0\">Across all Farms and Pools</p>\n              </div>\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"all_farms\">\n          <Col md={12}>\n            <div className=\"farm_title\">\n              <h3>Top Farm Planets</h3>\n              <Button\n                title=\"All Farms\"\n                onClick={() => {\n                  history.push(`${rootName}/farmplanets/active`);\n                }}\n              />\n            </div>\n          </Col>\n\n          {topFarms\n            .sort(function (a, b) {\n              let keyA = a.newApr,\n                keyB = b.newApr;\n              // Compare the 2 farms\n              if (keyA < keyB) return 1;\n              if (keyA > keyB) return -1;\n              return 0;\n            })\n            .filter((farm, index) => index < 3)\n            .map((topFarm, index) => (\n              <Col xl={4} lg={12}>\n                <FarmCard\n                  title={topFarm.symbol0}\n                  title1={topFarm.symbol1}\n                  icon1={\n                    handleIcon(topFarm?.symbol0)\n                      ? handleIcon(topFarm?.symbol0)\n                      : \"\"\n                  }\n                  icon2={\n                    handleIcon(topFarm?.symbol1)\n                      ? handleIcon(topFarm?.symbol1)\n                      : \"\"\n                  }\n                  liquidity={`$${topFarm.newLiquidity} `}\n                  apy={`${topFarm.newApr != \"NaN\" ? topFarm.newApr : \"0\"} %`}\n                />\n              </Col>\n            ))}\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}