{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers/index\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nexport const history = createBrowserHistory();\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"persist\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware, routerMiddleware(history)]; // redux devtools\n\n  const enhancers = process.env.NODE_ENV === \"development\" ? composeWithDevTools(applyMiddleware(...middlewares)) : applyMiddleware(...middlewares); // create redux store\n\n  const store = createStore(persistedReducer, enhancers);\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n};\n\nexport default configureStore;","map":{"version":3,"names":["createStore","applyMiddleware","thunkMiddleware","composeWithDevTools","rootReducer","routerMiddleware","createBrowserHistory","persistStore","persistReducer","storage","history","persistConfig","key","whitelist","persistedReducer","configureStore","middlewares","enhancers","process","env","NODE_ENV","store","persistor"],"sources":["/data/test/saitaClientGit/src/redux/store.js"],"sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers/index\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nexport const history = createBrowserHistory();\n\nconst persistConfig = {\n  key: \"root\",\n  storage: storage,\n  whitelist: [\"persist\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst configureStore = () => {\n  const middlewares = [thunkMiddleware, routerMiddleware(history)];\n  // redux devtools\n  const enhancers =\n    process.env.NODE_ENV === \"development\"\n      ? composeWithDevTools(applyMiddleware(...middlewares))\n      : applyMiddleware(...middlewares);\n  // create redux store\n  const store = createStore(persistedReducer, enhancers);\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\nexport default configureStore;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAO,MAAMC,OAAO,GAAGJ,oBAAoB,EAApC;AAEP,MAAMK,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBH,OAAO,EAAEA,OAFW;EAGpBI,SAAS,EAAE,CAAC,SAAD;AAHS,CAAtB;AAKA,MAAMC,gBAAgB,GAAGN,cAAc,CAACG,aAAD,EAAgBP,WAAhB,CAAvC;;AAEA,MAAMW,cAAc,GAAG,MAAM;EAC3B,MAAMC,WAAW,GAAG,CAACd,eAAD,EAAkBG,gBAAgB,CAACK,OAAD,CAAlC,CAApB,CAD2B,CAE3B;;EACA,MAAMO,SAAS,GACbC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIjB,mBAAmB,CAACF,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CADvB,GAEIf,eAAe,CAAC,GAAGe,WAAJ,CAHrB,CAH2B,CAO3B;;EACA,MAAMK,KAAK,GAAGrB,WAAW,CAACc,gBAAD,EAAmBG,SAAnB,CAAzB;EACA,IAAIK,SAAS,GAAGf,YAAY,CAACc,KAAD,CAA5B;EACA,OAAO;IAAEA,KAAF;IAASC;EAAT,CAAP;AACD,CAXD;;AAaA,eAAeP,cAAf"},"metadata":{},"sourceType":"module"}