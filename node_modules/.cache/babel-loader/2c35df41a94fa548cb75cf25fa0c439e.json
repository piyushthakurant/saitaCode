{"ast":null,"code":"var _jsxFileName = \"/data/test/saitaClientGit/src/components/GetLPToken/WithDrawLPToken.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Row, Modal, Button, Form, InputGroup, FormControl } from \"react-bootstrap\";\nimport \"./GetLPToken.scss\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { toast } from \"../Toast/Toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WithDrawLPToken = props => {\n  _s();\n\n  var _props$stakeData2, _props$stakeData2$lpT, _props$stakeData3, _props$stakeData4, _props$stakeData4$lpT;\n\n  const [symbolsArr] = useState([\"e\", \"E\", \"+\", \"-\"]);\n  const [saitaWithdrawable, setSaita] = useState(0);\n  useEffect(() => {\n    var _props$stakeData;\n\n    if (props.isSaitaWithdrawabe && props !== null && props !== void 0 && (_props$stakeData = props.stakeData) !== null && _props$stakeData !== void 0 && _props$stakeData.isLocked) init();\n  }, []);\n\n  const init = async () => {\n    const saita = await FarmService.getSaita(props.address);\n    setSaita(saita);\n  };\n\n  const checkIfAmountGreaterThanWithdrawable = (value, isLocked) => {\n    // console.log('oooo', props.farms.isLocked);\n    // if ( (props.isSaitaWithdrawabe && props?.stakeData?.isLocked) && value > saitaWithdrawable) {\n    // toast.error('Amount greater than withdrawable !')\n    // } else {\n    props.depositWithdraw(\"withdraw\", isLocked); // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    centered: true,\n    scrollable: true,\n    className: \"connect_wallet get_tokens\",\n    show: props.show,\n    onHide: props.closeStakeModal,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: [\"Withdraw \", (_props$stakeData2 = props.stakeData) === null || _props$stakeData2 === void 0 ? void 0 : (_props$stakeData2$lpT = _props$stakeData2.lpTokenDetails) === null || _props$stakeData2$lpT === void 0 ? void 0 : _props$stakeData2$lpT.lpTokenName, \" Tokens\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"lp_tokens\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"lptokn_area\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-end\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_props$stakeData3 = props.stakeData) === null || _props$stakeData3 === void 0 ? void 0 : _props$stakeData3.balance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), \" \", (_props$stakeData4 = props.stakeData) === null || _props$stakeData4 === void 0 ? void 0 : (_props$stakeData4$lpT = _props$stakeData4.lpTokenDetails) === null || _props$stakeData4$lpT === void 0 ? void 0 : _props$stakeData4$lpT.lpTokenName, \" available\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                onKeyDown: evt => {\n                  symbolsArr.includes(evt.key) && evt.preventDefault();\n                },\n                type: \"number\",\n                id: \"search\",\n                autoCorrect: \"off\",\n                autoComplete: \"off\",\n                placeholder: \"0.0\",\n                minLength: 1,\n                maxLength: 79,\n                value: props.stakeValue,\n                onChange: e => props.handleStakeValue(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"action\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"token_name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => props.setMaxValue(),\n                  className: \"max_btn cm_btn\",\n                  children: \"Max\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"confirmation\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => props.closeStakeModal(),\n                className: \"cancel_btn\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                disabled: props.stakeConfirmation,\n                onClick: () => checkIfAmountGreaterThanWithdrawable(props.stakeValue, props.stakeData.isLocked),\n                className: \"cm_btn confirm\",\n                children: \"Confirm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WithDrawLPToken, \"pGhkuX6tiiEzumNNG9hInvg0sgs=\");\n\n_c = WithDrawLPToken;\nexport default WithDrawLPToken;\n\nvar _c;\n\n$RefreshReg$(_c, \"WithDrawLPToken\");","map":{"version":3,"names":["React","useEffect","useState","Col","Row","Modal","Button","Form","InputGroup","FormControl","FarmService","toast","WithDrawLPToken","props","symbolsArr","saitaWithdrawable","setSaita","isSaitaWithdrawabe","stakeData","isLocked","init","saita","getSaita","address","checkIfAmountGreaterThanWithdrawable","value","depositWithdraw","show","closeStakeModal","lpTokenDetails","lpTokenName","balance","evt","includes","key","preventDefault","stakeValue","e","handleStakeValue","setMaxValue","stakeConfirmation"],"sources":["/data/test/saitaClientGit/src/components/GetLPToken/WithDrawLPToken.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Col,\n  Row,\n  Modal,\n  Button,\n  Form,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport \"./GetLPToken.scss\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { toast } from \"../Toast/Toast\";\n\nconst WithDrawLPToken = (props) => {\n  const [symbolsArr] = useState([\"e\", \"E\", \"+\", \"-\"]);\n  const [saitaWithdrawable, setSaita] = useState(0);\n  useEffect(() => {\n    if (props.isSaitaWithdrawabe && props?.stakeData?.isLocked) init();\n  }, []);\n\n  const init = async () => {\n    const saita = await FarmService.getSaita(props.address);\n    setSaita(saita);\n  };\n\n  const checkIfAmountGreaterThanWithdrawable = (value, isLocked) => {\n    // console.log('oooo', props.farms.isLocked);\n    // if ( (props.isSaitaWithdrawabe && props?.stakeData?.isLocked) && value > saitaWithdrawable) {\n    // toast.error('Amount greater than withdrawable !')\n    // } else {\n    props.depositWithdraw(\"withdraw\", isLocked);\n    // }\n  };\n\n  return (\n    <Modal\n      centered\n      scrollable={true}\n      className=\"connect_wallet get_tokens\"\n      show={props.show}\n      onHide={props.closeStakeModal}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Withdraw {props.stakeData?.lpTokenDetails?.lpTokenName} Tokens\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row>\n          <Col className=\"lp_tokens\">\n            <Form className=\"lptokn_area\">\n              <p className=\"text-end\">\n                <span>{props.stakeData?.balance}</span>{\" \"}\n                {props.stakeData?.lpTokenDetails?.lpTokenName} available\n              </p>\n              {/* {(props.isSaitaWithdrawabe && props?.stakeData?.isLocked) &&\n                                <p className=\"text-end\"><span>{saitaWithdrawable ? saitaWithdrawable?.toFixed(4) : 0}</span> Withdrawable Saita</p>} */}\n              <InputGroup>\n                <FormControl\n                  onKeyDown={(evt) => {\n                    symbolsArr.includes(evt.key) && evt.preventDefault();\n                  }}\n                  type=\"number\"\n                  id=\"search\"\n                  autoCorrect=\"off\"\n                  autoComplete=\"off\"\n                  placeholder=\"0.0\"\n                  minLength={1}\n                  maxLength={79}\n                  value={props.stakeValue}\n                  onChange={(e) => props.handleStakeValue(e)}\n                />\n                <div className=\"action\">\n                  <span className=\"token_name\"></span>\n                  <Button\n                    onClick={() => props.setMaxValue()}\n                    className=\"max_btn cm_btn\"\n                  >\n                    Max\n                  </Button>\n                </div>\n              </InputGroup>\n              <div className=\"confirmation\">\n                <Button\n                  onClick={() => props.closeStakeModal()}\n                  className=\"cancel_btn\"\n                >\n                  Cancel\n                </Button>\n                {/* <Button disabled={props.stakeConfirmation} onClick={() => props.depositWithdraw('withdraw')} className=\"cm_btn confirm\">Confirm</Button> */}\n                <Button\n                  disabled={props.stakeConfirmation}\n                  onClick={() =>\n                    checkIfAmountGreaterThanWithdrawable(\n                      props.stakeValue,\n                      props.stakeData.isLocked\n                    )\n                  }\n                  className=\"cm_btn confirm\"\n                >\n                  Confirm\n                </Button>\n              </div>\n            </Form>\n          </Col>\n        </Row>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default WithDrawLPToken;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}