{"ast":null,"code":"import { UserService } from \"../../services/UserService\";\nimport { startLoading, stopLoading } from \"./LoadingActions\";\nimport { ContractServices } from \"../../services/ContractServices\";\n/** seting action types */\n\nexport const actionTypes = {\n  REGISTER_USER_REQUEST: \"REGISTER_USER_REQUEST\",\n  REGISTER_USER_SUCCESS: \"REGISTER_USER_SUCCESS\",\n  REGISTER_USER_ERROR: \"REGISTER_USER_ERROR\",\n  REGISTER_FORM_UPDATE: \"REGISTER_FORM_UPDATE\"\n};\n/*\n * Action creators for login\n */\n\nexport function saveRegisterData(data) {\n  return {\n    type: actionTypes.REGISTER_FORM_UPDATE,\n    payload: data\n  };\n}\nexport function userRegister(data) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    dispatch(startLoading());\n    UserService.login(data).then(res => {\n      resolve(res);\n      dispatch(stopLoading());\n    }).catch(ex => {\n      reject(ex);\n      dispatch(stopLoading());\n    });\n  });\n}\nexport function tokenOneApporval(address, value, tokenAddress) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    dispatch(startLoading());\n    ContractServices.approveToken(address, value, tokenAddress).then(res => {\n      dispatch(stopLoading());\n      resolve(res);\n    }).catch(ex => {\n      reject(ex);\n      dispatch(stopLoading());\n    });\n  });\n}\nexport function tokenTwoApporval(data) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    UserService.login(data).then(res => {\n      //   toast.success(res.data.message);\n      resolve(res);\n    }).catch(ex => {\n      reject(ex);\n    });\n  });\n}","map":{"version":3,"names":["UserService","startLoading","stopLoading","ContractServices","actionTypes","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","REGISTER_FORM_UPDATE","saveRegisterData","data","type","payload","userRegister","dispatch","getState","Promise","resolve","reject","login","then","res","catch","ex","tokenOneApporval","address","value","tokenAddress","approveToken","tokenTwoApporval"],"sources":["/data/test/saitaClientGit/src/redux/actions/RegisterActions.js"],"sourcesContent":["import { UserService } from \"../../services/UserService\";\nimport { startLoading, stopLoading } from \"./LoadingActions\";\nimport { ContractServices } from \"../../services/ContractServices\";\n\n/** seting action types */\nexport const actionTypes = {\n  REGISTER_USER_REQUEST: \"REGISTER_USER_REQUEST\",\n  REGISTER_USER_SUCCESS: \"REGISTER_USER_SUCCESS\",\n  REGISTER_USER_ERROR: \"REGISTER_USER_ERROR\",\n  REGISTER_FORM_UPDATE: \"REGISTER_FORM_UPDATE\"\n\n};\n\n/*\n * Action creators for login\n */\n\nexport function saveRegisterData(data) {\n  return {\n    type: actionTypes.REGISTER_FORM_UPDATE,\n    payload: data\n  };\n}\n\n\nexport function userRegister(data) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    dispatch(startLoading());\n    UserService.login(data)\n      .then((res) => {\n        resolve(res);\n        dispatch(stopLoading());\n      })\n      .catch((ex) => {\n        reject(ex);\n        dispatch(stopLoading());\n      });\n\n  });\n}\n\nexport function tokenOneApporval(address, value, tokenAddress) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    dispatch(startLoading());\n    ContractServices.approveToken(address, value, tokenAddress)\n      .then((res) => {\n        dispatch(stopLoading());\n        resolve(res);\n      })\n      .catch((ex) => {\n        reject(ex);\n        dispatch(stopLoading());\n      });\n\n  });\n}\n\nexport function tokenTwoApporval(data) {\n  return (dispatch, getState) => new Promise((resolve, reject) => {\n    UserService.login(data)\n      .then((res) => {\n        //   toast.success(res.data.message);\n\n        resolve(res);\n      })\n      .catch((ex) => {\n        reject(ex);\n      });\n\n  });\n}\n\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,4BAA5B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,kBAA1C;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA;;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,qBAAqB,EAAE,uBADE;EAEzBC,qBAAqB,EAAE,uBAFE;EAGzBC,mBAAmB,EAAE,qBAHI;EAIzBC,oBAAoB,EAAE;AAJG,CAApB;AAQP;AACA;AACA;;AAEA,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;EACrC,OAAO;IACLC,IAAI,EAAEP,WAAW,CAACI,oBADb;IAELI,OAAO,EAAEF;EAFJ,CAAP;AAID;AAGD,OAAO,SAASG,YAAT,CAAsBH,IAAtB,EAA4B;EACjC,OAAO,CAACI,QAAD,EAAWC,QAAX,KAAwB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC9DJ,QAAQ,CAACb,YAAY,EAAb,CAAR;IACAD,WAAW,CAACmB,KAAZ,CAAkBT,IAAlB,EACGU,IADH,CACSC,GAAD,IAAS;MACbJ,OAAO,CAACI,GAAD,CAAP;MACAP,QAAQ,CAACZ,WAAW,EAAZ,CAAR;IACD,CAJH,EAKGoB,KALH,CAKUC,EAAD,IAAQ;MACbL,MAAM,CAACK,EAAD,CAAN;MACAT,QAAQ,CAACZ,WAAW,EAAZ,CAAR;IACD,CARH;EAUD,CAZ8B,CAA/B;AAaD;AAED,OAAO,SAASsB,gBAAT,CAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,YAA1C,EAAwD;EAC7D,OAAO,CAACb,QAAD,EAAWC,QAAX,KAAwB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC9DJ,QAAQ,CAACb,YAAY,EAAb,CAAR;IACAE,gBAAgB,CAACyB,YAAjB,CAA8BH,OAA9B,EAAuCC,KAAvC,EAA8CC,YAA9C,EACGP,IADH,CACSC,GAAD,IAAS;MACbP,QAAQ,CAACZ,WAAW,EAAZ,CAAR;MACAe,OAAO,CAACI,GAAD,CAAP;IACD,CAJH,EAKGC,KALH,CAKUC,EAAD,IAAQ;MACbL,MAAM,CAACK,EAAD,CAAN;MACAT,QAAQ,CAACZ,WAAW,EAAZ,CAAR;IACD,CARH;EAUD,CAZ8B,CAA/B;AAaD;AAED,OAAO,SAAS2B,gBAAT,CAA0BnB,IAA1B,EAAgC;EACrC,OAAO,CAACI,QAAD,EAAWC,QAAX,KAAwB,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IAC9DlB,WAAW,CAACmB,KAAZ,CAAkBT,IAAlB,EACGU,IADH,CACSC,GAAD,IAAS;MACb;MAEAJ,OAAO,CAACI,GAAD,CAAP;IACD,CALH,EAMGC,KANH,CAMUC,EAAD,IAAQ;MACbL,MAAM,CAACK,EAAD,CAAN;IACD,CARH;EAUD,CAX8B,CAA/B;AAYD"},"metadata":{},"sourceType":"module"}