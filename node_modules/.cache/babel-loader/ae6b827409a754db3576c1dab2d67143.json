{"ast":null,"code":"var _jsxFileName = \"/data/test/saitaClientGit/src/components/GalaxyCard/GalaxyCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"../PlanetCard/PlanetCard.scss\"; // import RightArrow from \"../../assets/images/right-arrow.png\";\n\nimport DownArrow from \"../../assets/images/down-arrow.png\";\nimport Schdule from \"../../assets/images/schdule.png\";\nimport ButtonPrimary from \"../Button/Button\";\nimport \"./GalaxyCard.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { MAIN_CONTRACT_LIST, TOKEN_LIST, WETH, ANCHOR_BUSD_LP, BNB_BUSD_LP } from \"../../assets/tokens\";\nimport { BigNumber } from \"bignumber.js\";\nimport { toast } from \"../Toast/Toast\";\nimport { addTransaction, startLoading, stopLoading } from \"../../redux/actions\";\nimport { addCommas } from \"../../constant\";\nimport ConnectWallet from \"../ConnectWallet/ConnectWallet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GalaxyCard = props => {\n  _s();\n\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const [classToggle, setClassToggle] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [show1, setShow1] = useState(false);\n\n  const handleClose1 = () => setShow1(false);\n\n  const handleShow1 = () => setShow1(true);\n\n  const dispatch = useDispatch();\n  const {\n    farm: {\n      poolInfo,\n      userInfo,\n      pid,\n      saitaId,\n      isLocked,\n      dollarVal\n    },\n    index,\n    currentIndex,\n    handleChange,\n    harvestOnClick,\n    stakeHandle,\n    handleRoiModal,\n    status\n  } = props;\n  const [lpTokenDetails, setLpTokenDetails] = useState(null);\n  const [showIncrease, setShowIncrease] = useState(false);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [tokenStaked, setTokenStaked] = useState(0);\n  const [liquidity, setLiquidity] = useState(0);\n  const [showApproveButton, setShowApproveButton] = useState(true);\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const [stakeAmounts, setStakeAmounts] = useState({\n    amount: 0,\n    rewards: 0\n  });\n  const [pantherAddress, setPantherAddress] = useState(\"\");\n  const [apr, setApr] = useState(0);\n  const [roi, setROI] = useState({\n    allocPoint: 0,\n    totalAllcationPoint: 0,\n    anchorPerBlock: 0,\n    anchorPrice: 0,\n    liquidity: 0,\n    lpWorth: 0\n  });\n  const [dollarValue, setAnchorDollarValue] = useState(0.01);\n  const [stakedDollarValue, setStakedDollarValue] = useState(0);\n  useEffect(() => {\n    init();\n    getPantherAddress();\n    getAnchorDollarValue();\n  }, [isUserConnected]);\n\n  const getPantherAddress = async () => {\n    const res = await FarmService.poolInfoo();\n    setPantherAddress(res);\n  };\n\n  const getAnchorDollarValue = async () => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n        if (poolInfo.lpToken.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n          const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        } else if (poolInfo.lpToken.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n          const pair = await ExchangeService.getPairFromPancakeFactory(poolInfo.lpToken, TOKEN_LIST[2].address);\n          const reserves = await ExchangeService.getReserves(pair);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const getDollarAPR = async address => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n        if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n          const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        } else if (address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n          const pair = await ExchangeService.getPairFromPancakeFactory(address, TOKEN_LIST[2].address);\n          const reserves = await ExchangeService.getReserves(pair);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const init = async () => {\n    if (poolInfo) {\n      const {\n        lpToken\n      } = poolInfo;\n\n      if (lpToken) {\n        const totalSupplyTemp = await ContractServices.getTotalSupply(lpToken);\n        setTotalSupply(totalSupplyTemp);\n        const tokenAmount = await ExchangeService.getTokenStaked(lpToken);\n        setTokenStaked(tokenAmount);\n        let price = 0;\n\n        if (lpToken.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n          price = 1;\n        } else {\n          const tokenPairUSDT = await ExchangeService.getPair(lpToken, TOKEN_LIST[2].address);\n          price = await calPrice(tokenPairUSDT);\n        }\n\n        let liq;\n\n        if (poolInfo.lpToken.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n          liq = tokenAmount * 1;\n        } else {\n          const dv = await getAnchorDollarValue();\n          liq = tokenAmount * dv;\n        }\n\n        setLiquidity(liq);\n        const lpTokenDetailsTemp = await FarmService.getPoolTokenDetails(lpToken);\n        const a = await calculateAPR(Number(poolInfo.allocPoint), lpToken, liquidity); // console.log('=====', pid, poolInfo.allocPoint, lpToken, liquidity);\n\n        if (pid == saitaId) {\n          const a = await calculateAPR(Number(poolInfo.allocPoint), lpToken, liquidity);\n          setApr(a * 10.5537);\n        } else {\n          setApr(a);\n        } // setApr(a);\n\n\n        lpTokenDetailsTemp.apr = a;\n        setLpTokenDetails(lpTokenDetailsTemp);\n\n        if (isUserConnected) {\n          const allowance = await ContractServices.allowanceToken(lpToken, MAIN_CONTRACT_LIST.farm.address, isUserConnected);\n          let check = true;\n\n          if (BigNumber(allowance).isGreaterThanOrEqualTo(BigNumber(2 * 255 - 1))) {\n            setShowApproveButton(false);\n            check = false;\n          }\n\n          let balance = await ContractServices.getTokenBalance(lpToken, isUserConnected);\n\n          if (balance > 0.00001) {\n            balance -= 0.00001;\n          }\n\n          setBalance(balance);\n          const amount = Number((Number(userInfo.amount) / 10 ** Number(lpTokenDetailsTemp.decimals)).toFixed(5));\n          const price = await handleStakeDollarValue(amount, lpToken);\n          const rewards = Number(Number((await FarmService.pendingPanther(pid, isUserConnected)) / 10 ** 18).toFixed(5));\n\n          if (!check && amount > 0) {\n            setShowIncrease(true);\n          }\n\n          setStakeAmounts({\n            amount,\n            rewards\n          });\n          setStakedDollarValue(price); //nextHarvest\n\n          const nextHarvestUntil = await FarmService.canHarvest(pid, isUserConnected);\n\n          if (!check && rewards > 0 && Number(userInfo.nextHarvestUntil) > 0 && nextHarvestUntil) {\n            setShowHarvest(true);\n          }\n        }\n      }\n    }\n  };\n\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n\n    if (approvalConfirmation) {\n      return toast.info(\"Token approval is processing\");\n    } // (2*256 - 1);\n\n\n    const value = \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n\n    try {\n      dispatch(startLoading());\n      setApprovalConfirmation(true);\n      const r = await ContractServices.approveToken(isUserConnected, value, MAIN_CONTRACT_LIST.farm.address, poolInfo.lpToken);\n\n      if (r) {\n        let data = {\n          message: `Approve LP Token`,\n          tx: r.transactionHash\n        };\n        dispatch(addTransaction(data));\n        setApprovalConfirmation(false);\n        init();\n      }\n\n      dispatch(stopLoading());\n    } catch (err) {\n      setApprovalConfirmation(false);\n      dispatch(stopLoading());\n      toast.error(\"Approval Transaction Reverted!\");\n    }\n  };\n\n  const beforeStake = async (type, isLocked) => {\n    if (isUserConnected) {\n      let bal = 0;\n\n      if (type === \"deposit\") {\n        bal = balance;\n      }\n\n      if (type === \"withdraw\") {\n        bal = stakeAmounts.amount;\n      }\n\n      stakeHandle({\n        pid,\n        poolInfo,\n        lpTokenDetails,\n        balance: bal,\n        saitaId,\n        isLocked\n      }, type);\n    } else {\n      return toast.error(\"Connect wallet first!\");\n    }\n  };\n\n  const calPrice = async pairAddress => {\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    }\n\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return price = reserve[0] * 10 ** decimalOne / (reserve[1] * 10 ** decimalZero);\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return price = reserve[1] * 10 ** decimalZero / (reserve[0] * 10 ** decimalOne);\n    }\n\n    let priceBNBToUSD = await calPrice(BNB_BUSD_LP);\n\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price = reserve[0] * 10 ** decimalOne / (reserve[1] * 10 ** decimalZero);\n      return price * priceBNBToUSD;\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price = reserve[1] * 10 ** decimalZero / (reserve[0] * 10 ** decimalOne);\n      return price * priceBNBToUSD;\n    }\n  };\n\n  const calculateAPR = async (allocPoint, lpToken, lpWorth) => {\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(await FarmService.totalAllocationPoint());\n    const anchorPerBlock = Number(await FarmService.pantherPerBlock()); //need to calculate usd price.\n\n    const liquidity = await handleLiquidity(lpToken);\n    console.log(\"ANCHOR PRICE:\", anchorPrice);\n    console.log(\"liquidityliquidity:\", liquidity);\n\n    if (liquidity != 0) {\n      const apr = allocPoint / totalAllcationPoint * (anchorPerBlock / 10 ** 18 * 28800 * 365 * 100 * anchorPrice) / liquidity;\n      setROI({\n        allocPoint,\n        totalAllcationPoint,\n        anchorPerBlock,\n        anchorPrice,\n        liquidity,\n        lpWorth\n      });\n      return apr;\n    }\n\n    return 0;\n  };\n\n  const handleLiquidity = async tokenAddress => {\n    if (tokenAddress != \"0x0000000000000000000000000000000000000000\") {\n      const reserve = await ExchangeService.getTokenStaked(tokenAddress);\n      const tokenPairUSDT = await ExchangeService.getPair(tokenAddress, TOKEN_LIST[2].address);\n      const tokenPairBNB = await ExchangeService.getPair(tokenAddress, WETH);\n      let priceA = 0;\n\n      if (tokenAddress.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n        priceA = 1;\n      } else if (tokenAddress.toLowerCase() == WETH.toLowerCase()) {\n        priceA = await getDollarAPR(tokenAddress);\n      }\n\n      if (priceA == 0) {\n        if (tokenPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await getDollarAPR(tokenAddress);\n        } else if (tokenPairBNB != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await getDollarAPR(tokenAddress);\n          priceA = 0;\n        }\n      }\n\n      const liquidity = reserve * priceA;\n      return Number(liquidity).toFixed(2);\n    }\n\n    return 0;\n  };\n\n  const handleIcon = lpTokenName => {\n    if (lpTokenName != undefined) {\n      const tokenObj = TOKEN_LIST.find(d => d.symbol.toLowerCase() === lpTokenName.toLowerCase());\n      return tokenObj === null || tokenObj === void 0 ? void 0 : tokenObj.icon;\n    }\n  };\n\n  const earnedDollarValue = (dollarValue, rewards) => {\n    let fixedAfterDecimal = Number(dollarValue * rewards).toFixed(6);\n    let res = addCommas(fixedAfterDecimal);\n    return res;\n  };\n\n  const handleStakeDollarValue = async (stakedAmount, lpToken) => {\n    const pairAddress = await ExchangeService.getPair(lpToken, TOKEN_LIST[2].address);\n    let price;\n\n    if (lpToken.toLowerCase() === TOKEN_LIST[2].address) {\n      price = 1;\n    } else {\n      price = await calPrice(pairAddress);\n    }\n\n    const dollarPrice = stakedAmount * price;\n    return dollarPrice;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: `planet_bar glaxy_bar`,\n      onClick: () => setClassToggle(!classToggle),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cions\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"coin_imgs uppr\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: handleIcon(lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName) ? handleIcon(lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"coin_title glxy_token\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title_nm\",\n            children: \"Token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName, \" \", isLocked ? \"(Lock)\" : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coin_detail\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prcentx\",\n            children: [poolInfo !== null && poolInfo !== void 0 && poolInfo.displayAllocPoint ? poolInfo === null || poolInfo === void 0 ? void 0 : poolInfo.displayAllocPoint : poolInfo === null || poolInfo === void 0 ? void 0 : poolInfo.allocPoint, \"X\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"QrIcon\",\n            src: Schdule,\n            onClick: () => handleRoiModal(roi, lpTokenDetails, pid)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"apr\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"APR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [addCommas(apr.toFixed(2)), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lqdty\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Liquidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", addCommas(liquidity.toFixed(2))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"erndsaita\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Earned SAITA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: stakeAmounts.rewards !== NaN ? addCommas(stakeAmounts.rewards) : \"0.00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", \" \", stakeAmounts.rewards !== NaN ? earnedDollarValue(dollarVal, stakeAmounts.rewards) : \"0.00\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dtl_btn\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Details\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: DownArrow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classToggle ? \"planet_strip\" : \"d-none\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stakedValue\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex comnDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stkd_title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Total Staked:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Stake:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Deposit Fee:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boldTxt\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: addCommas(tokenStaked.toFixed(2))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [poolInfo.depositFeeBP ? Number(poolInfo.depositFeeBP) / 10000 * 100 : 0, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex comnDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stkd_title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Staked Dollar Value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Earned Value:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Harvest Interval:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boldTxt\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"$\", stakedDollarValue ? addCommas(stakedDollarValue.toFixed(9)) : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [\"$\", \" \", stakeAmounts.rewards !== NaN ? earnedDollarValue(dollarVal, stakeAmounts.rewards) : \"0.00\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: [poolInfo.harvestInterval ? Number((poolInfo.harvestInterval / 3600).toFixed(2)) : 0, \" \", \"Hour(s)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vwdoc_btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"linksTxt\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"View on BscScan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"View Project Site\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"available_funds\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"funds\",\n              children: [isUserConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: showIncrease ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cardFarm_increase\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => beforeStake(\"withdraw\", isLocked),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 563,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => beforeStake(\"deposit\", isLocked),\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 573,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: showApproveButton ? /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"funds_btn\",\n                    onClick: () => handleTokenApproval(),\n                    children: \"Enable Pool\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 579,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"funds_btn\",\n                    onClick: () => beforeStake(\"deposit\"),\n                    children: \"Stake\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"button\",\n                  className: \"unlockWallet_Btn\",\n                  onClick: () => handleShow1(),\n                  children: \"Unlock Wallet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false), /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                className: \"unlockWallet_Btn\",\n                onClick: () => {\n                  setShowHarvest(false);\n                  harvestOnClick(pid, lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName);\n                },\n                title: \"Harvest\",\n                disabled: !showHarvest\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnectWallet, {\n      show: show1,\n      handleShow: handleShow1,\n      handleClose: handleClose1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GalaxyCard, \"dtAmC6+l7xJWDhawMM0dJTJ0Qkg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = GalaxyCard;\nexport default GalaxyCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"GalaxyCard\");","map":{"version":3,"names":["React","useEffect","useState","Button","DownArrow","Schdule","ButtonPrimary","useDispatch","useSelector","FarmService","ExchangeService","ContractServices","MAIN_CONTRACT_LIST","TOKEN_LIST","WETH","ANCHOR_BUSD_LP","BNB_BUSD_LP","BigNumber","toast","addTransaction","startLoading","stopLoading","addCommas","ConnectWallet","GalaxyCard","props","isUserConnected","state","persist","classToggle","setClassToggle","show","setShow","handleClose","handleShow","show1","setShow1","handleClose1","handleShow1","dispatch","farm","poolInfo","userInfo","pid","saitaId","isLocked","dollarVal","index","currentIndex","handleChange","harvestOnClick","stakeHandle","handleRoiModal","status","lpTokenDetails","setLpTokenDetails","showIncrease","setShowIncrease","totalSupply","setTotalSupply","tokenStaked","setTokenStaked","liquidity","setLiquidity","showApproveButton","setShowApproveButton","approvalConfirmation","setApprovalConfirmation","showHarvest","setShowHarvest","balance","setBalance","stakeAmounts","setStakeAmounts","amount","rewards","pantherAddress","setPantherAddress","apr","setApr","roi","setROI","allocPoint","totalAllcationPoint","anchorPerBlock","anchorPrice","lpWorth","dollarValue","setAnchorDollarValue","stakedDollarValue","setStakedDollarValue","init","getPantherAddress","getAnchorDollarValue","res","poolInfoo","lpToken","undefined","toLowerCase","address","reserves","getReserves","val","toFixed","pair","getPairFromPancakeFactory","error","console","log","getDollarAPR","totalSupplyTemp","getTotalSupply","tokenAmount","getTokenStaked","price","tokenPairUSDT","getPair","calPrice","liq","dv","lpTokenDetailsTemp","getPoolTokenDetails","a","calculateAPR","Number","allowance","allowanceToken","check","isGreaterThanOrEqualTo","getTokenBalance","decimals","handleStakeDollarValue","pendingPanther","nextHarvestUntil","canHarvest","handleTokenApproval","acc","getDefaultAccount","info","value","r","approveToken","data","message","tx","transactionHash","err","beforeStake","type","bal","pairAddress","tokenZero","getTokenZero","tokenOne","getTokenOne","reserve","decimalZero","getDecimals","decimalOne","priceBNBToUSD","totalAllocationPoint","pantherPerBlock","handleLiquidity","tokenAddress","tokenPairBNB","priceA","handleIcon","lpTokenName","tokenObj","find","d","symbol","icon","earnedDollarValue","fixedAfterDecimal","stakedAmount","dollarPrice","displayAllocPoint","NaN","depositFeeBP","harvestInterval"],"sources":["/data/test/saitaClientGit/src/components/GalaxyCard/GalaxyCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"../PlanetCard/PlanetCard.scss\";\n// import RightArrow from \"../../assets/images/right-arrow.png\";\nimport DownArrow from \"../../assets/images/down-arrow.png\";\nimport Schdule from \"../../assets/images/schdule.png\";\nimport ButtonPrimary from \"../Button/Button\";\nimport \"./GalaxyCard.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport {\n  MAIN_CONTRACT_LIST,\n  TOKEN_LIST,\n  WETH,\n  ANCHOR_BUSD_LP,\n  BNB_BUSD_LP,\n} from \"../../assets/tokens\";\nimport { BigNumber } from \"bignumber.js\";\nimport { toast } from \"../Toast/Toast\";\nimport { addTransaction, startLoading, stopLoading } from \"../../redux/actions\";\nimport { addCommas } from \"../../constant\";\nimport ConnectWallet from \"../ConnectWallet/ConnectWallet\";\n\nconst GalaxyCard = (props) => {\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n  const [classToggle, setClassToggle] = useState(false);\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [show1, setShow1] = useState(false);\n  const handleClose1 = () => setShow1(false);\n  const handleShow1 = () => setShow1(true);\n\n  const dispatch = useDispatch();\n  const {\n    farm: { poolInfo, userInfo, pid, saitaId, isLocked, dollarVal },\n    index,\n    currentIndex,\n    handleChange,\n    harvestOnClick,\n    stakeHandle,\n    handleRoiModal,\n    status,\n  } = props;\n\n  const [lpTokenDetails, setLpTokenDetails] = useState(null);\n  const [showIncrease, setShowIncrease] = useState(false);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [tokenStaked, setTokenStaked] = useState(0);\n  const [liquidity, setLiquidity] = useState(0);\n  const [showApproveButton, setShowApproveButton] = useState(true);\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const [stakeAmounts, setStakeAmounts] = useState({ amount: 0, rewards: 0 });\n  const [pantherAddress, setPantherAddress] = useState(\"\");\n  const [apr, setApr] = useState(0);\n  const [roi, setROI] = useState({\n    allocPoint: 0,\n    totalAllcationPoint: 0,\n    anchorPerBlock: 0,\n    anchorPrice: 0,\n    liquidity: 0,\n    lpWorth: 0,\n  });\n  const [dollarValue, setAnchorDollarValue] = useState(0.01);\n  const [stakedDollarValue, setStakedDollarValue] = useState(0);\n\n  useEffect(() => {\n    init();\n    getPantherAddress();\n    getAnchorDollarValue();\n  }, [isUserConnected]);\n  const getPantherAddress = async () => {\n    const res = await FarmService.poolInfoo();\n    setPantherAddress(res);\n  };\n  const getAnchorDollarValue = async () => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n        if (\n          poolInfo.lpToken.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()\n        ) {\n          const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        } else if (\n          poolInfo.lpToken.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()\n        ) {\n          const pair = await ExchangeService.getPairFromPancakeFactory(\n            poolInfo.lpToken,\n            TOKEN_LIST[2].address\n          );\n          const reserves = await ExchangeService.getReserves(pair);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const getDollarAPR = async (address) => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n        if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n          const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        } else if (\n          address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()\n        ) {\n          const pair = await ExchangeService.getPairFromPancakeFactory(\n            address,\n            TOKEN_LIST[2].address\n          );\n          const reserves = await ExchangeService.getReserves(pair);\n          let val = reserves[1] / reserves[0];\n          val = val || 0;\n          setAnchorDollarValue(val.toFixed(3));\n          return val.toFixed(3);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const init = async () => {\n    if (poolInfo) {\n      const { lpToken } = poolInfo;\n      if (lpToken) {\n        const totalSupplyTemp = await ContractServices.getTotalSupply(lpToken);\n        setTotalSupply(totalSupplyTemp);\n        const tokenAmount = await ExchangeService.getTokenStaked(lpToken);\n        setTokenStaked(tokenAmount);\n        let price = 0;\n        if (lpToken.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n          price = 1;\n        } else {\n          const tokenPairUSDT = await ExchangeService.getPair(\n            lpToken,\n            TOKEN_LIST[2].address\n          );\n          price = await calPrice(tokenPairUSDT);\n        }\n        let liq;\n        if (\n          poolInfo.lpToken.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()\n        ) {\n          liq = tokenAmount * 1;\n        } else {\n          const dv = await getAnchorDollarValue();\n          liq = tokenAmount * dv;\n        }\n        setLiquidity(liq);\n        const lpTokenDetailsTemp = await FarmService.getPoolTokenDetails(\n          lpToken\n        );\n        const a = await calculateAPR(\n          Number(poolInfo.allocPoint),\n          lpToken,\n          liquidity\n        );\n        // console.log('=====', pid, poolInfo.allocPoint, lpToken, liquidity);\n\n        if (pid == saitaId) {\n          const a = await calculateAPR(\n            Number(poolInfo.allocPoint),\n            lpToken,\n            liquidity\n          );\n          setApr(a * 10.5537);\n        } else {\n          setApr(a);\n        }\n\n        // setApr(a);\n        lpTokenDetailsTemp.apr = a;\n        setLpTokenDetails(lpTokenDetailsTemp);\n        if (isUserConnected) {\n          const allowance = await ContractServices.allowanceToken(\n            lpToken,\n            MAIN_CONTRACT_LIST.farm.address,\n            isUserConnected\n          );\n          let check = true;\n          if (\n            BigNumber(allowance).isGreaterThanOrEqualTo(BigNumber(2 * 255 - 1))\n          ) {\n            setShowApproveButton(false);\n            check = false;\n          }\n\n          let balance = await ContractServices.getTokenBalance(\n            lpToken,\n            isUserConnected\n          );\n          if (balance > 0.00001) {\n            balance -= 0.00001;\n          }\n          setBalance(balance);\n\n          const amount = Number(\n            (\n              Number(userInfo.amount) /\n              10 ** Number(lpTokenDetailsTemp.decimals)\n            ).toFixed(5)\n          );\n          const price = await handleStakeDollarValue(amount, lpToken);\n          const rewards = Number(\n            Number(\n              (await FarmService.pendingPanther(pid, isUserConnected)) /\n                10 ** 18\n            ).toFixed(5)\n          );\n          if (!check && amount > 0) {\n            setShowIncrease(true);\n          }\n          setStakeAmounts({ amount, rewards });\n\n          setStakedDollarValue(price);\n\n          //nextHarvest\n          const nextHarvestUntil = await FarmService.canHarvest(\n            pid,\n            isUserConnected\n          );\n          if (\n            !check &&\n            rewards > 0 &&\n            Number(userInfo.nextHarvestUntil) > 0 &&\n            nextHarvestUntil\n          ) {\n            setShowHarvest(true);\n          }\n        }\n      }\n    }\n  };\n\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n    if (approvalConfirmation) {\n      return toast.info(\"Token approval is processing\");\n    }\n    // (2*256 - 1);\n    const value =\n      \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n\n    try {\n      dispatch(startLoading());\n      setApprovalConfirmation(true);\n      const r = await ContractServices.approveToken(\n        isUserConnected,\n        value,\n        MAIN_CONTRACT_LIST.farm.address,\n        poolInfo.lpToken\n      );\n      if (r) {\n        let data = {\n          message: `Approve LP Token`,\n          tx: r.transactionHash,\n        };\n        dispatch(addTransaction(data));\n        setApprovalConfirmation(false);\n        init();\n      }\n      dispatch(stopLoading());\n    } catch (err) {\n      setApprovalConfirmation(false);\n      dispatch(stopLoading());\n      toast.error(\"Approval Transaction Reverted!\");\n    }\n  };\n\n  const beforeStake = async (type, isLocked) => {\n    if (isUserConnected) {\n      let bal = 0;\n      if (type === \"deposit\") {\n        bal = balance;\n      }\n      if (type === \"withdraw\") {\n        bal = stakeAmounts.amount;\n      }\n      stakeHandle(\n        { pid, poolInfo, lpTokenDetails, balance: bal, saitaId, isLocked },\n        type\n      );\n    } else {\n      return toast.error(\"Connect wallet first!\");\n    }\n  };\n\n  const calPrice = async (pairAddress) => {\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    }\n\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return (price =\n        (reserve[0] * 10 ** decimalOne) / (reserve[1] * 10 ** decimalZero));\n    }\n\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n      return (price =\n        (reserve[1] * 10 ** decimalZero) / (reserve[0] * 10 ** decimalOne));\n    }\n\n    let priceBNBToUSD = await calPrice(BNB_BUSD_LP);\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price =\n        (reserve[0] * 10 ** decimalOne) / (reserve[1] * 10 ** decimalZero);\n      return price * priceBNBToUSD;\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price =\n        (reserve[1] * 10 ** decimalZero) / (reserve[0] * 10 ** decimalOne);\n      return price * priceBNBToUSD;\n    }\n  };\n\n  const calculateAPR = async (allocPoint, lpToken, lpWorth) => {\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(\n      await FarmService.totalAllocationPoint()\n    );\n    const anchorPerBlock = Number(await FarmService.pantherPerBlock());\n    //need to calculate usd price.\n    const liquidity = await handleLiquidity(lpToken);\n    console.log(\"ANCHOR PRICE:\", anchorPrice);\n    console.log(\"liquidityliquidity:\", liquidity);\n    if (liquidity != 0) {\n      const apr =\n        ((allocPoint / totalAllcationPoint) *\n          ((anchorPerBlock / 10 ** 18) * 28800 * 365 * 100 * anchorPrice)) /\n        liquidity;\n      setROI({\n        allocPoint,\n        totalAllcationPoint,\n        anchorPerBlock,\n        anchorPrice,\n        liquidity,\n        lpWorth,\n      });\n\n      return apr;\n    }\n\n    return 0;\n  };\n  const handleLiquidity = async (tokenAddress) => {\n    if (tokenAddress != \"0x0000000000000000000000000000000000000000\") {\n      const reserve = await ExchangeService.getTokenStaked(tokenAddress);\n      const tokenPairUSDT = await ExchangeService.getPair(\n        tokenAddress,\n        TOKEN_LIST[2].address\n      );\n      const tokenPairBNB = await ExchangeService.getPair(tokenAddress, WETH);\n\n      let priceA = 0;\n\n      if (tokenAddress.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n        priceA = 1;\n      } else if (tokenAddress.toLowerCase() == WETH.toLowerCase()) {\n        priceA = await getDollarAPR(tokenAddress);\n      }\n\n      if (priceA == 0) {\n        if (tokenPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n          priceA = await getDollarAPR(tokenAddress);\n        } else if (\n          tokenPairBNB != \"0x0000000000000000000000000000000000000000\"\n        ) {\n          priceA = await getDollarAPR(tokenAddress);\n          priceA = 0;\n        }\n      }\n\n      const liquidity = reserve * priceA;\n\n      return Number(liquidity).toFixed(2);\n    }\n    return 0;\n  };\n  const handleIcon = (lpTokenName) => {\n    if (lpTokenName != undefined) {\n      const tokenObj = TOKEN_LIST.find(\n        (d) => d.symbol.toLowerCase() === lpTokenName.toLowerCase()\n      );\n      return tokenObj?.icon;\n    }\n  };\n  const earnedDollarValue = (dollarValue, rewards) => {\n    let fixedAfterDecimal = Number(dollarValue * rewards).toFixed(6);\n    let res = addCommas(fixedAfterDecimal);\n    return res;\n  };\n\n  const handleStakeDollarValue = async (stakedAmount, lpToken) => {\n    const pairAddress = await ExchangeService.getPair(\n      lpToken,\n      TOKEN_LIST[2].address\n    );\n    let price;\n    if (lpToken.toLowerCase() === TOKEN_LIST[2].address) {\n      price = 1;\n    } else {\n      price = await calPrice(pairAddress);\n    }\n    const dollarPrice = stakedAmount * price;\n    return dollarPrice;\n  };\n\n  return (\n    <>\n      <Button\n        className={`planet_bar glaxy_bar`}\n        onClick={() => setClassToggle(!classToggle)}\n      >\n        <div className=\"cions\">\n          <span className=\"coin_imgs uppr\">\n            <img\n              src={\n                handleIcon(lpTokenDetails?.lpTokenName)\n                  ? handleIcon(lpTokenDetails?.lpTokenName)\n                  : null\n              }\n            />\n          </span>\n          <span className=\"coin_title glxy_token\">\n            <span className=\"title_nm\">Token</span>\n            {lpTokenDetails?.lpTokenName} {isLocked ? \"(Lock)\" : \"\"}\n          </span>\n        </div>\n\n        <div className=\"coin_detail\">\n          <div className=\"d-flex align-items-center\">\n            <div className=\"prcentx\">\n              {poolInfo?.displayAllocPoint\n                ? poolInfo?.displayAllocPoint\n                : poolInfo?.allocPoint}\n              X\n            </div>\n            <img\n              className=\"QrIcon\"\n              src={Schdule}\n              onClick={() => handleRoiModal(roi, lpTokenDetails, pid)}\n            />\n            <div className=\"apr\">\n              <span>APR</span>\n              <p>{addCommas(apr.toFixed(2))}%</p>\n            </div>\n          </div>\n          <div className=\"lqdty\">\n            <span>Liquidity</span>\n            <p>${addCommas(liquidity.toFixed(2))}</p>\n          </div>\n          <div className=\"erndsaita\">\n            <span>Earned SAITA</span>\n            <p>\n              {stakeAmounts.rewards !== NaN\n                ? addCommas(stakeAmounts.rewards)\n                : \"0.00\"}\n            </p>\n            <p>\n              ${\" \"}\n              {stakeAmounts.rewards !== NaN\n                ? earnedDollarValue(dollarVal, stakeAmounts.rewards)\n                : \"0.00\"}\n            </p>\n          </div>\n        </div>\n        <div className=\"dtl_btn\">\n          <p>\n            Details{\" \"}\n            <span>\n              <img src={DownArrow} />\n            </span>\n          </p>\n        </div>\n      </Button>\n      <div className={classToggle ? \"planet_strip\" : \"d-none\"}>\n        <div className=\"stakedValue\">\n          <div className=\"d-flex comnDiv\">\n            <div className=\"stkd_title\">\n              <h6>Total Staked:</h6>\n              <h6>Stake:</h6>\n              <h6>Deposit Fee:</h6>\n            </div>\n            <div className=\"boldTxt\">\n              <h6>{addCommas(tokenStaked.toFixed(2))}</h6>\n              <h6>{lpTokenDetails?.lpTokenName}</h6>\n              <h6>\n                {poolInfo.depositFeeBP\n                  ? (Number(poolInfo.depositFeeBP) / 10000) * 100\n                  : 0}\n                %\n              </h6>\n            </div>\n          </div>\n          <div className=\"d-flex comnDiv\">\n            <div className=\"stkd_title\">\n              <h6>Staked Dollar Value:</h6>\n              <h6>Earned Value:</h6>\n              <h6>Harvest Interval:</h6>\n            </div>\n            <div className=\"boldTxt\">\n              <h6>\n                $\n                {stakedDollarValue\n                  ? addCommas(stakedDollarValue.toFixed(9))\n                  : 0}\n              </h6>\n              <h6>\n                ${\" \"}\n                {stakeAmounts.rewards !== NaN\n                  ? earnedDollarValue(dollarVal, stakeAmounts.rewards)\n                  : \"0.00\"}\n              </h6>\n              <h6>\n                {poolInfo.harvestInterval\n                  ? Number((poolInfo.harvestInterval / 3600).toFixed(2))\n                  : 0}{\" \"}\n                Hour(s)\n              </h6>\n            </div>\n          </div>\n          <div className=\"vwdoc_btn\">\n            <div className=\"linksTxt\">\n              <a href=\"#\">View on BscScan</a>\n              <a href=\"#\">View Project Site</a>\n            </div>\n            <div className=\"available_funds\">\n              <div className=\"funds\">\n                {isUserConnected ? (\n                  <>\n                    {showIncrease ? (\n                      <div className=\"cardFarm_increase\">\n                        <button\n                          type=\"button\"\n                          onClick={() => beforeStake(\"withdraw\", isLocked)}\n                        >\n                          <span>-</span>\n                        </button>\n                        <button\n                          type=\"button\"\n                          onClick={() => beforeStake(\"deposit\", isLocked)}\n                        >\n                          <span>+</span>\n                        </button>\n                      </div>\n                    ) : (\n                      <>\n                        {showApproveButton ? (\n                          <Button\n                            className=\"funds_btn\"\n                            onClick={() => handleTokenApproval()}\n                          >\n                            Enable Pool\n                          </Button>\n                        ) : (\n                          <Button\n                            className=\"funds_btn\"\n                            onClick={() => beforeStake(\"deposit\")}\n                          >\n                            Stake\n                          </Button>\n                        )}\n                      </>\n                    )}\n                  </>\n                ) : (\n                  <>\n                    <Button\n                      type=\"button\"\n                      className=\"unlockWallet_Btn\"\n                      onClick={() => handleShow1()}\n                    >\n                      Unlock Wallet\n                    </Button>\n                  </>\n                )}\n                <ButtonPrimary\n                  className=\"unlockWallet_Btn\"\n                  onClick={() => {\n                    setShowHarvest(false);\n                    harvestOnClick(pid, lpTokenDetails?.lpTokenName);\n                  }}\n                  title=\"Harvest\"\n                  disabled={!showHarvest}\n                />\n              </div>\n            </div>\n\n            {/* <ButtonPrimary className=\"unlockWallet_Btn\" onClick={()=> handleShow(true)} title=\"Unlock Wallet\" /> */}\n          </div>\n        </div>\n      </div>\n      <ConnectWallet\n        show={show1}\n        handleShow={handleShow1}\n        handleClose={handleClose1}\n      />\n    </>\n  );\n};\n\nexport default GalaxyCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}