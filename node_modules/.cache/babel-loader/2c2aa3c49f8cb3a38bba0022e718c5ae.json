{"ast":null,"code":"import { UserService } from \"../../services/UserService\";\nimport { actionTypes } from \"../actions\";\nconst initialState = {\n  email: \"\",\n  captcha: \"\"\n};\n\nconst register = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.REGISTER_FORM_UPDATE:\n      return { ...state,\n        [action.payload.prop]: action.payload.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default register;","map":{"version":3,"names":["UserService","actionTypes","initialState","email","captcha","register","state","action","type","REGISTER_FORM_UPDATE","payload","prop","value"],"sources":["/data/test/saitaClientGit/src/redux/reducers/register.js"],"sourcesContent":["import { UserService } from \"../../services/UserService\";\nimport { actionTypes } from \"../actions\";\n\nconst initialState = {\n  email: \"\",\n  captcha: \"\"\n};\n\nconst register = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.REGISTER_FORM_UPDATE:\n      return {\n\n        ...state, [action.payload.prop]: action.payload.value\n\n      };\n\n\n\n    default:\n      return state;\n  }\n}\nexport default register;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,4BAA5B;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,QAAQ,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACjD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,WAAW,CAACQ,oBAAjB;MACE,OAAO,EAEL,GAAGH,KAFE;QAEK,CAACC,MAAM,CAACG,OAAP,CAAeC,IAAhB,GAAuBJ,MAAM,CAACG,OAAP,CAAeE;MAF3C,CAAP;;IAQF;MACE,OAAON,KAAP;EAXJ;AAaD,CAdD;;AAeA,eAAeD,QAAf"},"metadata":{},"sourceType":"module"}