{"ast":null,"code":"import { actionTypes } from \"../actions\";\nconst initialState = {\n  loading: false,\n  poolLength: 0\n};\n\nconst farmReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.SAVE_POOL_LENGTH:\n      return { ...state,\n        loading: false,\n        poolLength: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default farmReducer;","map":{"version":3,"names":["actionTypes","initialState","loading","poolLength","farmReducer","state","action","type","SAVE_POOL_LENGTH","payload"],"sources":["/data/test/saitaClientGit/src/redux/reducers/farm.js"],"sourcesContent":["import { actionTypes } from \"../actions\";\n\nconst initialState = {\n  loading: false,\n  poolLength:0\n};\n\nconst farmReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SAVE_POOL_LENGTH:\n      return {\n          ...state,\n          loading: false,\n          poolLength: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default farmReducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KADU;EAEnBC,UAAU,EAAC;AAFQ,CAArB;;AAKA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,WAAW,CAACQ,gBAAjB;MACE,OAAO,EACH,GAAGH,KADA;QAEHH,OAAO,EAAE,KAFN;QAGHC,UAAU,EAAEG,MAAM,CAACG;MAHhB,CAAP;;IAMF;MACE,OAAOJ,KAAP;EATJ;AAWD,CAZD;;AAcA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}