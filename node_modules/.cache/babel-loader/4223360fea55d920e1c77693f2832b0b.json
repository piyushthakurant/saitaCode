{"ast":null,"code":"var _jsxFileName = \"/data/test/saitaClientGit/src/components/PlanetCard/PlanetCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport \"./PlanetCard.scss\";\nimport RightArrow from \"../../assets/images/right-arrow.png\";\nimport DownArrow from \"../../assets/images/down-arrow.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport { MAIN_CONTRACT_LIST, WETH, ANCHOR_BUSD_LP, TOKEN_LIST, BNB_BUSD_LP } from \"../../assets/tokens\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { BigNumber } from \"bignumber.js\";\nimport { toast } from \"../Toast/Toast\";\nimport { addTransaction, startLoading, stopLoading } from \"../../redux/actions\";\nimport { addCommas } from \"../../constant\";\nimport defaultImg from \"../../assets/images/token_icons/default.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PlanetCard = props => {\n  _s();\n\n  const [classToggle, setClassToggle] = useState(false);\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector(state => state.persist.isUserConnected);\n  const {\n    farm: {\n      poolInfo,\n      userInfo,\n      pid\n    },\n    index,\n    currentIndex,\n    handleChange,\n    harvestOnClick,\n    stakeHandle,\n    handleRoiModal,\n    status\n  } = props; // console.log(\"PoolInfo:\", poolInfo);\n\n  const [lpTokenDetails, setLpTokenDetails] = useState(null);\n  const [showIncrease, setShowIncrease] = useState(false);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [liquidity, setLiquidity] = useState(0);\n  const [worth, setWorth] = useState(0);\n  const [showApproveButton, setShowApproveButton] = useState(true);\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const [stakeAmounts, setStakeAmounts] = useState({\n    amount: 0,\n    rewards: 0\n  });\n  const [apr, setApr] = useState(0);\n  const [roi, setROI] = useState({\n    allocPoint: 0,\n    totalAllcationPoint: 0,\n    anchorPerBlock: 0,\n    anchorPrice: 0,\n    liquidity: 0,\n    lpWorth: 0\n  });\n  const [dollarValue, setAnchorDollarValue] = useState(0.01);\n\n  const getSaitaDollarValue = async () => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n        let reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP); // const token0 = await ExchangeService.getTokenZero(poolInfo.lpToken);\n        // const token1 = await ExchangeService.getTokenOne(poolInfo.lpToken);\n        // if ((token0.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) || (token1.toLowerCase() === TOKEN_LIST[1].address.toLowerCase())) {\n        //   reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        // } else {\n        //   //const pair = await ExchangeService.getPairFromPancakeFactory(poolInfo.lpToken);\n        //   reserves = await ExchangeService.getReserves(poolInfo.lpToken);\n        // }\n\n        let val = reserves[1] / reserves[0];\n        val = val || 0;\n        setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const getDollarAPR = async address => {\n    try {\n      if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n        const tokenZero = await ExchangeService.getTokenZero(ANCHOR_BUSD_LP);\n        const tokenOne = await ExchangeService.getTokenOne(ANCHOR_BUSD_LP);\n        const decimalZero = await ContractServices.getDecimals(tokenZero);\n        const decimalOne = await ContractServices.getDecimals(tokenOne);\n        const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        let val;\n\n        if (tokenZero.toLowerCase() == TOKEN_LIST[1].address.toLowerCase()) {\n          val = reserves[1] / 10 ** decimalOne / (reserves[0] / 10 ** decimalZero);\n        } else {\n          val = reserves[0] / 10 ** decimalZero / (reserves[1] / 10 ** decimalOne);\n        }\n\n        val = val || 0;\n        setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      } else if (address.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()) {\n        return 1;\n      } else if (address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n        const pair = await ExchangeService.getPair(address, TOKEN_LIST[2].address);\n        const tokenZero = await ExchangeService.getTokenZero(pair);\n        const tokenOne = await ExchangeService.getTokenOne(pair);\n        const decimalZero = await ContractServices.getDecimals(tokenZero);\n        const decimalOne = await ContractServices.getDecimals(tokenOne);\n        const reserves = await ExchangeService.getReserves(pair);\n        let val;\n\n        if (tokenZero.toLowerCase() == TOKEN_LIST[0].address.toLowerCase()) {\n          console.log(\"HERE:\", reserves[1] / 10 ** decimalOne, reserves[0] / 10 ** decimalZero);\n          val = reserves[1] / 10 ** decimalOne / (reserves[0] / 10 ** decimalZero);\n        } else {\n          console.log(\"HERE: else \", reserves[1] / 10 ** decimalOne, reserves[0] / 10 ** decimalZero);\n          const resA = reserves[1] / 10 ** decimalZero;\n          const resB = reserves[0] / 10 ** decimalOne;\n          val = resA / resB;\n        }\n\n        val = val || 0;\n        console.log(\"VAlue:\", val);\n        setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const init = async () => {\n    if (poolInfo) {\n      const {\n        lpToken\n      } = poolInfo;\n\n      if (lpToken) {\n        const totalSupplyTemp = await ContractServices.getTotalSupply(lpToken);\n        setTotalSupply(totalSupplyTemp);\n        const liquidity = await handleLiquidity(lpToken);\n        setLiquidity(liquidity);\n        const tokenStaked = await ExchangeService.getTokenStaked(lpToken); // const tokenStakedbypiyush = await\n\n        const lpWorth = liquidity * balance;\n        setWorth(lpWorth);\n        const lpTokenDetailsTemp = await FarmService.getLpTokenDetails(lpToken);\n        console.log(\"balance\", balance);\n        setLpTokenDetails(lpTokenDetailsTemp);\n        console.log(\"liquidity\", liquidity, \"tokenStaked\", tokenStaked, \"lpToken\", lpToken);\n        const a = await calculateAPR(Number(poolInfo.allocPoint), lpToken, liquidity);\n        lpTokenDetailsTemp.apr = a;\n        setApr(a);\n\n        if (isUserConnected) {\n          const allowance = await ContractServices.allowanceToken(lpToken, MAIN_CONTRACT_LIST.farm.address, isUserConnected);\n          let check = true;\n\n          if (BigNumber(allowance).isGreaterThanOrEqualTo(BigNumber(2 * 255 - 1))) {\n            setShowApproveButton(false);\n            check = false;\n          }\n\n          let balance = await ContractServices.getTokenBalance(poolInfo.lpToken, isUserConnected);\n\n          if (balance > 0.00001) {\n            balance -= 0.00001;\n          }\n\n          setBalance(balance);\n          const amount = userInfo.amount / 10 ** lpTokenDetailsTemp.decimals; // const amount = Number(\n          //   (\n          //     Number(userInfo.amount) /\n          //     10 ** Number(lpTokenDetailsTemp.decimals)\n          //   )\n          // ).toFixed(18)\n\n          const rewards = Number(Number((await FarmService.pendingSaitama(pid, isUserConnected)) / 10 ** 9).toFixed(9));\n\n          if (!check && amount > 0) {\n            setShowIncrease(true);\n          }\n\n          setStakeAmounts({\n            amount,\n            rewards\n          }); //nextHarvest\n\n          const nextHarvestUntil = await FarmService.canHarvest(pid, isUserConnected);\n\n          if (!check && rewards > 0 && Number(userInfo.nextHarvestUntil) > 0 && nextHarvestUntil) {\n            setShowHarvest(true);\n          }\n        }\n      }\n    }\n  }; //call web3 approval function\n\n\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n\n    if (approvalConfirmation) {\n      return toast.info(\"Token approval is processing\");\n    } // (2*256 - 1);\n\n\n    const value = \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n\n    try {\n      dispatch(startLoading());\n      setApprovalConfirmation(true);\n      const r = await ContractServices.approveToken(isUserConnected, value, MAIN_CONTRACT_LIST.farm.address, poolInfo.lpToken);\n\n      if (r) {\n        let data = {\n          message: `Approve LP Token`,\n          tx: r.transactionHash\n        };\n        dispatch(addTransaction(data));\n        setApprovalConfirmation(false);\n        init();\n      }\n\n      dispatch(stopLoading());\n    } catch (err) {\n      setApprovalConfirmation(false);\n      dispatch(stopLoading());\n      toast.error(\"Approval Transaction Reverted!\");\n    }\n  };\n\n  const beforeStake = async type => {\n    if (isUserConnected) {\n      let bal = 0;\n\n      if (type === \"deposit\") {\n        bal = balance;\n      }\n\n      if (type === \"withdraw\") {\n        bal = stakeAmounts.amount;\n      }\n\n      stakeHandle({\n        pid,\n        poolInfo,\n        lpTokenDetails,\n        balance: bal\n      }, type);\n    } else {\n      return toast.error(\"Connect wallet first!\");\n    }\n  };\n\n  const calPrice = async pairAddress => {\n    var _TOKEN_LIST$, _TOKEN_LIST$2;\n\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    }\n\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === ((_TOKEN_LIST$ = TOKEN_LIST[2]) === null || _TOKEN_LIST$ === void 0 ? void 0 : _TOKEN_LIST$.address.toLowerCase())) {\n      return price = reserve[0] * 10 ** decimalOne / (reserve[1] * 10 ** decimalZero);\n    } // console.log(\n    //   tokenZero,\n    //   tokenOne,\n    //   reserve,\n    //   decimalZero,\n    //   decimalOne,\n    //   \"token k baare m jaankari\"\n    // );\n\n\n    if (tokenOne.toLowerCase() === ((_TOKEN_LIST$2 = TOKEN_LIST[2]) === null || _TOKEN_LIST$2 === void 0 ? void 0 : _TOKEN_LIST$2.address.toLowerCase())) {\n      return price = reserve[1] * 10 ** decimalZero / (reserve[0] * 10 ** decimalOne);\n    } // let priceBNBToUSD = await calPrice(BNB_BUSD_LP); //replace with BNB-USD pair\n\n\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price = reserve[0] * 10 ** decimalOne / (reserve[1] * 10 ** decimalZero);\n      return price * 0.002;\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price = reserve[1] * 10 ** decimalZero / (reserve[0] * 10 ** decimalOne);\n      return price * 0.002;\n    }\n  }; // console.log(\"anchorPrice::\", BigNumber(anchorPrice));\n\n\n  const calculateAPR = async (allocPoint, lpToken, lpWorth) => {\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(await FarmService.totalAllocationPoint());\n    const anchorPerBlock = Number(await FarmService.pantherPerBlock()) / 10 ** TOKEN_LIST[1].decimals;\n    console.log(\"anchorPerBlock\", anchorPerBlock); //need to calculate usd price.\n\n    const liquidity = await handleLiquidity(lpToken); // console.log(\"liquidity: \", liquidity);\n    // console.log(\"anchorPrice\", anchorPrice);\n    // console.log(\"totalAllcationPoint\", totalAllcationPoint);\n    // console.log(\"anchorPerBlock\", anchorPerBlock);\n\n    if (liquidity != 0) {\n      const apr = allocPoint / totalAllcationPoint * (anchorPerBlock * 5760 * 365 * 100 * anchorPrice) / liquidity;\n      setROI({\n        allocPoint,\n        totalAllcationPoint,\n        anchorPerBlock,\n        anchorPrice,\n        liquidity,\n        lpWorth\n      });\n      return apr.toFixed(2);\n    }\n\n    return 0;\n  };\n\n  const handleLiquidity = async pairAddress => {\n    if (pairAddress != \"0x0000000000000000000000000000000000000000\") {\n      const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n      const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n      const reserve = await ExchangeService.getReserves(pairAddress); // const tokenZeroPairUSDT = await ExchangeService.getPair(\n      //   tokenZero,\n      //   TOKEN_LIST[2]?.address\n      // );\n      // const tokenOnePairUSDT = await ExchangeService.getPair(\n      //   tokenOne,\n      //   TOKEN_LIST[2]?.address\n      // );\n      // const tokenZeroPairBNB = await ExchangeService.getPair(tokenZero, WETH);\n      // const tokenOnePairBNB = await ExchangeService.getPair(tokenOne, WETH);\n\n      const decimalZero = await ContractServices.getDecimals(tokenZero);\n      const decimalOne = await ContractServices.getDecimals(tokenOne);\n      console.log(\"tokenZero\", tokenZero, \"tokenOne\", tokenOne);\n      console.log(\"decimalZero\", decimalZero, \"decimalOne\", decimalOne); //let priceA = 0.001;\n      //let priceB = 0.002;\n\n      let priceA = await getDollarAPR(tokenZero);\n      let priceB = await getDollarAPR(tokenOne);\n      console.log(\"priceA\", \"priceB\", priceA, priceB); // if (tokenZero.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceA = 1;\n      // } else if (tokenZero.toLowerCase() == WETH.toLowerCase()) {\n      //   //  priceA = await calPrice(BNB_BUSD_LP);\n      //   priceA = await getDollarAPR(tokenZero);\n      // }\n      // if (tokenOne.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceB = 1;\n      // } else if (tokenOne.toLowerCase() == WETH.toLowerCase()) {\n      //   //priceB = await calPrice(BNB_BUSD_LP);\n      //   priceB = await getDollarAPR(tokenOne);\n      // }\n      // if (priceA == 0) {\n      //   if (tokenZeroPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     // priceA = await calPrice(tokenZeroPairUSDT);\n      //     priceB = await getDollarAPR(tokenOne);\n      //   } else if (\n      //     tokenZeroPairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     //  priceA = await calPrice(tokenZeroPairBNB);\n      //     priceA = await getDollarAPR(tokenZero);\n      //   } else {\n      //     priceA = 0;\n      //   }\n      // }\n      // if (priceB == 0) {\n      //   if (tokenOnePairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceB = await getDollarAPR(tokenOne);\n      //   } else if (\n      //     tokenOnePairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceB = await getDollarAPR(tokenOne);\n      //   } else {\n      //     priceB = 0;\n      //   }\n      // }\n\n      const totalSupply = await ExchangeService.getTotalSupply(pairAddress);\n      const tokenStaked = await ExchangeService.getTokenStaked(pairAddress);\n      const liquidity = (reserve[0] / 10 ** decimalZero * priceA + reserve[1] / 10 ** decimalOne * priceB) / totalSupply * tokenStaked;\n      console.log(\"liquidity\", liquidity, \"totalSupply\", totalSupply);\n      return liquidity;\n    } else {\n      return 0;\n    }\n  };\n\n  const handleIcon = symbol => {\n    if (symbol != undefined) {\n      const tokenObj = TOKEN_LIST.find(d => d.symbol.toLowerCase() === symbol.toLowerCase());\n      return tokenObj != undefined && tokenObj.icon;\n    }\n  };\n\n  const handleDefaultIcon = symbol => {\n    if (symbol != undefined) {\n      const tokenObj = TOKEN_LIST.find(d => d.symbol.toLowerCase() === symbol.toLowerCase());\n      let index = tokenObj != undefined && tokenObj.icon.lastIndexOf(\"/\") + 1;\n      let filename = tokenObj != undefined && tokenObj.icon.substr(index);\n      return filename == \"default.60b90c93.svg\" ? \"farm-coin\" : \"\";\n    }\n  };\n\n  const earnedSaitaValue = (dollarValue, rewards) => {\n    let fixedAfterDecimal = Number(0.01 * rewards).toFixed(9);\n    let res = addCommas(fixedAfterDecimal);\n    return res;\n  };\n\n  const earnedDollarValue = (dollarValue, rewards) => {\n    let fixedAfterDecimal = Number(dollarValue * rewards).toFixed(9);\n    let res = addCommas(fixedAfterDecimal);\n    return res;\n  };\n\n  useEffect(async () => {\n    await getSaitaDollarValue();\n    init();\n  }, [isUserConnected]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      className: `planet_bar`,\n      onClick: () => setClassToggle(!classToggle),\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"d-flex flex-wrap flex-md-nowrap align-items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cions col\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"coin_imgs uppr\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: handleIcon(lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.symbol0) ? handleIcon(lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.symbol0) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"coin_imgs dwn\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: handleIcon(lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.symbol1) ? handleIcon(lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.symbol1) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"coin_title\",\n            children: lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fee col\",\n          children: [poolInfo.depositFeeBP && Number(poolInfo.depositFeeBP) === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info_about_card_feeinfo\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: props.fee_icon,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), \" No Fee\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prcentx\",\n            children: [poolInfo === null || poolInfo === void 0 ? void 0 : poolInfo.allocPoint, \"X\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coin_detail col\",\n          children: status && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"apr\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"APR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [addCommas(apr) === \"NaN\" || NaN ? 0 : addCommas(apr), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lqdty col\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Liquidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", addCommas(Number(liquidity.toFixed(2))) === \"NaN\" || NaN ? 0 : addCommas(Number(liquidity.toFixed(2)))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"erndsaita col\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Earned Saita\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: addCommas(stakeAmounts.rewards) === \"NaN\" || NaN ? 0 : addCommas(stakeAmounts.rewards)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 541,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", \" \", earnedSaitaValue(dollarValue, stakeAmounts.rewards) === \"NaN\" || NaN ? 0 : earnedSaitaValue(dollarValue, stakeAmounts.rewards)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dtl_btn col\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Details\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: DownArrow\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 558,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: classToggle ? \"planet_strip\" : \"d-none\",\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"available_funds\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"funds\",\n          children: [isUserConnected ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: showIncrease ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardFarm_increase\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => beforeStake(\"withdraw\"),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"-\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 575,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => beforeStake(\"deposit\"),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: showApproveButton ? /*#__PURE__*/_jsxDEV(Button, {\n                className: \"funds_btn\",\n                onClick: () => handleTokenApproval(),\n                children: \"Enable Farm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                className: \"funds_btn\",\n                onClick: () => beforeStake(\"deposit\"),\n                children: \"Stake\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 23\n              }, this)\n            }, void 0, false)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => toast.error(\"Connect to wallet first!\"),\n              className: \"funds_btn\",\n              children: \"Unlock Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count_funds\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Available LP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [balance, \" LP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"LP Worth - \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", addCommas(Number(worth.toFixed(2)))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"forwd_arrow\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: RightArrow,\n              alt: \"right-arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"funds\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count_funds\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName, \" STAKED\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 15\n            }, this), showIncrease ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", addCommas(stakeAmounts.amount)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", earnedDollarValue(stakeAmounts.amount, worth) === \"NaN\" || NaN ? 0 : earnedDollarValue(stakeAmounts.amount, worth)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"forwd_arrow\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: RightArrow,\n              alt: \"right-arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"funds\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setShowHarvest(false);\n              harvestOnClick(pid, lpTokenDetails === null || lpTokenDetails === void 0 ? void 0 : lpTokenDetails.lpTokenName);\n            },\n            disabled: !showHarvest,\n            className: \"funds_btn\",\n            children: \"Harvest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count_funds\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Earned\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [addCommas(stakeAmounts.rewards) === \"NaN\" || NaN ? 0 : addCommas(stakeAmounts.rewards), \" \", \"SAITA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"$\", earnedDollarValue(dollarValue, stakeAmounts.rewards) === \"NaN\" || NaN ? 0 : earnedDollarValue(dollarValue, stakeAmounts.rewards)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"funds\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"count_funds\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Deposit Fee :\", \" \", poolInfo.depositFeeBP ? Number(poolInfo.depositFeeBP) / 10000 * 100 : 0, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"d-block\",\n              children: [\"Harvest Interval:\", \" \", poolInfo.harvestInterval ? Number((poolInfo.harvestInterval / 3600).toFixed(2)) : 0, \" \", \"Hour(s)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PlanetCard, \"13oyZdr7p3sTkYMYfIBkWh1sXzo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PlanetCard;\nexport default PlanetCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanetCard\");","map":{"version":3,"names":["React","useEffect","useState","Button","Table","RightArrow","DownArrow","useDispatch","useSelector","ExchangeService","MAIN_CONTRACT_LIST","WETH","ANCHOR_BUSD_LP","TOKEN_LIST","BNB_BUSD_LP","ContractServices","FarmService","BigNumber","toast","addTransaction","startLoading","stopLoading","addCommas","PlanetCard","props","classToggle","setClassToggle","dispatch","isUserConnected","state","persist","farm","poolInfo","userInfo","pid","index","currentIndex","handleChange","harvestOnClick","stakeHandle","handleRoiModal","status","lpTokenDetails","setLpTokenDetails","showIncrease","setShowIncrease","totalSupply","setTotalSupply","liquidity","setLiquidity","worth","setWorth","showApproveButton","setShowApproveButton","approvalConfirmation","setApprovalConfirmation","showHarvest","setShowHarvest","balance","setBalance","stakeAmounts","setStakeAmounts","amount","rewards","apr","setApr","roi","setROI","allocPoint","totalAllcationPoint","anchorPerBlock","anchorPrice","lpWorth","dollarValue","setAnchorDollarValue","getSaitaDollarValue","lpToken","undefined","reserves","getReserves","val","toFixed","error","console","log","getDollarAPR","address","toLowerCase","tokenZero","getTokenZero","tokenOne","getTokenOne","decimalZero","getDecimals","decimalOne","pair","getPair","resA","resB","init","totalSupplyTemp","getTotalSupply","handleLiquidity","tokenStaked","getTokenStaked","lpTokenDetailsTemp","getLpTokenDetails","a","calculateAPR","Number","allowance","allowanceToken","check","isGreaterThanOrEqualTo","getTokenBalance","decimals","pendingSaitama","nextHarvestUntil","canHarvest","handleTokenApproval","acc","getDefaultAccount","info","value","r","approveToken","data","message","tx","transactionHash","err","beforeStake","type","bal","calPrice","pairAddress","price","reserve","totalAllocationPoint","pantherPerBlock","priceA","priceB","handleIcon","symbol","tokenObj","find","d","icon","handleDefaultIcon","lastIndexOf","filename","substr","earnedSaitaValue","fixedAfterDecimal","res","earnedDollarValue","symbol0","symbol1","lpTokenName","depositFeeBP","fee_icon","NaN","harvestInterval"],"sources":["/data/test/saitaClientGit/src/components/PlanetCard/PlanetCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport \"./PlanetCard.scss\";\nimport RightArrow from \"../../assets/images/right-arrow.png\";\nimport DownArrow from \"../../assets/images/down-arrow.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ExchangeService } from \"../../services/ExchangeService\";\nimport {\n  MAIN_CONTRACT_LIST,\n  WETH,\n  ANCHOR_BUSD_LP,\n  TOKEN_LIST,\n  BNB_BUSD_LP,\n} from \"../../assets/tokens\";\nimport { ContractServices } from \"../../services/ContractServices\";\nimport { FarmService } from \"../../services/FarmService\";\nimport { BigNumber } from \"bignumber.js\";\nimport { toast } from \"../Toast/Toast\";\nimport { addTransaction, startLoading, stopLoading } from \"../../redux/actions\";\nimport { addCommas } from \"../../constant\";\nimport defaultImg from \"../../assets/images/token_icons/default.svg\";\n\nconst PlanetCard = (props) => {\n  const [classToggle, setClassToggle] = useState(false);\n\n  const dispatch = useDispatch();\n  const isUserConnected = useSelector((state) => state.persist.isUserConnected);\n  const {\n    farm: { poolInfo, userInfo, pid },\n    index,\n    currentIndex,\n    handleChange,\n    harvestOnClick,\n    stakeHandle,\n    handleRoiModal,\n    status,\n  } = props;\n\n  // console.log(\"PoolInfo:\", poolInfo);\n  const [lpTokenDetails, setLpTokenDetails] = useState(null);\n  const [showIncrease, setShowIncrease] = useState(false);\n  const [totalSupply, setTotalSupply] = useState(0);\n  const [liquidity, setLiquidity] = useState(0);\n  const [worth, setWorth] = useState(0);\n  const [showApproveButton, setShowApproveButton] = useState(true);\n  const [approvalConfirmation, setApprovalConfirmation] = useState(false);\n  const [showHarvest, setShowHarvest] = useState(false);\n  const [balance, setBalance] = useState(0);\n  const [stakeAmounts, setStakeAmounts] = useState({ amount: 0, rewards: 0 });\n  const [apr, setApr] = useState(0);\n  const [roi, setROI] = useState({\n    allocPoint: 0,\n    totalAllcationPoint: 0,\n    anchorPerBlock: 0,\n    anchorPrice: 0,\n    liquidity: 0,\n    lpWorth: 0,\n  });\n  const [dollarValue, setAnchorDollarValue] = useState(0.01);\n\n  const getSaitaDollarValue = async () => {\n    if (poolInfo.lpToken != undefined) {\n      try {\n        let reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        // const token0 = await ExchangeService.getTokenZero(poolInfo.lpToken);\n        // const token1 = await ExchangeService.getTokenOne(poolInfo.lpToken);\n\n        // if ((token0.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) || (token1.toLowerCase() === TOKEN_LIST[1].address.toLowerCase())) {\n        //   reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n        // } else {\n\n        //   //const pair = await ExchangeService.getPairFromPancakeFactory(poolInfo.lpToken);\n        //   reserves = await ExchangeService.getReserves(poolInfo.lpToken);\n        // }\n\n        let val = reserves[1] / reserves[0];\n        val = val || 0;\n        setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const getDollarAPR = async (address) => {\n    try {\n      if (address.toLowerCase() === TOKEN_LIST[1].address.toLowerCase()) {\n        const tokenZero = await ExchangeService.getTokenZero(ANCHOR_BUSD_LP);\n        const tokenOne = await ExchangeService.getTokenOne(ANCHOR_BUSD_LP);\n\n        const decimalZero = await ContractServices.getDecimals(tokenZero);\n        const decimalOne = await ContractServices.getDecimals(tokenOne);\n        const reserves = await ExchangeService.getReserves(ANCHOR_BUSD_LP);\n\n        let val;\n        if (tokenZero.toLowerCase() == TOKEN_LIST[1].address.toLowerCase()) {\n          val =\n            reserves[1] / 10 ** decimalOne / (reserves[0] / 10 ** decimalZero);\n        } else {\n          val =\n            reserves[0] / 10 ** decimalZero / (reserves[1] / 10 ** decimalOne);\n        }\n        val = val || 0;\n        setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      } else if (\n        address.toLowerCase() === TOKEN_LIST[2].address.toLowerCase()\n      ) {\n        return 1;\n      } else if (address.toLowerCase() != TOKEN_LIST[2].address.toLowerCase()) {\n        const pair = await ExchangeService.getPair(\n          address,\n          TOKEN_LIST[2].address\n        );\n        const tokenZero = await ExchangeService.getTokenZero(pair);\n        const tokenOne = await ExchangeService.getTokenOne(pair);\n\n        const decimalZero = await ContractServices.getDecimals(tokenZero);\n        const decimalOne = await ContractServices.getDecimals(tokenOne);\n        const reserves = await ExchangeService.getReserves(pair);\n        let val;\n        if (tokenZero.toLowerCase() == TOKEN_LIST[0].address.toLowerCase()) {\n          console.log(\n            \"HERE:\",\n            reserves[1] / 10 ** decimalOne,\n            reserves[0] / 10 ** decimalZero\n          );\n          val =\n            reserves[1] / 10 ** decimalOne / (reserves[0] / 10 ** decimalZero);\n        } else {\n          console.log(\n            \"HERE: else \",\n            reserves[1] / 10 ** decimalOne,\n            reserves[0] / 10 ** decimalZero\n          );\n          const resA = reserves[1] / 10 ** decimalZero;\n          const resB = reserves[0] / 10 ** decimalOne;\n          val = resA / resB;\n        }\n        val = val || 0;\n\n        console.log(\"VAlue:\", val);\n        setAnchorDollarValue(val.toFixed(3));\n        return val.toFixed(3);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const init = async () => {\n    if (poolInfo) {\n      const { lpToken } = poolInfo;\n      if (lpToken) {\n        const totalSupplyTemp = await ContractServices.getTotalSupply(lpToken);\n        setTotalSupply(totalSupplyTemp);\n        const liquidity = await handleLiquidity(lpToken);\n\n        setLiquidity(liquidity);\n        const tokenStaked = await ExchangeService.getTokenStaked(lpToken);\n        // const tokenStakedbypiyush = await\n        const lpWorth = liquidity * balance;\n        setWorth(lpWorth);\n        const lpTokenDetailsTemp = await FarmService.getLpTokenDetails(lpToken);\n        console.log(\"balance\", balance);\n        setLpTokenDetails(lpTokenDetailsTemp);\n        console.log(\n          \"liquidity\",\n          liquidity,\n          \"tokenStaked\",\n          tokenStaked,\n          \"lpToken\",\n          lpToken\n        );\n        const a = await calculateAPR(\n          Number(poolInfo.allocPoint),\n          lpToken,\n          liquidity\n        );\n        lpTokenDetailsTemp.apr = a;\n        setApr(a);\n\n        if (isUserConnected) {\n          const allowance = await ContractServices.allowanceToken(\n            lpToken,\n            MAIN_CONTRACT_LIST.farm.address,\n            isUserConnected\n          );\n          let check = true;\n          if (\n            BigNumber(allowance).isGreaterThanOrEqualTo(BigNumber(2 * 255 - 1))\n          ) {\n            setShowApproveButton(false);\n            check = false;\n          }\n\n          let balance = await ContractServices.getTokenBalance(\n            poolInfo.lpToken,\n            isUserConnected\n          );\n          if (balance > 0.00001) {\n            balance -= 0.00001;\n          }\n          setBalance(balance);\n          const amount = userInfo.amount / 10 ** lpTokenDetailsTemp.decimals;\n          // const amount = Number(\n          //   (\n          //     Number(userInfo.amount) /\n          //     10 ** Number(lpTokenDetailsTemp.decimals)\n          //   )\n          // ).toFixed(18)\n\n          const rewards = Number(\n            Number(\n              (await FarmService.pendingSaitama(pid, isUserConnected)) / 10 ** 9\n            ).toFixed(9)\n          );\n          if (!check && amount > 0) {\n            setShowIncrease(true);\n          }\n          setStakeAmounts({ amount, rewards });\n\n          //nextHarvest\n          const nextHarvestUntil = await FarmService.canHarvest(\n            pid,\n            isUserConnected\n          );\n          if (\n            !check &&\n            rewards > 0 &&\n            Number(userInfo.nextHarvestUntil) > 0 &&\n            nextHarvestUntil\n          ) {\n            setShowHarvest(true);\n          }\n        }\n      }\n    }\n  };\n  //call web3 approval function\n  const handleTokenApproval = async () => {\n    const acc = await ContractServices.getDefaultAccount();\n    if (acc && acc.toLowerCase() !== isUserConnected.toLowerCase()) {\n      return toast.error(\"Wallet address doesn`t match!\");\n    }\n    if (approvalConfirmation) {\n      return toast.info(\"Token approval is processing\");\n    }\n    // (2*256 - 1);\n    const value =\n      \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n\n    try {\n      dispatch(startLoading());\n      setApprovalConfirmation(true);\n      const r = await ContractServices.approveToken(\n        isUserConnected,\n        value,\n        MAIN_CONTRACT_LIST.farm.address,\n        poolInfo.lpToken\n      );\n      if (r) {\n        let data = {\n          message: `Approve LP Token`,\n          tx: r.transactionHash,\n        };\n        dispatch(addTransaction(data));\n        setApprovalConfirmation(false);\n        init();\n      }\n      dispatch(stopLoading());\n    } catch (err) {\n      setApprovalConfirmation(false);\n      dispatch(stopLoading());\n      toast.error(\"Approval Transaction Reverted!\");\n    }\n  };\n\n  const beforeStake = async (type) => {\n    if (isUserConnected) {\n      let bal = 0;\n      if (type === \"deposit\") {\n        bal = balance;\n      }\n      if (type === \"withdraw\") {\n        bal = stakeAmounts.amount;\n      }\n      stakeHandle({ pid, poolInfo, lpTokenDetails, balance: bal }, type);\n    } else {\n      return toast.error(\"Connect wallet first!\");\n    }\n  };\n\n  const calPrice = async (pairAddress) => {\n    let price = 0;\n\n    if (pairAddress == \"0x0000000000000000000000000000000000000000\") {\n      return 0;\n    }\n    const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n    const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n    const reserve = await ExchangeService.getReserves(pairAddress);\n    const decimalZero = await ContractServices.getDecimals(tokenZero);\n    const decimalOne = await ContractServices.getDecimals(tokenOne);\n\n    if (tokenZero.toLowerCase() === TOKEN_LIST[2]?.address.toLowerCase()) {\n      return (price =\n        (reserve[0] * 10 ** decimalOne) / (reserve[1] * 10 ** decimalZero));\n    }\n    // console.log(\n    //   tokenZero,\n    //   tokenOne,\n    //   reserve,\n    //   decimalZero,\n    //   decimalOne,\n    //   \"token k baare m jaankari\"\n    // );\n    if (tokenOne.toLowerCase() === TOKEN_LIST[2]?.address.toLowerCase()) {\n      return (price =\n        (reserve[1] * 10 ** decimalZero) / (reserve[0] * 10 ** decimalOne));\n    }\n\n    // let priceBNBToUSD = await calPrice(BNB_BUSD_LP); //replace with BNB-USD pair\n    if (tokenZero.toLowerCase() === WETH.toLowerCase()) {\n      price =\n        (reserve[0] * 10 ** decimalOne) / (reserve[1] * 10 ** decimalZero);\n      return price * 0.002;\n    }\n\n    if (tokenOne.toLowerCase() === WETH.toLowerCase()) {\n      price =\n        (reserve[1] * 10 ** decimalZero) / (reserve[0] * 10 ** decimalOne);\n      return price * 0.002;\n    }\n  };\n  // console.log(\"anchorPrice::\", BigNumber(anchorPrice));\n  const calculateAPR = async (allocPoint, lpToken, lpWorth) => {\n    const anchorPrice = await calPrice(ANCHOR_BUSD_LP);\n    const totalAllcationPoint = Number(\n      await FarmService.totalAllocationPoint()\n    );\n\n    const anchorPerBlock =\n      Number(await FarmService.pantherPerBlock()) /\n      10 ** TOKEN_LIST[1].decimals;\n    console.log(\"anchorPerBlock\", anchorPerBlock);\n    //need to calculate usd price.\n    const liquidity = await handleLiquidity(lpToken);\n    // console.log(\"liquidity: \", liquidity);\n    // console.log(\"anchorPrice\", anchorPrice);\n    // console.log(\"totalAllcationPoint\", totalAllcationPoint);\n    // console.log(\"anchorPerBlock\", anchorPerBlock);\n    if (liquidity != 0) {\n      const apr =\n        ((allocPoint / totalAllcationPoint) *\n          (anchorPerBlock * 5760 * 365 * 100 * anchorPrice)) /\n        liquidity;\n      setROI({\n        allocPoint,\n        totalAllcationPoint,\n        anchorPerBlock,\n        anchorPrice,\n        liquidity,\n        lpWorth,\n      });\n\n      return apr.toFixed(2);\n    }\n\n    return 0;\n  };\n  const handleLiquidity = async (pairAddress) => {\n    if (pairAddress != \"0x0000000000000000000000000000000000000000\") {\n      const tokenZero = await ExchangeService.getTokenZero(pairAddress);\n      const tokenOne = await ExchangeService.getTokenOne(pairAddress);\n      const reserve = await ExchangeService.getReserves(pairAddress);\n\n      // const tokenZeroPairUSDT = await ExchangeService.getPair(\n      //   tokenZero,\n      //   TOKEN_LIST[2]?.address\n      // );\n      // const tokenOnePairUSDT = await ExchangeService.getPair(\n      //   tokenOne,\n      //   TOKEN_LIST[2]?.address\n      // );\n\n      // const tokenZeroPairBNB = await ExchangeService.getPair(tokenZero, WETH);\n      // const tokenOnePairBNB = await ExchangeService.getPair(tokenOne, WETH);\n\n      const decimalZero = await ContractServices.getDecimals(tokenZero);\n      const decimalOne = await ContractServices.getDecimals(tokenOne);\n      console.log(\"tokenZero\", tokenZero, \"tokenOne\", tokenOne);\n      console.log(\"decimalZero\", decimalZero, \"decimalOne\", decimalOne);\n\n      //let priceA = 0.001;\n      //let priceB = 0.002;\n      let priceA = await getDollarAPR(tokenZero);\n      let priceB = await getDollarAPR(tokenOne);\n      console.log(\"priceA\", \"priceB\", priceA, priceB);\n      // if (tokenZero.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceA = 1;\n      // } else if (tokenZero.toLowerCase() == WETH.toLowerCase()) {\n      //   //  priceA = await calPrice(BNB_BUSD_LP);\n      //   priceA = await getDollarAPR(tokenZero);\n      // }\n\n      // if (tokenOne.toLowerCase() == TOKEN_LIST[2].address.toLowerCase()) {\n      //   priceB = 1;\n      // } else if (tokenOne.toLowerCase() == WETH.toLowerCase()) {\n      //   //priceB = await calPrice(BNB_BUSD_LP);\n      //   priceB = await getDollarAPR(tokenOne);\n      // }\n\n      // if (priceA == 0) {\n      //   if (tokenZeroPairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     // priceA = await calPrice(tokenZeroPairUSDT);\n      //     priceB = await getDollarAPR(tokenOne);\n      //   } else if (\n      //     tokenZeroPairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     //  priceA = await calPrice(tokenZeroPairBNB);\n      //     priceA = await getDollarAPR(tokenZero);\n      //   } else {\n      //     priceA = 0;\n      //   }\n      // }\n\n      // if (priceB == 0) {\n      //   if (tokenOnePairUSDT != \"0x0000000000000000000000000000000000000000\") {\n      //     priceB = await getDollarAPR(tokenOne);\n      //   } else if (\n      //     tokenOnePairBNB != \"0x0000000000000000000000000000000000000000\"\n      //   ) {\n      //     priceB = await getDollarAPR(tokenOne);\n      //   } else {\n      //     priceB = 0;\n      //   }\n      // }\n\n      const totalSupply = await ExchangeService.getTotalSupply(pairAddress);\n      const tokenStaked = await ExchangeService.getTokenStaked(pairAddress);\n      const liquidity =\n        (((reserve[0] / 10 ** decimalZero) * priceA +\n          (reserve[1] / 10 ** decimalOne) * priceB) /\n          totalSupply) *\n        tokenStaked;\n      console.log(\"liquidity\", liquidity, \"totalSupply\", totalSupply);\n      return liquidity;\n    } else {\n      return 0;\n    }\n  };\n  const handleIcon = (symbol) => {\n    if (symbol != undefined) {\n      const tokenObj = TOKEN_LIST.find(\n        (d) => d.symbol.toLowerCase() === symbol.toLowerCase()\n      );\n      return tokenObj != undefined && tokenObj.icon;\n    }\n  };\n\n  const handleDefaultIcon = (symbol) => {\n    if (symbol != undefined) {\n      const tokenObj = TOKEN_LIST.find(\n        (d) => d.symbol.toLowerCase() === symbol.toLowerCase()\n      );\n      let index = tokenObj != undefined && tokenObj.icon.lastIndexOf(\"/\") + 1;\n      let filename = tokenObj != undefined && tokenObj.icon.substr(index);\n      return filename == \"default.60b90c93.svg\" ? \"farm-coin\" : \"\";\n    }\n  };\n  const earnedSaitaValue = (dollarValue, rewards) => {\n    let fixedAfterDecimal = Number(0.01 * rewards).toFixed(9);\n    let res = addCommas(fixedAfterDecimal);\n    return res;\n  };\n\n  const earnedDollarValue = (dollarValue, rewards) => {\n    let fixedAfterDecimal = Number(dollarValue * rewards).toFixed(9);\n    let res = addCommas(fixedAfterDecimal);\n    return res;\n  };\n  useEffect(async () => {\n    await getSaitaDollarValue();\n    init();\n  }, [isUserConnected]);\n  return (\n    <>\n      <tr className={`planet_bar`} onClick={() => setClassToggle(!classToggle)}>\n        <td className=\"d-flex flex-wrap flex-md-nowrap align-items-start\">\n          <div className=\"cions col\">\n            <span className=\"coin_imgs uppr\">\n              <img\n                src={\n                  handleIcon(lpTokenDetails?.symbol0)\n                    ? handleIcon(lpTokenDetails?.symbol0)\n                    : \"\"\n                }\n              />\n            </span>\n            <span className=\"coin_imgs dwn\">\n              <img\n                src={\n                  handleIcon(lpTokenDetails?.symbol1)\n                    ? handleIcon(lpTokenDetails?.symbol1)\n                    : \"\"\n                }\n              />\n            </span>\n            <span className=\"coin_title\">{lpTokenDetails?.lpTokenName}</span>\n          </div>\n          <div className=\"fee col\">\n            {poolInfo.depositFeeBP && Number(poolInfo.depositFeeBP) === 0 && (\n              <div className=\"info_about_card_feeinfo\">\n                {\" \"}\n                <img src={props.fee_icon} alt=\"\" /> No Fee\n              </div>\n            )}\n            <div className=\"prcentx\">{poolInfo?.allocPoint}X</div>\n          </div>\n          <div className=\"coin_detail col\">\n            {status && (\n              <div className=\"apr\">\n                <span>APR</span>\n                <p>{addCommas(apr) === \"NaN\" || NaN ? 0 : addCommas(apr)}%</p>\n              </div>\n            )}\n          </div>\n          <div className=\"lqdty col\">\n            <span>Liquidity</span>\n            <p>\n              $\n              {addCommas(Number(liquidity.toFixed(2))) === \"NaN\" || NaN\n                ? 0\n                : addCommas(Number(liquidity.toFixed(2)))}\n            </p>\n          </div>\n          <div className=\"erndsaita col\">\n            <span>Earned Saita</span>\n            <p>\n              {addCommas(stakeAmounts.rewards) === \"NaN\" || NaN\n                ? 0\n                : addCommas(stakeAmounts.rewards)}\n            </p>\n            <p>\n              ${\" \"}\n              {earnedSaitaValue(dollarValue, stakeAmounts.rewards) === \"NaN\" ||\n              NaN\n                ? 0\n                : earnedSaitaValue(dollarValue, stakeAmounts.rewards)}\n            </p>\n          </div>\n          <div className=\"dtl_btn col\">\n            <p>\n              Details{\" \"}\n              <span>\n                <img src={DownArrow} />\n              </span>\n            </p>\n          </div>\n        </td>\n      </tr>\n      <tr className={classToggle ? \"planet_strip\" : \"d-none\"}>\n        <td className=\"available_funds\">\n          <div className=\"funds\">\n            {isUserConnected ? (\n              <>\n                {showIncrease ? (\n                  <div className=\"cardFarm_increase\">\n                    <button\n                      type=\"button\"\n                      onClick={() => beforeStake(\"withdraw\")}\n                    >\n                      <span>-</span>\n                    </button>\n                    <button\n                      type=\"button\"\n                      onClick={() => beforeStake(\"deposit\")}\n                    >\n                      <span>+</span>\n                    </button>\n                  </div>\n                ) : (\n                  <>\n                    {showApproveButton ? (\n                      <Button\n                        className=\"funds_btn\"\n                        onClick={() => handleTokenApproval()}\n                      >\n                        Enable Farm\n                      </Button>\n                    ) : (\n                      <Button\n                        className=\"funds_btn\"\n                        onClick={() => beforeStake(\"deposit\")}\n                      >\n                        Stake\n                      </Button>\n                    )}\n                  </>\n                )}\n              </>\n            ) : (\n              <>\n                <Button\n                  onClick={() => toast.error(\"Connect to wallet first!\")}\n                  className=\"funds_btn\"\n                >\n                  Unlock Wallet\n                </Button>\n              </>\n            )}\n            <div className=\"count_funds\">\n              <span>Available LP</span>\n              <p>{balance} LP</p>\n              <span>LP Worth - </span>\n              <span>${addCommas(Number(worth.toFixed(2)))}</span>\n            </div>\n            <span className=\"forwd_arrow\">\n              <img src={RightArrow} alt={\"right-arrow\"} />\n            </span>\n          </div>\n          <div className=\"funds\">\n            <div className=\"count_funds\">\n              <span>{lpTokenDetails?.lpTokenName} STAKED</span>\n              {showIncrease ? (\n                <p> {addCommas(stakeAmounts.amount)}</p>\n              ) : (\n                <p>0</p>\n              )}\n              <span>\n                $\n                {earnedDollarValue(stakeAmounts.amount, worth) === \"NaN\" || NaN\n                  ? 0\n                  : earnedDollarValue(stakeAmounts.amount, worth)}\n              </span>\n            </div>{\" \"}\n            <span className=\"forwd_arrow\">\n              <img src={RightArrow} alt={\"right-arrow\"} />\n            </span>\n          </div>\n          <div className=\"funds\">\n            <Button\n              onClick={() => {\n                setShowHarvest(false);\n                harvestOnClick(pid, lpTokenDetails?.lpTokenName);\n              }}\n              disabled={!showHarvest}\n              className=\"funds_btn\"\n            >\n              Harvest\n            </Button>\n            <div className=\"count_funds\">\n              <span>Earned</span>\n              <p>\n                {addCommas(stakeAmounts.rewards) === \"NaN\" || NaN\n                  ? 0\n                  : addCommas(stakeAmounts.rewards)}{\" \"}\n                SAITA\n              </p>\n              <span>\n                $\n                {earnedDollarValue(dollarValue, stakeAmounts.rewards) ===\n                  \"NaN\" || NaN\n                  ? 0\n                  : earnedDollarValue(dollarValue, stakeAmounts.rewards)}\n              </span>\n            </div>\n          </div>\n          <div className=\"funds\">\n            <div className=\"count_funds\">\n              <span>\n                Deposit Fee :{\" \"}\n                {poolInfo.depositFeeBP\n                  ? (Number(poolInfo.depositFeeBP) / 10000) * 100\n                  : 0}\n                %\n              </span>\n              <span className=\"d-block\">\n                Harvest Interval:{\" \"}\n                {poolInfo.harvestInterval\n                  ? Number((poolInfo.harvestInterval / 3600).toFixed(2))\n                  : 0}{\" \"}\n                Hour(s)\n              </span>\n            </div>\n          </div>\n        </td>\n      </tr>\n      {/* <Button\n        className={`planet_bar`}\n        onClick={() => setClassToggle(!classToggle)}\n      >\n        <div className=\"cions\">\n          <span className=\"coin_imgs uppr\">\n            <img\n              src={\n                handleIcon(lpTokenDetails?.symbol0)\n                  ? handleIcon(lpTokenDetails?.symbol0)\n                  : \"\"\n              }\n            />\n          </span>\n          <span className=\"coin_imgs dwn\">\n            <img\n              src={\n                handleIcon(lpTokenDetails?.symbol1)\n                  ? handleIcon(lpTokenDetails?.symbol1)\n                  : \"\"\n              }\n            />\n          </span>\n          <span className=\"coin_title\">{lpTokenDetails?.lpTokenName}</span>\n        </div>\n        {poolInfo.depositFeeBP && Number(poolInfo.depositFeeBP) === 0 && (\n          <div className=\"info_about_card_feeinfo\">\n            {\" \"}\n            <img src={props.fee_icon} alt=\"\" /> No Fee\n          </div>\n        )}\n        <div className=\"prcentx\">{poolInfo?.allocPoint}X</div>\n        <div className=\"coin_detail\">\n          {status && (\n            <div className=\"apr\">\n              <span>APR</span>\n              <p>{addCommas(apr) === \"NaN\" || NaN ? 0 : addCommas(apr)}%</p>\n            </div>\n          )}\n          <div className=\"lqdty\">\n            <span>Liquidity</span>\n            <p>\n              $\n              {addCommas(Number(liquidity.toFixed(2))) === \"NaN\" || NaN\n                ? 0\n                : addCommas(Number(liquidity.toFixed(2)))}\n            </p>\n          </div>\n          <div className=\"erndsaita\">\n            <span>Earned Saita</span>\n            <p>\n              {addCommas(stakeAmounts.rewards) === \"NaN\" || NaN\n                ? 0\n                : addCommas(stakeAmounts.rewards)}\n            </p>\n            <p>\n              ${\" \"}\n              {earnedSaitaValue(dollarValue, stakeAmounts.rewards) === \"NaN\" ||\n                NaN\n                ? 0\n                : earnedSaitaValue(dollarValue, stakeAmounts.rewards)}\n            </p>\n          </div>\n        </div>\n        <div className=\"dtl_btn\">\n          <p>\n            Details{\" \"}\n            <span>\n              <img src={DownArrow} />\n            </span>\n          </p>\n        </div>\n      </Button> */}\n    </>\n  );\n};\n\nexport default PlanetCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}